{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"MkDocs \u00b6 Markdown \u7684\u9879\u76ee\u6587\u6863\u3002 MkDocs \u662f\u4e00\u4e2a \u5feb\u901f \uff0c \u7b80\u5355 \u548c \u534e\u4e3d\u7684 \u9759\u6001\u7ad9\u70b9\u751f\u6210\u5668\uff0c\u7528\u4e8e\u6784\u5efa\u9879\u76ee\u6587\u6863\u3002 \u6587\u6863\u6e90\u6587\u4ef6\u7528 Markdown \u7f16\u5199\uff0c\u5e76\u4f7f\u7528\u5355\u4e2a YAML \u914d\u7f6e\u6587\u4ef6\u8fdb\u884c\u914d\u7f6e\u3002 \u9996\u5148\u9605\u8bfb \u5165\u95e8\u6559\u7a0b \uff0c\u7136\u540e\u67e5\u770b \u7528\u6237\u6307\u5357 \u4ee5\u83b7\u5f97\u66f4\u591a\u4fe1\u606f\u3002 \u5165\u95e8 \u7528\u6237\u6307\u5357 \u7279\u5f81 \u5f88\u68d2\u7684\u4e3b\u9898 There's a stack of good looking themes available for MkDocs. Choose between the built in themes: mkdocs and readthedocs , select one of the third-party themes listed on the MkDocs Themes wiki page, or build your own . \u6613\u4e8e\u81ea\u5b9a\u4e49 Get your project documentation looking just the way you want it by customizing your theme and/or installing some plugins . Modify Markdown's behavior with Markdown extensions . Many configuration options are available. \u5728\u5de5\u4f5c\u65f6\u9884\u89c8\u60a8\u7684\u7f51\u7ad9 The built-in dev-server allows you to preview your documentation as you're writing it. It will even auto-reload and refresh your browser whenever you save your changes. \u6258\u7ba1\u5728\u4efb\u4f55\u5730\u65b9 MkDocs builds completely static HTML sites that you can host on GitHub pages, Amazon S3, or anywhere else you choose.","title":"\u4e3b\u9875"},{"location":"#mkdocs","text":"Markdown \u7684\u9879\u76ee\u6587\u6863\u3002 MkDocs \u662f\u4e00\u4e2a \u5feb\u901f \uff0c \u7b80\u5355 \u548c \u534e\u4e3d\u7684 \u9759\u6001\u7ad9\u70b9\u751f\u6210\u5668\uff0c\u7528\u4e8e\u6784\u5efa\u9879\u76ee\u6587\u6863\u3002 \u6587\u6863\u6e90\u6587\u4ef6\u7528 Markdown \u7f16\u5199\uff0c\u5e76\u4f7f\u7528\u5355\u4e2a YAML \u914d\u7f6e\u6587\u4ef6\u8fdb\u884c\u914d\u7f6e\u3002 \u9996\u5148\u9605\u8bfb \u5165\u95e8\u6559\u7a0b \uff0c\u7136\u540e\u67e5\u770b \u7528\u6237\u6307\u5357 \u4ee5\u83b7\u5f97\u66f4\u591a\u4fe1\u606f\u3002 \u5165\u95e8 \u7528\u6237\u6307\u5357","title":"MkDocs"},{"location":"getting-started/","text":"Mkdocs \u5165\u95e8 \u00b6 \u5165\u95e8\u6559\u7a0b\uff01 \u5b89\u88c5 \u00b6 To install MkDocs, run the following command from the command line: pip install mkdocs For more details, see the [Installation Guide]. \u521b\u5efa\u4e00\u4e2a\u65b0\u9879\u76ee \u00b6 Getting started is super easy. To create a new project, run the following command from the command line: mkdocs new my-project cd my-project Take a moment to review the initial project that has been created for you. There's a single configuration file named mkdocs.yml , and a folder named docs that will contain your documentation source files ( docs is the default value for the docs_dir configuration setting). Right now the docs folder just contains a single documentation page, named index.md . MkDocs comes with a built-in dev-server that lets you preview your documentation as you work on it. Make sure you're in the same directory as the mkdocs.yml configuration file, and then start the server by running the mkdocs serve command: $ mkdocs serve INFO - Building documentation... INFO - Cleaning site directory [I 160402 15:50:43 server:271] Serving on http://127.0.0.1:8000 [I 160402 15:50:43 handlers:58] Start watching changes [I 160402 15:50:43 handlers:60] Start detecting changes Open up http://127.0.0.1:8000/ in your browser, and you'll see the default home page being displayed: The dev-server also supports auto-reloading, and will rebuild your documentation whenever anything in the configuration file, documentation directory, or theme directory changes. Open the docs/index.md document in your text editor of choice, change the initial heading to MkLorum , and save your changes. Your browser will auto-reload and you should see your updated documentation immediately. Now try editing the configuration file: mkdocs.yml . Change the site_name setting to MkLorum and save the file. site_name: MkLorum site_url: https://example.com/ Your browser should immediately reload, and you'll see your new site name take effect. Note The site_name and site_url configuration options are the only two required options in your configuration file. When you create a new project, the site_url option is assigned the placeholder value: https://example.com . If the final location is known, you can change the setting now to point to it. Or you may choose to leave it alone for now. Just be sure to edit it before you deploy your site to a production server. \u6dfb\u52a0\u9875\u9762 \u00b6 Now add a second page to your documentation: curl 'https://jaspervdj.be/lorem-markdownum/markdown.txt' > docs/about.md As our documentation site will include some navigation headers, you may want to edit the configuration file and add some information about the order, title, and nesting of each page in the navigation header by adding a nav setting: site_name: MkLorum site_url: https://example.com/ nav: - Home: index.md - About: about.md Save your changes and you'll now see a navigation bar with Home and About items on the left as well as Search , Previous , and Next items on the right. Try the menu items and navigate back and forth between pages. Then click on Search . A search dialog will appear, allowing you to search for any text on any page. Notice that the search results include every occurrence of the search term on the site and links directly to the section of the page in which the search term appears. You get all of that with no effort or configuration on your part! \u4e3a\u6587\u6863\u8bbe\u7f6e\u4e3b\u9898 \u00b6 Now change the configuration file to alter how the documentation is displayed by changing the theme. Edit the mkdocs.yml file and add a theme setting: site_name: MkLorum site_url: https://example.com/ nav: - Home: index.md - About: about.md theme: readthedocs Save your changes, and you'll see the ReadTheDocs theme being used. \u66f4\u6539 Favicon \u56fe\u6807 \u00b6 By default, MkDocs uses the MkDocs favicon icon. To use a different icon, create an img subdirectory in the docs directory and copy your custom favicon.ico file to that directory. MkDocs will automatically detect and use that file as your favicon icon. \u6784\u5efa\u7f51\u7ad9 \u00b6 That's looking good. You're ready to deploy the first pass of your MkLorum documentation. First build the documentation: mkdocs build This will create a new directory, named site . Take a look inside the directory: $ ls site about fonts index.html license search.html css img js mkdocs sitemap.xml Notice that your source documentation has been output as two HTML files named index.html and about/index.html . You also have various other media that's been copied into the site directory as part of the documentation theme. You even have a sitemap.xml file and mkdocs/search_index.json . If you're using source code control such as git you probably don't want to check your documentation builds into the repository. Add a line containing site/ to your .gitignore file. echo \"site/\" >> .gitignore If you're using another source code control tool you'll want to check its documentation on how to ignore specific directories. \u5176\u4ed6\u547d\u4ee4\u548c\u9009\u9879 \u00b6 There are various other commands and options available. For a complete list of commands, use the --help flag: mkdocs --help To view a list of options available on a given command, use the --help flag with that command. For example, to get a list of all options available for the build command run the following: mkdocs build --help \u90e8\u7f72 \u00b6 The documentation site that you just built only uses static files so you'll be able to host it from pretty much anywhere. Simply upload the contents of the entire site directory to wherever you're hosting your website from and you're done. For specific instructions on a number of common hosts, see the Deploying your Docs page. \u5f97\u5230\u5e2e\u52a9 \u00b6 See the [User Guide] for more complete documentation of all of MkDocs' features. To get help with MkDocs, please use the [GitHub discussions] or [GitHub issues].","title":"\u5165\u95e8"},{"location":"getting-started/#mkdocs","text":"\u5165\u95e8\u6559\u7a0b\uff01","title":"Mkdocs \u5165\u95e8"},{"location":"getting-started/#_1","text":"To install MkDocs, run the following command from the command line: pip install mkdocs For more details, see the [Installation Guide].","title":"\u5b89\u88c5"},{"location":"getting-started/#_2","text":"Getting started is super easy. To create a new project, run the following command from the command line: mkdocs new my-project cd my-project Take a moment to review the initial project that has been created for you. There's a single configuration file named mkdocs.yml , and a folder named docs that will contain your documentation source files ( docs is the default value for the docs_dir configuration setting). Right now the docs folder just contains a single documentation page, named index.md . MkDocs comes with a built-in dev-server that lets you preview your documentation as you work on it. Make sure you're in the same directory as the mkdocs.yml configuration file, and then start the server by running the mkdocs serve command: $ mkdocs serve INFO - Building documentation... INFO - Cleaning site directory [I 160402 15:50:43 server:271] Serving on http://127.0.0.1:8000 [I 160402 15:50:43 handlers:58] Start watching changes [I 160402 15:50:43 handlers:60] Start detecting changes Open up http://127.0.0.1:8000/ in your browser, and you'll see the default home page being displayed: The dev-server also supports auto-reloading, and will rebuild your documentation whenever anything in the configuration file, documentation directory, or theme directory changes. Open the docs/index.md document in your text editor of choice, change the initial heading to MkLorum , and save your changes. Your browser will auto-reload and you should see your updated documentation immediately. Now try editing the configuration file: mkdocs.yml . Change the site_name setting to MkLorum and save the file. site_name: MkLorum site_url: https://example.com/ Your browser should immediately reload, and you'll see your new site name take effect. Note The site_name and site_url configuration options are the only two required options in your configuration file. When you create a new project, the site_url option is assigned the placeholder value: https://example.com . If the final location is known, you can change the setting now to point to it. Or you may choose to leave it alone for now. Just be sure to edit it before you deploy your site to a production server.","title":"\u521b\u5efa\u4e00\u4e2a\u65b0\u9879\u76ee"},{"location":"getting-started/#_3","text":"Now add a second page to your documentation: curl 'https://jaspervdj.be/lorem-markdownum/markdown.txt' > docs/about.md As our documentation site will include some navigation headers, you may want to edit the configuration file and add some information about the order, title, and nesting of each page in the navigation header by adding a nav setting: site_name: MkLorum site_url: https://example.com/ nav: - Home: index.md - About: about.md Save your changes and you'll now see a navigation bar with Home and About items on the left as well as Search , Previous , and Next items on the right. Try the menu items and navigate back and forth between pages. Then click on Search . A search dialog will appear, allowing you to search for any text on any page. Notice that the search results include every occurrence of the search term on the site and links directly to the section of the page in which the search term appears. You get all of that with no effort or configuration on your part!","title":"\u6dfb\u52a0\u9875\u9762"},{"location":"getting-started/#_4","text":"Now change the configuration file to alter how the documentation is displayed by changing the theme. Edit the mkdocs.yml file and add a theme setting: site_name: MkLorum site_url: https://example.com/ nav: - Home: index.md - About: about.md theme: readthedocs Save your changes, and you'll see the ReadTheDocs theme being used.","title":"\u4e3a\u6587\u6863\u8bbe\u7f6e\u4e3b\u9898"},{"location":"getting-started/#favicon","text":"By default, MkDocs uses the MkDocs favicon icon. To use a different icon, create an img subdirectory in the docs directory and copy your custom favicon.ico file to that directory. MkDocs will automatically detect and use that file as your favicon icon.","title":"\u66f4\u6539 Favicon \u56fe\u6807"},{"location":"getting-started/#_5","text":"That's looking good. You're ready to deploy the first pass of your MkLorum documentation. First build the documentation: mkdocs build This will create a new directory, named site . Take a look inside the directory: $ ls site about fonts index.html license search.html css img js mkdocs sitemap.xml Notice that your source documentation has been output as two HTML files named index.html and about/index.html . You also have various other media that's been copied into the site directory as part of the documentation theme. You even have a sitemap.xml file and mkdocs/search_index.json . If you're using source code control such as git you probably don't want to check your documentation builds into the repository. Add a line containing site/ to your .gitignore file. echo \"site/\" >> .gitignore If you're using another source code control tool you'll want to check its documentation on how to ignore specific directories.","title":"\u6784\u5efa\u7f51\u7ad9"},{"location":"getting-started/#_6","text":"There are various other commands and options available. For a complete list of commands, use the --help flag: mkdocs --help To view a list of options available on a given command, use the --help flag with that command. For example, to get a list of all options available for the build command run the following: mkdocs build --help","title":"\u5176\u4ed6\u547d\u4ee4\u548c\u9009\u9879"},{"location":"getting-started/#_7","text":"The documentation site that you just built only uses static files so you'll be able to host it from pretty much anywhere. Simply upload the contents of the entire site directory to wherever you're hosting your website from and you're done. For specific instructions on a number of common hosts, see the Deploying your Docs page.","title":"\u90e8\u7f72"},{"location":"getting-started/#_8","text":"See the [User Guide] for more complete documentation of all of MkDocs' features. To get help with MkDocs, please use the [GitHub discussions] or [GitHub issues].","title":"\u5f97\u5230\u5e2e\u52a9"},{"location":"about/contributing/","text":"Contributing to MkDocs \u00b6 An introduction to contributing to the MkDocs project. The MkDocs project welcomes, and depends, on contributions from developers and users in the open source community. Contributions can be made in a number of ways, a few examples are: Code patches via pull requests Documentation improvements Bug reports and patch reviews For information about available communication channels please refer to the README file in our GitHub repository. Code of Conduct \u00b6 Everyone interacting in the MkDocs project's codebases, issue trackers, chat rooms, and mailing lists is expected to follow the PyPA Code of Conduct . Reporting an Issue \u00b6 Please include as much detail as you can. Let us know your platform and MkDocs version. If the problem is visual (for example a theme or design issue) please add a screenshot and if you get an error please include the full error and traceback. Testing the Development Version \u00b6 If you want to just install and try out the latest development version of MkDocs you can do so with the following command. This can be useful if you want to provide feedback for a new feature or want to confirm if a bug you have encountered is fixed in the git master. It is strongly recommended that you do this within a virtualenv . pip install https://github.com/mkdocs/mkdocs/archive/master.tar.gz Installing for Development \u00b6 First you'll need to fork and clone the repository. Once you have a local copy, run the following command. It is strongly recommended that you do this within a virtualenv . pip install --editable . This will install MkDocs in development mode which binds the mkdocs command to the git repository. Running the tests \u00b6 To run the tests, it is recommended that you use Hatch . Install Hatch using pip by running the command pip install hatch . Then the test suite can be run for MkDocs by running the command hatch run all in the root of your MkDocs repository. It will attempt to run the tests against all of the Python versions we support. So don't be concerned if you are missing some. The rest will be verified by GitHub Actions when you submit a pull request. Translating themes \u00b6 To localize a theme to your favorite language, follow the guide on Translating Themes . We welcome translation Pull Requests! Submitting Pull Requests \u00b6 If you're considering a large code contribution to MkDocs, please prefer to open an issue first to get early feedback on the idea. Once you think the code is ready to be reviewed, push it to your fork and send a pull request. For a change to be accepted it will most likely need to have tests and documentation if it is a new feature. Submitting changes to the builtin themes \u00b6 When installed with i18n support ( pip install mkdocs[i18n] ), MkDocs allows themes to support being translated into various languages (referred to as locales) if they respect Jinja's i18n extension by wrapping text placeholders with {% trans %} and {% endtrans %} tags. Each time a translatable text placeholder is added, removed or changed in a theme template, the theme's Portable Object Template ( pot ) file needs to be updated by running the extract_messages command. For example, to update the pot file of the mkdocs theme, run the following command: pybabel extract --project=MkDocs --copyright-holder=MkDocs --msgid-bugs-address='https://github.com/mkdocs/mkdocs/issues' --no-wrap --version=\"$(hatch version)\" --mapping-file mkdocs/themes/babel.cfg --output-file mkdocs/themes/mkdocs/messages.pot mkdocs/themes/mkdocs The updated pot file should be included in a PR with the updated template. The updated pot file will allow translation contributors to propose the translations needed for their preferred language. See the guide on Translating Themes for details. Note Contributors are not expected to provide translations with their changes to a theme's templates. However, they are expected to include an updated pot file so that everything is ready for translators to do their job.","title":"\u8d21\u732e"},{"location":"about/contributing/#contributing-to-mkdocs","text":"An introduction to contributing to the MkDocs project. The MkDocs project welcomes, and depends, on contributions from developers and users in the open source community. Contributions can be made in a number of ways, a few examples are: Code patches via pull requests Documentation improvements Bug reports and patch reviews For information about available communication channels please refer to the README file in our GitHub repository.","title":"Contributing to MkDocs"},{"location":"about/contributing/#code-of-conduct","text":"Everyone interacting in the MkDocs project's codebases, issue trackers, chat rooms, and mailing lists is expected to follow the PyPA Code of Conduct .","title":"Code of Conduct"},{"location":"about/contributing/#reporting-an-issue","text":"Please include as much detail as you can. Let us know your platform and MkDocs version. If the problem is visual (for example a theme or design issue) please add a screenshot and if you get an error please include the full error and traceback.","title":"Reporting an Issue"},{"location":"about/contributing/#testing-the-development-version","text":"If you want to just install and try out the latest development version of MkDocs you can do so with the following command. This can be useful if you want to provide feedback for a new feature or want to confirm if a bug you have encountered is fixed in the git master. It is strongly recommended that you do this within a virtualenv . pip install https://github.com/mkdocs/mkdocs/archive/master.tar.gz","title":"Testing the Development Version"},{"location":"about/contributing/#installing-for-development","text":"First you'll need to fork and clone the repository. Once you have a local copy, run the following command. It is strongly recommended that you do this within a virtualenv . pip install --editable . This will install MkDocs in development mode which binds the mkdocs command to the git repository.","title":"Installing for Development"},{"location":"about/contributing/#running-the-tests","text":"To run the tests, it is recommended that you use Hatch . Install Hatch using pip by running the command pip install hatch . Then the test suite can be run for MkDocs by running the command hatch run all in the root of your MkDocs repository. It will attempt to run the tests against all of the Python versions we support. So don't be concerned if you are missing some. The rest will be verified by GitHub Actions when you submit a pull request.","title":"Running the tests"},{"location":"about/contributing/#translating-themes","text":"To localize a theme to your favorite language, follow the guide on Translating Themes . We welcome translation Pull Requests!","title":"Translating themes"},{"location":"about/contributing/#submitting-pull-requests","text":"If you're considering a large code contribution to MkDocs, please prefer to open an issue first to get early feedback on the idea. Once you think the code is ready to be reviewed, push it to your fork and send a pull request. For a change to be accepted it will most likely need to have tests and documentation if it is a new feature.","title":"Submitting Pull Requests"},{"location":"about/contributing/#submitting-changes-to-the-builtin-themes","text":"When installed with i18n support ( pip install mkdocs[i18n] ), MkDocs allows themes to support being translated into various languages (referred to as locales) if they respect Jinja's i18n extension by wrapping text placeholders with {% trans %} and {% endtrans %} tags. Each time a translatable text placeholder is added, removed or changed in a theme template, the theme's Portable Object Template ( pot ) file needs to be updated by running the extract_messages command. For example, to update the pot file of the mkdocs theme, run the following command: pybabel extract --project=MkDocs --copyright-holder=MkDocs --msgid-bugs-address='https://github.com/mkdocs/mkdocs/issues' --no-wrap --version=\"$(hatch version)\" --mapping-file mkdocs/themes/babel.cfg --output-file mkdocs/themes/mkdocs/messages.pot mkdocs/themes/mkdocs The updated pot file should be included in a PR with the updated template. The updated pot file will allow translation contributors to propose the translations needed for their preferred language. See the guide on Translating Themes for details. Note Contributors are not expected to provide translations with their changes to a theme's templates. However, they are expected to include an updated pot file so that everything is ready for translators to do their job.","title":"Submitting changes to the builtin themes"},{"location":"about/license/","text":"License \u00b6 The legal stuff. Included projects \u00b6 Themes used under license from the ReadTheDocs projects. ReadTheDocs theme - View license . Many thanks to the authors and contributors of those wonderful projects. MkDocs License (BSD) \u00b6 Copyright \u00a9 2014, Tom Christie. All rights reserved. Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met: Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution. THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.","title":"\u8bc1\u4e66"},{"location":"about/license/#license","text":"The legal stuff.","title":"License"},{"location":"about/license/#included-projects","text":"Themes used under license from the ReadTheDocs projects. ReadTheDocs theme - View license . Many thanks to the authors and contributors of those wonderful projects.","title":"Included projects"},{"location":"about/license/#mkdocs-license-bsd","text":"Copyright \u00a9 2014, Tom Christie. All rights reserved. Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met: Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution. THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.","title":"MkDocs License (BSD)"},{"location":"about/release-notes/","text":"Release Notes \u00b6 Upgrading \u00b6 To upgrade MkDocs to the latest version, use pip: pip install -U mkdocs You can determine your currently installed version using mkdocs --version : $ mkdocs --version mkdocs, version 1.0 from /path/to/mkdocs (Python 3.6) Maintenance team \u00b6 The current and past members of the MkDocs team. @tomchristie @d0ugal @waylan @oprypin @ultrabug Version 1.4.2 (2022-11-01) \u00b6 Officially support Python 3.11 ( #3020 ) Tip: Simply upgrading to Python 3.11 can cut off 10-15% of your site's build time. Support multiple instances of the same plugin ( #3027 ) If a plugin is specified multiple times in the list under the plugins: config, that will create 2 (or more) instances of the plugin with their own config each. Previously this case was unforeseen and, as such, bugged. Now even though this works, by default a warning will appear from MkDocs anyway, unless the plugin adds a class variable supports_multiple_instances = True . Bugfix (regression in 1.4.1): Don't error when a plugin puts a plain string into warnings ( #3016 ) Bugfix: Relative links will always render with a trailing slash ( #3022 ) Previously under use_directory_urls , links from a sub-page to the main index page rendered as e.g. <a href=\"../..\"> even though in all other cases the links look like <a href=\"../../\"> . This caused unwanted behavior on some combinations of Web browsers and servers. Now this special-case bug was removed. Built-in \"mkdocs\" theme now also supports Norwegian language ( #3024 ) Plugin-related warnings look more readable ( #3016 ) See commit log . Version 1.4.1 (2022-10-15) \u00b6 Support theme-namespaced plugin loading ( #2998 ) Plugins' entry points can be named as 'sometheme/someplugin'. That will have the following outcome: If the current theme is 'sometheme', the plugin 'sometheme/someplugin' will always be preferred over 'someplugin'. If the current theme isn't 'sometheme', the only way to use this plugin is by specifying plugins: [sometheme/someplugin] . One can also specify plugins: ['/someplugin'] instead of plugins: ['someplugin'] to definitely avoid the theme-namespaced plugin. Bugfix: mkdocs serve will work correctly with non-ASCII paths and redirects ( #3001 ) Windows: 'colorama' is now a dependency of MkDocs, to ensure colorful log output ( #2987 ) Plugin-related config options have more reliable validation and error reporting ( #2997 ) Translation sub-commands of setup.py were completely dropped. See documentation [1] [2] for their new replacements ( #2990 ) The 'mkdocs' package (wheel and source) is now produced by Hatch build system and pyproject.toml instead of setup.py ( #2988 ) Other small improvements; see commit log . Version 1.4.0 (2022-09-27) \u00b6 Feature upgrades \u00b6 Hooks ( #2978 ) \u00b6 The new hooks: config allows you to add plugin-like event handlers from local Python files, without needing to set up and install an actual plugin. See documentation . edit_uri flexibility ( #2927 ) \u00b6 There is a new edit_uri_template: config. It works like edit_uri but more generally covers ways to construct an edit URL. See documentation . Additionally, the edit_uri functionality will now fully work even if repo_url is omitted ( #2928 ) Upgrades for plugin developers \u00b6 Note This release has big changes to the implementation of plugins and their configs. But, the intention is to have zero breaking changes in all reasonably common use cases. Or at the very least if a code fix is required, there should always be a way to stay compatible with older MkDocs versions. Please report if this release breaks something. Customize event order for plugin event handlers ( #2973 ) \u00b6 Plugins can now choose to set a priority value for their event handlers. This can override the old behavior where for each event type, the handlers are called in the order that their plugins appear in the plugins config . If this is set, events with higher priority are called first. Events without a chosen priority get a default of 0. Events that have the same priority are ordered as they appear in the config. Recommended priority values: 100 \"first\", 50 \"early\", 0 \"default\", -50 \"late\", -100 \"last\". As different plugins discover more precise relations to each other, the values should be further tweaked. See documentation . New events that persist across builds in mkdocs serve ( #2972 ) \u00b6 The new events are on_startup and on_shutdown . They run at the very beginning and very end of an mkdocs invocation. on_startup also receives information on how mkdocs was invoked (e.g. serve --dirtyreload ). See documentation . Replace File.src_path to not deal with backslashes ( #2930 ) \u00b6 The property src_path uses backslashes on Windows, which doesn't make sense as it's a virtual path. To not make a breaking change, there's no change to how this property is used, but now you should: Use File.src_uri instead of File.src_path and File.dest_uri instead of File.dest_path . These consistently use forward slashes, and are now the definitive source that MkDocs itself uses. See source code . As a related tip: you should also stop using os.path.* or pathlib.Path() to deal with these paths, and instead use posixpath.* or pathlib.PurePosixPath() MkDocs is type-annotated, ready for use with mypy ( #2941 , #2970 ) \u00b6 Type annotations for event handler methods ( #2931 ) \u00b6 MkDocs' plugin event methods now have type annotations. You might have been adding annotations to events already, but now they will be validated to match the original. See source code and documentation . One big update is that now you should annotate method parameters more specifically as config: defaults.MkDocsConfig instead of config: base.Config . This not only makes it clear that it is the main config of MkDocs itself , but also provides type-safe access through attributes of the object (see next section). See source code and documentation . Rework ConfigOption schemas as class-based ( #2962 ) \u00b6 When developing a plugin, the settings that it accepts used to be specified in the config_scheme variable on the plugin class. This approach is now soft-deprecated, and instead you should specify the config in a sub-class of base.Config . Old example: from mkdocs import plugins from mkdocs.config import base, config_options class MyPlugin(plugins.BasePlugin): config_scheme = ( ('foo', config_options.Type(int)), ('bar', config_options.Type(str, default='')), ) def on_page_markdown(self, markdown: str, *, config: base.Config, **kwargs): if self.config['foo'] < 5: if config['site_url'].startswith('http:'): return markdown + self.config['baz'] This code snippet actually has many mistakes but it will pass all type checks and silently run and even succeed in some cases. So, on to the new equivalent example, changed to new-style schema and attribute-based access: (Complaints from \"mypy\" added inline) from mkdocs import plugins from mkdocs.config import base, config_options as c class MyPluginConfig(base.Config): foo = c.Optional(c.Type(int)) bar = c.Type(str, default='') class MyPlugin(plugins.BasePlugin[MyPluginConfig]): def on_page_markdown(self, markdown: str, *, config: base.MkDocsConfig, **kwargs): if self.config.foo < 5: # Error, `foo` might be `None`, need to check first. if config.site_url.startswith('http:'): # Error, MkDocs' `site_url` also might be `None`. return markdown + self.config.baz # Error, no such attribute `baz`! This lets you notice the errors from a static type checker before running the code and fix them as such: class MyPlugin(plugins.BasePlugin[MyPluginConfig]): def on_page_markdown(self, markdown: str, *, config: base.MkDocsConfig, **kwargs): if self.config.foo is not None and self.config.foo < 5: # OK, `int < int` is valid. if (config.site_url or '').startswith('http:'): # OK, `str.startswith(str)` is valid. return markdown + self.config.bar # OK, `str + str` is valid. See documentation . Also notice that we had to explicitly mark the config attribute foo as Optional . The new-style config has all attributes marked as required by default, and specifying required=False or required=True is not allowed! New: config_options.Optional ( #2962 ) \u00b6 Wrapping something into Optional is conceptually similar to \"I want the default to be None \" -- and you have to express it like that, because writing default=None doesn't actually work. Breaking change: the method BaseConfigOption.is_required() was removed. Use .required instead. ( #2938 ) And even the required property should be mostly unused now. For class-based configs, there's a new definition for whether an option is \"required\": It has no default, and It is not wrapped into config_options.Optional . New: config_options.ListOfItems ( #2938 ) \u00b6 Defines a list of items that each must adhere to the same constraint. Kind of like a validated Type(list) Examples how to express a list of integers (with from mkdocs.config import config_options as c ): Description Code entry Required to specify foo = c.ListOfItems(c.Type(int)) Optional, default is [] foo = c.ListOfItems(c.Type(int), default=[]) Optional, default is None foo = c.Optional(c.ListOfItems(c.Type(int))) See more examples in documentation . Updated: config_options.SubConfig ( #2807 ) \u00b6 SubConfig used to silently ignore all validation of its config options. Now you should pass validate=True to it or just use new class-based configs where this became the default. So, it can be used to validate a nested sub-dict with all keys pre-defined and value types strictly validated. See examples in documentation . Other changes to config options \u00b6 URL 's default is now None instead of '' . This can still be checked for truthiness in the same way - if config.some_url: ( #2962 ) FilesystemObject is no longer abstract and can be used directly, standing for \"file or directory\" with optional existence checking ( #2938 ) Bug fixes: Fix SubConfig , ConfigItems , MarkdownExtensions to not leak values across different instances ( #2916 , #2290 ) SubConfig raises the correct kind of validation error without a stack trace ( #2938 ) Fix dot-separated redirect in config_options.Deprecated(moved_to) ( #2963 ) Tweaked logic for handling ConfigOption.default ( #2938 ) Deprecated config option classes: ConfigItems ( #2983 ), OptionallyRequired ( #2962 ), RepoURL ( #2927 ) Theme updates \u00b6 Styles of admonitions in \"MkDocs\" theme ( #2981 ): Update colors to increase contrast Apply admonition styles also to <details> tag, to support Markdown extensions that provide it ( pymdownx.details , callouts ) Built-in themes now also support these languages: Russian ( #2976 ) Turkish (Turkey) ( #2946 ) Ukrainian ( #2980 ) Future compatibility \u00b6 extra_css: and extra_javascript: warn if a backslash \\ is passed to them. ( #2930 , #2984 ) Show DeprecationWarning s as INFO messages. ( #2907 ) If any plugin or extension that you use relies on deprecated functionality of other libraries, it is at risk of breaking in the near future. Plugin developers should address these in a timely manner. Avoid a dependency on importlib_metadata starting from Python 3.10 ( #2959 ) Drop support for Python 3.6 ( #2948 ) Incompatible changes to public APIs \u00b6 mkdocs.utils : create_media_urls and normalize_url warn if a backslash \\ is passed to them. ( #2930 ) is_markdown_file stops accepting case-insensitive variants such as .MD , which is how MkDocs build was already operating. ( #2912 ) Hard-deprecated: modified_time , reduce_list , get_html_path , get_url_path , is_html_file , is_template_file . ( #2912 ) Miscellaneous \u00b6 If a plugin adds paths to watch in LiveReloadServer , it can now unwatch them. ( #2777 ) Bugfix (regression in 1.2): Support listening on an IPv6 address in mkdocs serve . ( #2951 ) Other small improvements; see commit log . Version 1.3.1 (2022-07-19) \u00b6 Pin Python-Markdown version to <3.4, thus excluding its latest release that breaks too many external extensions ( #2893 ) When a Markdown extension fails to load, print its name and traceback ( #2894 ) Bugfix for \"readthedocs\" theme (regression in 1.3.0): add missing space in breadcrumbs ( #2810 ) Bugfix: don't complain when a file \"readme.md\" (lowercase) exists, it's not recognized otherwise ( #2852 ) Built-in themes now also support these languages: Italian ( #2860 ) Other small improvements; see commit log . Version 1.3.0 (2022-03-26) \u00b6 Feature upgrades \u00b6 ReadTheDocs theme updated from v0.4.1 to v1.0.0 according to upstream ( #2585 ) The most notable changes: New option logo : Rather than displaying the site_name in the title, one can specify a path to an image to display instead. New option anonymize_ip for Google Analytics. Dependencies were upgraded: jQuery upgraded to 3.6.0, Modernizr.js dropped, and others. See documentation of config options for the theme Built-in themes now also support these languages: German ( #2633 ) Persian (Farsi) ( #2787 ) Support custom directories to watch when running mkdocs serve ( #2642 ) MkDocs by default watches the docs directory and the config file. Now there is a way to add more directories to watch for changes, either via the YAML watch key or the command line flag --watch . Normally MkDocs never reaches into any other directories (so this feature shouldn't be necessary), but some plugins and extensions may do so. See documentation . New --no-history option for gh_deploy ( #2594 ) Allows to discard the history of commits when deploying, and instead replace it with one root commit Bug fixes \u00b6 An XSS vulnerability when using the search function in built-in themes was fixed ( #2791 ) Setting the edit_uri option no longer erroneously adds a trailing slash to repo_url ( #2733 ) Miscellaneous \u00b6 Breaking change: the pages config option that was deprecated for a very long time now causes an error when used ( #2652 ) To fix the error, just change from pages to nav . Performance optimization: during startup of MkDocs, code and dependencies of other commands will not be imported ( #2714 ) The most visible effect of this is that dependencies of mkdocs serve will not be imported when mkdocs build is used. Recursively validate nav ( #2680 ) Validation of the nested nav structure has been reworked to report errors early and reliably. Some edge cases have been declared invalid. Other small improvements; see commit log . Version 1.2.4 (2022-03-26) \u00b6 Compatibility with Jinja2 3.1.0 ( #2800 ) Due to a breaking change in Jinja2, MkDocs would crash with the message AttributeError: module 'jinja2' has no attribute 'contextfilter' Version 1.2.3 (2021-10-12) \u00b6 Built-in themes now also support these languages: Simplified Chinese ( #2497 ) Japanese ( #2525 ) Brazilian Portuguese ( #2535 ) Spanish ( #2545 , previously #2396 ) Third-party plugins will take precedence over built-in plugins with the same name ( #2591 ) Bugfix: Fix ability to load translations for some languages: core support ( #2565 ) and search plugin support with fallbacks ( #2602 ) Bugfix (regression in 1.2): Prevent directory traversal in the dev server ( #2604 ) Bugfix (regression in 1.2): Prevent webserver warnings from being treated as a build failure in strict mode ( #2607 ) Bugfix: Correctly print colorful messages in the terminal on Windows ( #2606 ) Bugfix: Python version 3.10 was displayed incorrectly in --version ( #2618 ) Other small improvements; see commit log . Version 1.2.2 (2021-07-18) \u00b6 Bugfix (regression in 1.2): Fix serving files/paths with Unicode characters ( #2464 ) Bugfix (regression in 1.2): Revert livereload file watching to use polling observer ( #2477 ) This had to be done to reasonably support usages that span virtual filesystems such as non-native Docker and network mounts. This goes back to the polling approach, very similar to that was always used prior, meaning most of the same downsides with latency and CPU usage. Revert from 1.2: Remove the requirement of a site_url config and the restriction on use_directory_urls ( #2490 ) Bugfix (regression in 1.2): Don't require trailing slash in the URL when serving a directory index in mkdocs serve server ( #2507 ) Instead of showing a 404 error, detect if it's a directory and redirect to a path with a trailing slash added, like before. Bugfix: Fix gh_deploy with config-file in the current directory ( #2481 ) Bugfix: Fix reversed breadcrumbs in \"readthedocs\" theme ( #2179 ) Allow \"mkdocs.yaml\" as the file name when '--config' is not passed ( #2478 ) Stop treating \";\" as a special character in URLs: urlparse -> urlsplit ( #2502 ) Improve build performance for sites with many pages (partly already done in 1.2) ( #2407 ) Version 1.2.1 (2021-06-09) \u00b6 Bugfix (regression in 1.2): Ensure 'gh-deploy' always pushes. Version 1.2 (2021-06-04) \u00b6 Major Additions to Version 1.2 \u00b6 Support added for Theme Localization ( #2299 ) \u00b6 The mkdocs and readthedocs themes now support language localization using the theme.locale parameter, which defaults to en (English). The only other supported languages in this release are fr (French) and es (Spanish). For details on using the provided translations, see the user guide . Note that translation will not happen by default. Users must first install the necessary dependencies with the following command: pip install mkdocs[i18n] Translation contributions are welcome and detailed in the Translation Guide . Developers of third party themes may want to review the relevant section of the Theme Development Guide . Contributors who are updating the templates to the built-in themes should review the Contributing Guide . The lang setting of the search plugin now defaults to the language specified in theme.locale . Support added for Environment Variables in the configuration file ( #1954 ) \u00b6 Environments variables may now be specified in the configuration file with the !ENV tag. The value of the variable will be parsed by the YAML parser and converted to the appropriate type. somekey: !ENV VAR_NAME otherkey: !ENV [VAR_NAME, FALLBACK_VAR, 'default value'] See Environment Variables in the Configuration documentation for details. Support added for Configuration Inheritance ( #2218 ) \u00b6 A configuration file may now inherit from a parent configuration file. In the primary file set the INHERIT key to the relative path of the parent file. INHERIT: path/to/base.yml The two files will then be deep merged. See Configuration Inheritance for details. Update gh-deploy command ( #2170 ) \u00b6 The vendored (and modified) copy of ghp_import has been replaced with a dependency on the upstream library. As of version 1.0.0, ghp-import includes a Python API which makes it possible to call directly. MkDocs can now benefit from recent bug fixes and new features, including the following: A .nojekyll file is automatically included when deploying to GitHub Pages. The --shell flag is now available, which reportedly works better on Windows. Git author and committer environment variables should be respected ( #1383 ). Rework auto-reload and HTTP server for mkdocs serve ( #2385 ) \u00b6 mkdocs serve now uses a new underlying server + file watcher implementation, based on http.server from standard library and watchdog . It provides similar functionality to the previously used livereload library (which is now dropped from dependencies, along with tornado ). This makes reloads more responsive and consistent in terms of timing. Multiple rapid file changes no longer cause the site to repeatedly rebuild (issue #2061 ). Almost every aspect of the server is slightly different, but actual visible changes are minor. The logging outputs are only similar to the old ones. Degradations in behavior are not expected, and should be reported if found. Offset the local site root according to the sub-path of the site_url ( #2424 ) \u00b6 When using mkdocs serve and having the site_url specified as e.g. http://example.org/sub/path/ , now the root of the locally served site becomes http://127.0.0.1:8000/sub/path/ and all document paths are offset accordingly. A build_error event was added ( #2103 ) \u00b6 Plugin developers can now use the on_build_error hook to execute code when an exception is raised while building the site. See on_build_error in the Plugins documentation for details. Three new exceptions: BuildError PluginError and Abort ( #2103 ) \u00b6 MkDocs now has tree new exceptions defined in mkdocs.exceptions : BuildError , PluginError , and Abort : PluginError can be raised from a plugin to stop the build and log an error message without traceback . BuildError should not be used by third-party plugins developers and is reserved for internal use only. Abort is used internally to abort the build and display an error without a traceback. See Handling errors in the Plugins documentation for details. Search Indexing Strategy configuration \u00b6 Users can now specify which strategy they wish to use when indexing their site for search. A user can select between the following options: full : Adds page title, section headings, and full page text to the search index. sections : Adds page titles and section headings only to the search index. titles : Adds only the page titles to the search index. See Search Indexing in the configuration documentation for details. Backward Incompatible Changes in 1.2 \u00b6 The site_url configuration option is now required . If it is not set, a warning will be issued. In a future release an error will be raised ( #2189 ). The use_directory_urls configuration option will be forced to false if site_url is set to an empty string. In that case, if use_directory_urls is not explicitly set to false , a warning will be issued ( #2189 ). Note This was reverted in release 1.2.2 The google_analytics configuration option is deprecated as Google appears to be phasing it out in favor of its new Google Analytics 4 property. See the documentation for your theme for alternatives which can be configured as part of your theme configuration. For example, the mkdocs and readthedocs themes have each added a new theme.analytics.gtag configuration option which uses the new Google Analytics 4 property. See Google's documentation on how to Upgrade to a Google Analytics 4 property . Then set theme.analytics.gtag to the \"G-\" ID and delete the google_analytics configuration option which contains a \"UA-\" ID. So long as the old \"UA-\" ID and new \"G-\" ID are properly linked in your Google account, and you are using the \"G-\" ID, the data will be made available in both the old and new formats by Google Analytics. See #2252 . A theme's files are now excluded from the list of watched files by default when using the --livereload server. This new default behavior is what most users need and provides better performance when editing site content. Theme developers can enable the old behavior with the --watch-theme option. ( #2092 ). The mkdocs theme now removes the sidebar when printing a page. This frees up horizontal space for better rendering of content like tables ( #2193 ). The mkdocs.config.DEFAULT_SCHEMA global variable has been replaced with the function mkdocs.config.defaults.get_schema() , which ensures that each instance of the configuration is unique ( #2289 ). The mkdocs.utils.warning_filter is deprecated and now does nothing. Plugins should remove any reference to is as it may be deleted in a future release. To ensure any warnings get counted, simply log them to the mkdocs log (i.e.: mkdocs.plugins.pluginname ). The on_serve event (which receives the server object and the builder function) is affected by the server rewrite. server is now a mkdocs.livereload.LiveReloadServer instead of livereload.server.Server . The typical action that plugins can do with these is to call server.watch(some_dir, builder) , which basically adds that directory to watched directories, causing the site to be rebuilt on file changes. That still works, but passing any other function to watch is deprecated and shows a warning. This 2 nd parameter is already optional, and will accept only this exact builder function just for compatibility. The python method of the plugins.search.prebuild_index configuration option is pending deprecation as of version 1.2. It is expected that in version 1.3 it will raise a warning if used and in version 1.4 it will raise an error. Users are encouraged to use an alternate method to generate a prebuilt index for search. The lunr and lunr[languages] dependencies are no longer installed by default. The dependencies are only needed for the rare user who pre-builds the search index and uses the python option, which is now pending deprecation. If you use this feature, then you will need to manually install lunr and lunr[languages] . A warning is issued if the dependencies are needed but not installed. Other Changes and Additions to Version 1.2 \u00b6 Bugfix: Properly process navigation child items in _get_by_type when filtering for sections ( #2203 ). Official support for Python 3.9 has been added and support for Python 3.5 has been dropped. Bugfix: Fixes an issue that would result in a partially cut-off navigation item in the ReadTheDocs theme ( #2297 ). Structure Files object now has a remove method to help plugin developers manipulate the Files tree. The corresponding src_paths has become a property to accommodate this possible dynamic behavior. See #2305 . Updated highlight.js to 10.5.0. See #2313 . Bugfix: Search plugin now works with Japanese language. See #2178 . Documentation has been refactored ( #1629 ). Restore styling of tables in the readthedocs theme ( #2028 ). Ensure site_url ends with a slash ( #1785 ). Correct documentation of pages template context variable ( #1736 ). The lunr dependency has been updated to 0.5.9, and lunr.js to the corresponding 2.3.9 version ( #2306 ). Color is now used in log messages to identify errors, warnings and debug messages. Bugfix: Identify homepage when use_directory_urls is False ( #2362 ). Version 1.1.2 (2020-05-14) \u00b6 Bugfix: Normalize IP addresses and change unsupported address error to a warning ( #2108 ). Version 1.1.1 (2020-05-12) \u00b6 Bugfix: Allow compressed sitemap to be deterministic by supporting the SOURCE_DATE_EPOCH environment variable ( #2100 ). Bugfix: Use README.md as index.html even if use_directory_urls is false ( #2081 ). Bugfix: Ignore links which start with a backslash ( #1680 ). Bugfix: Pass builder to the on_serve event so that it can be passed to server.watch by plugins ( #1952 ). Bugfix: Use lunr[languages]==0.5.8 to avoid nltk incompatibilities ( #2062 ). Bugfix: Ensure wheel is Python 3 only ( #2021 ). Bugfix: Clean up dev_addr validation and disallow 0.0.0.0 ( #2022 ). Add support for min_search_length parameter for search plugin ( #2014 ). Bugfix: readthedocs theme code colors ( #2027 ). Version 1.1 (2020-02-22) \u00b6 Major Additions to Version 1.1 \u00b6 Support for Lunr.py as prebuild_index engine \u00b6 Mkdocs now supports pre-building indices using Lunr.py , a pure Python implementation of Lunr.js, allowing the user to avoid installing a NodeJS environment if so desired. For more information please read the prebuild_index documentation . readthedocs theme updated with upstream ( #588 and #1374 ) \u00b6 The readthedocs theme now more closely matches the upstream Sphinx theme (version 0.4.1). A number of new theme configuration settings were added which mirror the upstream configuration options. See the theme documentation for details. Update mkdocs theme to Bootswatch 4.1.3 ( #1563 ) \u00b6 The mkdocs theme now supports all the features of Bootswatch 4.1 . Additionally, 2 filenames were changed in this update. If you are using a theme which inherits from the mkdocs theme, the theme developer may need to update these filenames as follows. css/bootstrap-custom.min.css => css/bootstrap.min.css js/bootstrap-3.0.3.min.js => js/bootstrap.min.js Improved configuration support on the command line ( #1401 ) \u00b6 The build , serve , and gh-deploy subcommands now support flags to control whether directory URLs should be created: --use-directory-urls / --no-directory-urls . In addition, the gh-deploy subcommand now supports all the configuration options that build and serve do, adding --strict , --theme , --theme-dir , and --site-dir . Updated lunr-languages support ( #1729 ) \u00b6 The lunr-languages plugin has been updated to 1.4.0, adding support for Arabic ( ar ) and Vietnamese ( vi ) languages. In addition, the Dutch and Japanese language codes have been changed to their standard values: nl and ja , respectively. The old language codes ( du and jp ) remain as aliases but may be removed in a future version of MkDocs. Other Changes and Additions to Version 1.1 \u00b6 Bugfix: Ensure nested dot files in themes are ignored and document behavior ( #1981 ). Update minimum dependency to Markdown 3.2.1. Updated minimum dependency to Jinja 2.10.1 to address security concerns ( #1780 ). Update to lunr.js 2.3.8 ( #1989 ). Add support for Python 3.8. Drop support for Python 3.4. Drop support for Python 2.7. MkDocs is PY3 only now ( #1926 ). Bugfix: Select appropriate asyncio event loop on Windows for Python 3.8+ ( #1885 ). Bugfix: Ensure nested index pages do not get identified as the homepage ( #1919 ). Bugfix: Properly identify deployment version ( #1879 ). Bugfix: Properly build ValidationError message for custom_dir ( #1849 ). Bugfix: Exclude Markdown files and READMEs from theme ( #1766 ). Bugfix: Account for encoded URLs ( #1670 ). Bugfix: Ensure theme files do not override docs_dir files ( #1671 ). Bugfix: Do not normalize URL fragments ( #1655 ). Bugfix: Skip external URLs in sitemap.xml ( #1742 ). Bugfix: Ensure theme files do not override docs_dir files on Windows ( #1876 ) Add canonical tag to readthedocs theme ( #1669 ). Improved error message for when git is not available. Add support for nav_style theme option for the mkdocs theme ( #1930 ). Bugfix: Long/nested dropdowns now behave more consistently for the mkdocs theme ( #1234 ). Bugfix: Multi-row nav headers in the mkdocs theme no longer obscure the document content ( #716 ). Add support for navigation_depth theme option for the mkdocs theme ( #1970 ). level attribute in page.toc items is now 1-indexed to match the level in <hN> tags ( #1970 ). Version 1.0.4 (2018-09-07) \u00b6 Bugfix: Ignore absolute links in Markdown ( #1621 ). Version 1.0.3 (2018-08-29) \u00b6 Bugfix: Warn on relative paths in navigation ( #1604 ). Bugfix: Handle empty theme_config.yml files correctly ( #1602 ). Version 1.0.2 (2018-08-22) \u00b6 Bugfix: Provide absolute base_url to error templates ( #1598 ). Version 1.0.1 (2018-08-13) \u00b6 Bugfix: Prevent page reload when [Enter] is pressed in search box ( #1589 ). Bugfix: Avoid calling search until all assets are ready ( #1584 ). Bugfix: Exclude README.md if index.md is present ( #1580 ). Bugfix: Fix readthedocs theme navigation bug with homepage ( #1576 ). Version 1.0 (2018-08-03) \u00b6 Major Additions to Version 1.0 \u00b6 Internal Refactor of Pages, Files, and Navigation \u00b6 Internal handling of pages, files and navigation has been completely refactored. The changes included in the refactor are summarized below. Support for hidden pages. All Markdown pages are now included in the build regardless of whether they are included in the navigation configuration ( #699 ). The navigation can now include links to external sites ( #989 #1373 & #1406 ). Page data (including titles) is properly determined for all pages before any page is rendered ( #1347 ). Automatically populated navigation now sorts index pages to the top. In other words, The index page will be listed as the first child of a directory, while all other documents are sorted alphanumerically by file name after the index page ( #73 & #1042 ). A README.md file is now treated as an index file within a directory and will be rendered to index.html ( #608 ). The URLs for all files are computed once and stored in a files collection. This ensures all internal links are always computed correctly regardless of the configuration. This also allows all internal links to be validated, not just links to other Markdown pages. ( #842 & #872 ). A new url template filter smartly ensures all URLs are relative to the current page ( #1526 ). An on_files plugin event has been added, which could be used to include files not in the docs_dir , exclude files, redefine page URLs (i.e. implement extensionless URLs), or to manipulate files in various other ways. Backward Incompatible Changes \u00b6 As part of the internal refactor, a number of backward incompatible changes have been introduced, which are summarized below. URLs have changed when use_directory_urls is False \u00b6 Previously, all Markdown pages would be have their filenames altered to be index pages regardless of how the use_directory_urls setting was configured. However, the path munging is only needed when use_directory_urls is set to True (the default). The path mangling no longer happens when use_directory_urls is set to False , which will result in different URLs for all pages that were not already index files. As this behavior only effects a non-default configuration, and the most common user-case for setting the option to False is for local file system ( file:// ) browsing, its not likely to effect most users. However, if you have use_directory_urls set to False for a MkDocs site hosted on a web server, most of your URLs will now be broken. As you can see below, the new URLs are much more sensible. Markdown file Old URL New URL index.md index.html index.html foo.md foo/index.html foo.html foo/bar.md foo/bar/index.html foo/bar.html Note that there has been no change to URLs or file paths when use_directory_urls is set to True (the default), except that MkDocs more consistently includes an ending slash on all internally generated URLs. The pages configuration setting has been renamed to nav \u00b6 The pages configuration setting is deprecated and will issue a warning if set in the configuration file. The setting has been renamed nav . To update your configuration, simply rename the setting to nav . In other words, if your configuration looked like this: pages: - Home: index.md - User Guide: user-guide.md Simply edit the configuration as follows: nav: - Home: index.md - User Guide: user-guide.md In the current release, any configuration which includes a pages setting, but no nav setting, the pages configuration will be copied to nav and a warning will be issued. However, in a future release, that may no longer happen. If both pages and nav are defined, the pages setting will be ignored. Template variables and base_url \u00b6 In previous versions of MkDocs some URLs expected the base_url template variable to be prepended to the URL and others did not. That inconsistency has been removed in that no URLs are modified before being added to the template context. For example, a theme template might have previously included a link to the site_name as: <a href=\"{{ nav.homepage.url }}\">{{ config.site_name }}</a> And MkDocs would magically return a URL for the homepage which was relative to the current page. That \"magic\" has been removed and the url template filter should be used: <a href=\"{{ nav.homepage.url|url }}\">{{ config.site_name }}</a> This change applies to any navigation items and pages, as well as the page.next_page and page.previous_page attributes. For the time being, the extra_javascript and extra_css variables continue to work as previously (without the url template filter), but they have been deprecated and the corresponding configuration values ( config.extra_javascript and config.extra_css respectively) should be used with the filter instead. {% for path in config['extra_css'] %} <link href=\"{{ path|url }}\" rel=\"stylesheet\"> {% endfor %} Note that navigation can now include links to external sites. Obviously, the base_url should not be prepended to these items. However, the url template filter is smart enough to recognize the URL is absolute and does not alter it. Therefore, all navigation items can be passed to the filter and only those that need to will be altered. {% for nav_item in nav %} <a href=\"{{ nav_item.url|url }}\">{{ nav_item.title }}</a> {% endfor %} Path Based Settings are Relative to Configuration File ( #543 ) \u00b6 Previously any relative paths in the various configuration options were resolved relative to the current working directory. They are now resolved relative to the configuration file. As the documentation has always encouraged running the various MkDocs commands from the directory that contains the configuration file (project root), this change will not affect most users. However, it will make it much easier to implement automated builds or otherwise run commands from a location other than the project root. Simply use the -f/--config-file option and point it at the configuration file: mkdocs build --config-file /path/to/my/config/file.yml As previously, if no file is specified, MkDocs looks for a file named mkdocs.yml in the current working directory. Added support for YAML Meta-Data ( #1542 ) \u00b6 Previously, MkDocs only supported MultiMarkdown style meta-data, which does not recognize different data types and is rather limited. MkDocs now also supports YAML style meta-data in Markdown documents. MkDocs relies on the the presence or absence of the deliminators ( --- or ... ) to determine whether YAML style meta-data or MultiMarkdown style meta-data is being used. Previously MkDocs would recognize MultiMarkdown style meta-data between the deliminators. Now, if the deliminators are detected, but the content between the deliminators is not valid YAML meta-data, MkDocs does not attempt to parse the content as MultiMarkdown style meta-data. Therefore, MultiMarkdown's style meta-data must not include the deliminators. See the MultiMarkdown style meta-data documentation for details. Prior to version 0.17, MkDocs returned all meta-data values as a list of strings (even a single line would return a list of one string). In version 0.17, that behavior was changed to return each value as a single string (multiple lines were joined), which some users found limiting (see #1471 ). That behavior continues for MultiMarkdown style meta-data in the current version. However, YAML style meta-data supports the full range of \"safe\" YAML data types. Therefore, it is recommended that any complex meta-data make use of the YAML style (see the YAML style meta-data documentation for details). In fact, a future version of MkDocs may deprecate support for MultiMarkdown style meta-data. Refactor Search Plugin \u00b6 The search plugin has been completely refactored to include support for the following features: Use a web worker in the browser with a fallback ( #1396 ). Optionally pre-build search index locally ( #859 & #1061 ). Upgrade to lunr.js 2.x ( #1319 ). Support search in languages other than English ( #826 ). Allow the user to define the word separators ( #867 ). Only run searches for queries of length > 2 ( #1127 ). Remove dependency on require.js ( #1218 ). Compress the search index ( #1128 ). Users can review the configuration options available and theme authors should review how search and themes interact. theme_dir Configuration Option fully Deprecated \u00b6 As of version 0.17, the custom_dir option replaced the deprecated theme_dir option. If users had set the theme_dir option, MkDocs version 0.17 copied the value to the theme.custom_dir option and a warning was issued. As of version 1.0, the value is no longer copied and an error is raised. Other Changes and Additions to Version 1.0 \u00b6 Keyboard shortcuts changed to not conflict with commonly used accessibility shortcuts ( #1502 .) User friendly YAML parse errors ( #1543 ). Officially support Python 3.7. A missing theme configuration file now raises an error. Empty extra_css and extra_javascript settings no longer raise a warning. Add highlight.js configuration settings to built-in themes ( #1284 ). Close search modal when result is selected ( #1527 ). Add a level attribute to AnchorLinks ( #1272 ). Add MkDocs version check to gh-deploy script ( #640 ). Improve Markdown extension error messages. ( #782 ). Drop official support for Python 3.3 and set tornado>=5.0 ( #1427 ). Add support for GitLab edit links ( #1435 ). Link to GitHub issues from release notes ( #644 ). Expand {sha} and {version} in gh-deploy commit message ( #1410 ). Compress sitemap.xml ( #1130 ). Defer loading JS scripts ( #1380 ). Add a title attribute to the search input ( #1379 ). Update RespondJS to latest version ( #1398 ). Always load Google Analytics over HTTPS ( #1397 ). Improve scrolling frame rate ( #1394 ). Provide more version info. ( #1393 ). Refactor writing-your-docs.md ( #1392 ). Workaround Safari bug when zooming to < 100% ( #1389 ). Remove addition of clicky class to body and animations. ( #1387 ). Prevent search plugin from re-injecting extra_javascript files ( #1388 ). Refactor copy_media_files util function for more flexibility ( #1370 ). Remove PyPI Deployment Docs ( #1360 ). Update links to Python-Markdown library ( #1360 ). Document how to generate manpages for MkDocs commands ( #686 ). Version 0.17.5 (2018-07-06) \u00b6 Bugfix: Fix Python 3.7 and PEP 479 incompatibility ( #1518 ). Version 0.17.4 (2018-06-08) \u00b6 Bugfix: Add multi-level nesting support to sitemap.xml ( #1482 ). Version 0.17.3 (2018-03-07) \u00b6 Bugfix: Set dependency tornado>=4.1,<5.0 due to changes in 5.0 ( #1428 ). Version 0.17.2 (2017-11-15) \u00b6 Bugfix: Correct extra_* config setting regressions ( #1335 & #1336 ). Version 0.17.1 (2017-10-30) \u00b6 Bugfix: Support repo_url with missing ending slash. ( #1321 ). Bugfix: Add length support to mkdocs.toc.TableOfContext ( #1325 ). Bugfix: Add some theme specific settings to the search plugin for third party themes ( #1316 ). Bugfix: Override site_url with dev_addr on local server ( #1317 ). Version 0.17.0 (2017-10-19) \u00b6 Major Additions to Version 0.17.0 \u00b6 Plugin API. ( #206 ) \u00b6 A new Plugin API has been added to MkDocs which allows users to define their own custom behaviors. See the included documentation for a full explanation of the API. The previously built-in search functionality has been removed and wrapped in a plugin (named \"search\") with no changes in behavior. When MkDocs builds, the search index is now written to search/search_index.json instead of mkdocs/search_index.json . If no plugins setting is defined in the config, then the search plugin will be included by default. See the configuration documentation for information on overriding the default. Theme Customization. ( #1164 ) \u00b6 Support had been added to provide theme specific customizations. Theme authors can define default options as documented in Theme Configuration . A theme can now inherit from another theme, define various static templates to be rendered, and define arbitrary default variables to control behavior in the templates. The theme configuration is defined in a configuration file named mkdocs_theme.yml which should be placed at the root of your template files. A warning will be raised if no configuration file is found and an error will be raised in a future release. Users can override those defaults under the theme configuration option of their mkdocs.yml configuration file, which now accepts nested options. One such nested option is the custom_dir option, which replaces the now deprecated theme_dir option. If users had previously set the theme_dir option, a warning will be issued, with an error expected in a future release. If a configuration previously defined a theme_dir like this: theme: mkdocs theme_dir: custom Then the configuration should be adjusted as follows: theme: name: mkdocs custom_dir: custom See the theme configuration option documentation for details. Previously deprecated Template variables removed. ( #1168 ) \u00b6 Page Template \u00b6 The primary entry point for page templates has been changed from base.html to main.html . This allows base.html to continue to exist while allowing users to override main.html and extend base.html . For version 0.16, base.html continued to work if no main.html template existed, but it raised a deprecation warning. In version 1.0, a build will fail if no main.html template exists. Context Variables \u00b6 Page specific variable names in the template context have been refactored as defined in Custom Themes . The old variable names issued a warning in version 0.16, but have been removed in version 1.0. Any of the following old page variables should be updated to the new ones in user created and third-party templates: Old Variable Name New Variable Name current_page page page_title page.title content page.content toc page.toc meta page.meta canonical_url page.canonical_url previous_page page.previous_page next_page page.next_page Additionally, a number of global variables have been altered and/or removed and user created and third-party templates should be updated as outlined below: Old Variable Name New Variable Name or Expression current_page page include_nav nav|length>1 include_next_prev (page.next_page or page.previous_page) site_name config.site_name site_author config.site_author page_description config.site_description repo_url config.repo_url repo_name config.repo_name site_url config.site_url copyright config.copyright google_analytics config.google_analytics homepage_url nav.homepage.url favicon {{ base_url }}/img/favicon.ico Auto-Populated extra_css and extra_javascript Fully Deprecated. ( #986 ) \u00b6 In previous versions of MkDocs, if the extra_css or extra_javascript config settings were empty, MkDocs would scan the docs_dir and auto-populate each setting with all of the CSS and JavaScript files found. On version 0.16 this behavior was deprecated and a warning was issued. In 0.17 any unlisted CSS and JavaScript files will not be included in the HTML templates, however, a warning will be issued. In other words, they will still be copied to the site-dir , but they will not have any effect on the theme if they are not explicitly listed. All CSS and JavaScript files in the docs_dir should be explicitly listed in the extra_css or extra_javascript config settings going forward. Other Changes and Additions to Version 0.17.0 \u00b6 Add \"edit Link\" support to MkDocs theme ( #1129 ) Open files with utf-8-sig to account for BOM ( #1186 ) Symbolic links are now followed consistently ( #1134 ) Support for keyboard navigation shortcuts added to included themes ( #1095 ) Some refactoring and improvements to config_options ( #1296 ) Officially added support for Python 3.6 ( #1296 ) 404 Error page added to readthedocs theme ( #1296 )) Internal refactor of Markdown processing ( #713 ) Removed special error message for mkdocs-bootstrap and mkdocs-bootswatch themes ( #1168 ) The legacy pages config is no longer supported ( #1168 ) The deprecated json command has been removed ( #481 ) Support for Python 2.6 has been dropped ( #165 ) File permissions are no longer copied during build ( #1292 ) Support query and fragment strings in edit_uri ( #1224 & #1273 ) Version 0.16.3 (2017-04-04) \u00b6 Fix error raised by autoscrolling in the readthedocs theme ( #1177 ) Fix a few documentation typos ( #1181 & #1185 ) Fix a regression to livereload server introduced in 0.16.2 ( #1174 ) Version 0.16.2 (2017-03-13) \u00b6 System root ( / ) is not a valid path for site_dir or docs_dir ( #1161 ) Refactor readthedocs theme navigation ( #1155 & #1156 ) Add support to dev server to serve custom error pages ( #1040 ) Ensure nav.homepage.url is not blank on error pages ( #1131 ) Increase livereload dependency to 2.5.1 ( #1106 ) Version 0.16.1 (2016-12-22) \u00b6 Ensure scrollspy behavior does not affect nav bar ( #1094 ) Only \"load\" a theme when it is explicitly requested by the user ( #1105 ) Version 0.16 (2016-11-04) \u00b6 Major Additions to Version 0.16.0 \u00b6 Template variables refactored. ( #874 ) \u00b6 Page Context \u00b6 Page specific variable names in the template context have been refactored as defined in Custom Themes . The old variable names will issue a warning but continue to work for version 0.16, but may be removed in a future version. Any of the following old page variables should be updated to the new ones in user created and third-party templates: Old Variable Name New Variable Name current_page page page_title page.title content page.content toc page.toc meta page.meta canonical_url page.canonical_url previous_page page.previous_page next_page page.next_page Global Context \u00b6 Additionally, a number of global variables have been altered and/or deprecated and user created and third-party templates should be updated as outlined below: Previously, the global variable include_nav was altered programmatically based on the number of pages in the nav. The variable will issue a warning but continue to work for version 0.16, but may be removed in a future version. Use {% if nav|length>1 %} instead. Previously, the global variable include_next_prev was altered programmatically based on the number of pages in the nav. The variable will issue a warning but continue to work for version 0.16, but may be removed in a future version. Use {% if page.next_page or page.previous_page %} instead. Previously the global variable page_description was altered programmatically based on whether the current page was the homepage. Now it simply maps to config['site_description'] . Use {% if page.is_homepage %} in the template to conditionally change the description. The global variable homepage_url maps directly to nav.homepage.url and is being deprecated. The variable will issue a warning but continue to work for version 0.16, but may be removed in a future version. Use nav.homepage.url instead. The global variable favicon maps to the configuration setting site_favicon . Both the template variable and the configuration setting are being deprecated and will issue a warning but continue to work for version 0.16, and may be removed in a future version. Use {{ base_url }}/img/favicon.ico in your template instead. Users can simply save a copy of their custom favicon icon to img/favicon.ico in either their docs_dir or theme_dir . A number of variables map directly to similarly named variables in the config . Those variables are being deprecated and will issue a warning but continue to work for version 0.16, but may be removed in a future version. Use config.var_name instead, where var_name is the name of one of the configuration variables. Below is a summary of all of the changes made to the global context: Old Variable Name New Variable Name or Expression current_page page include_nav nav|length>1 include_next_prev (page.next_page or page.previous_page) site_name config.site_name site_author config.site_author page_description config.site_description repo_url config.repo_url repo_name config.repo_name site_url config.site_url copyright config.copyright google_analytics config.google_analytics homepage_url nav.homepage.url favicon {{ base_url }}/img/favicon.ico Increased Template Customization. ( #607 ) \u00b6 The built-in themes have been updated by having each of their many parts wrapped in template blocks which allow each individual block to be easily overridden using the theme_dir config setting. Without any new settings, you can use a different analytics service, replace the default search function, or alter the behavior of the navigation, among other things. See the relevant documentation for more details. To enable this feature, the primary entry point for page templates has been changed from base.html to main.html . This allows base.html to continue to exist while allowing users to override main.html and extend base.html . For version 0.16, base.html will continue to work if no main.html template exists, but it is deprecated and will raise a warning. In version 1.0, a build will fail if no main.html template exists. Any custom and third party templates should be updated accordingly. The easiest way for a third party theme to be updated would be to simply add a main.html file which only contains the following line: {% extends \"base.html\" %} That way, the theme contains the main.html entry point, and also supports overriding blocks in the same manner as the built-in themes. Third party themes are encouraged to wrap the various pieces of their templates in blocks in order to support such customization. Auto-Populated extra_css and extra_javascript Deprecated. ( #986 ) \u00b6 In previous versions of MkDocs, if the extra_css or extra_javascript config settings were empty, MkDocs would scan the docs_dir and auto-populate each setting with all of the CSS and JavaScript files found. This behavior is deprecated and a warning will be issued. In the next release, the auto-populate feature will stop working and any unlisted CSS and JavaScript files will not be included in the HTML templates. In other words, they will still be copied to the site-dir , but they will not have any effect on the theme if they are not explicitly listed. All CSS and JavaScript files in the docs_dir should be explicitly listed in the extra_css or extra_javascript config settings going forward. Support for dirty builds. ( #990 ) \u00b6 For large sites the build time required to create the pages can become problematic, thus a \"dirty\" build mode was created. This mode simply compares the modified time of the generated HTML and source markdown. If the markdown has changed since the HTML then the page is re-constructed. Otherwise, the page remains as is. This mode may be invoked in both the mkdocs serve and mkdocs build commands: mkdocs serve --dirtyreload mkdocs build --dirty It is important to note that this method for building the pages is for development of content only, since the navigation and other links do not get updated on other pages. Stricter Directory Validation \u00b6 Previously, a warning was issued if the site_dir was a child directory of the docs_dir . This now raises an error. Additionally, an error is now raised if the docs_dir is set to the directory which contains your config file rather than a child directory. You will need to rearrange you directory structure to better conform with the documented layout . Other Changes and Additions to Version 0.16.0 \u00b6 Bugfix: Support gh-deploy command on Windows with Python 3 ( #722 ) Bugfix: Include .woff2 font files in Python package build ( #894 ) Various updates and improvements to Documentation Home Page/Tutorial ( #870 ) Bugfix: Support livereload for config file changes ( #735 ) Bugfix: Non-media template files are no longer copied with media files ( #807 ) Add a flag (-e/--theme-dir) to specify theme directory with the commands mkdocs build and mkdocs serve ( #832 ) Fixed issues with Unicode file names under Windows and Python 2. ( #833 ) Improved the styling of in-line code in the MkDocs theme. ( #718 ) Bugfix: convert variables to JSON when being passed to JavaScript ( #850 ) Updated the ReadTheDocs theme to match the upstream font sizes and colors more closely. ( #857 ) Fixes an issue with permalink markers showing when the mouse was far above them ( #843 ) Bugfix: Handle periods in directory name when automatically creating the pages config. ( #728 ) Update searching to Lunr 0.7, which comes with some performance enhancements for larger documents ( #859 ) Bugfix: Support SOURCE_DATE_EPOCH environment variable for \"reproducible\" builds ( #938 ) Follow links when copying media files ( #869 ). Change \"Edit on...\" links to point directly to the file in the source repository, rather than to the root of the repository ( #975 ), configurable via the new edit_uri setting. Bugfix: Don't override config value for strict mode if not specified on CLI ( #738 ). Add a --force flag to the gh-deploy command to force the push to the repository ( #973 ). Improve alignment for current selected menu item in readthedocs theme ( #888 ). http://user.github.io/repo => https://user.github.io/repo/ ( #1029 ). Improve installation instructions ( #1028 ). Account for wide tables and consistently wrap inline code spans ( #834 ). Bugfix: Use absolute URLs in nav & media links from error templates ( #77 ). Version 0.15.3 (2016-02-18) \u00b6 Improve the error message the given theme can't be found. Fix an issue with relative symlinks ( #639 ) Version 0.15.2 (2016-02-08) \u00b6 Fix an incorrect warning that states external themes will be removed from MkDocs . Version 0.15.1 (2016-01-30) \u00b6 Lower the minimum supported Click version to 3.3 for package maintainers. ( #763 ) Version 0.15.0 (2016-01-21) \u00b6 Major Additions to Version 0.15.0 \u00b6 Add support for installable themes \u00b6 MkDocs now supports themes that are distributed via Python packages. With this addition, the Bootstrap and Bootswatch themes have been moved to external git repositories and python packages. See their individual documentation for more details about these specific themes. MkDocs Bootstrap MkDocs Bootswatch They will be included with MkDocs by default until a future release. After that they will be installable with pip: pip install mkdocs-bootstrap and pip install mkdocs-bootswatch See the documentation for Customizing Your Theme for more information about using and customizing themes and Custom themes for creating and distributing new themes Other Changes and Additions to Version 0.15.0 \u00b6 Fix issues when using absolute links to Markdown files. ( #628 ) Deprecate support of Python 2.6, pending removal in 1.0.0. ( #165 ) Add official support for Python version 3.5. Add support for site_description and site_author to the ReadTheDocs theme. ( #631 ) Update FontAwesome to 4.5.0. ( #789 ) Increase IE support with X-UA-Compatible. ( #785 ) Added support for Python's -m flag. ( #706 ) Bugfix: Ensure consistent ordering of auto-populated pages. ( #638 ) Bugfix: Scroll the tables of contents on the MkDocs theme if it is too long for the page. ( #204 ) Bugfix: Add all ancestors to the page attribute ancestors rather than just the initial one. ( #693 ) Bugfix: Include HTML in the build output again. ( #691 ) Bugfix: Provide filename to Read the Docs. ( #721 and RTD#1480 ) Bugfix: Silence Click's unicode_literals warning. ( #708 ) Version 0.14.0 (2015-06-09) \u00b6 Improve Unicode handling by ensuring that all config strings are loaded as Unicode. ( #592 ) Remove dependency on the six library. ( #583 ) Remove dependency on the ghp-import library. ( #547 ) Add --quiet and --verbose options to all sub-commands. ( #579 ) Add short options ( -a ) to most command line options. ( #579 ) Add copyright footer for readthedocs theme. ( #568 ) If the requested port in mkdocs serve is already in use, don't show the user a full stack trace. ( #596 ) Bugfix: Fix a JavaScript encoding problem when searching with spaces. ( #586 ) Bugfix: gh-deploy now works if the mkdocs.yml is not in the git repo root. ( #578 ) Bugfix: Handle (pass-through instead of dropping) HTML entities while parsing TOC. ( #612 ) Bugfix: Default extra_templates to an empty list, don't automatically discover them. ( #616 ) Version 0.13.3 (2015-06-02) \u00b6 Bugfix: Reduce validation error to a warning if the site_dir is within the docs_dir as this shouldn't cause any problems with building but will inconvenience users building multiple times. ( #580 ) Version 0.13.2 (2015-05-30) \u00b6 Bugfix: Ensure all errors and warnings are logged before exiting. ( #536 ) Bugfix: Fix compatibility issues with ReadTheDocs. ( #554 ) Version 0.13.1 (2015-05-27) \u00b6 Bugfix: Fix a problem with minimal configurations which only contain a list of paths in the pages config. ( #562 ) Version 0.13.0 (2015-05-26) \u00b6 Deprecations to Version 0.13.0 \u00b6 Deprecate the JSON command \u00b6 In this release the mkdocs json command has been marked as deprecated and when used a deprecation warning will be shown. It will be removed in a future release of MkDocs, version 1.0 at the latest. The mkdocs json command provided a convenient way for users to output the documentation contents as JSON files but with the additions of search to MkDocs this functionality is duplicated. A new index with all the contents from a MkDocs build is created in the site_dir , so with the default value for the site_dir It can be found in site/mkdocs/search_index.json . This new file is created on every MkDocs build (with mkdocs build ) and no configuration is needed to enable it. Change the pages configuration \u00b6 Provide a new way to define pages, and specifically nested pages , in the mkdocs.yml file and deprecate the existing approach, support will be removed with MkDocs 1.0. Warn users about the removal of builtin themes \u00b6 All themes other than mkdocs and readthedocs will be moved into external packages in a future release of MkDocs. This will enable them to be more easily supported and updates outside MkDocs releases. Major Additions to Version 0.13.0 \u00b6 Search \u00b6 Support for search has now been added to MkDocs. This is based on the JavaScript library lunr.js . It has been added to both the mkdocs and readthedocs themes. See the custom theme documentation on supporting search for adding it to your own themes. New Command Line Interface \u00b6 The command line interface for MkDocs has been re-written with the Python library Click . This means that MkDocs now has an easier to use interface with better help output. This change is partially backwards incompatible as while undocumented it was possible to pass any configuration option to the different commands. Now only a small subset of the configuration options can be passed to the commands. To see in full commands and available arguments use mkdocs --help and mkdocs build --help to have them displayed. Support Extra HTML and XML files \u00b6 Like the extra_javascript and extra_css configuration options, a new option named extra_templates has been added. This will automatically be populated with any .html or .xml files in the project docs directory. Users can place static HTML and XML files and they will be copied over, or they can also use Jinja2 syntax and take advantage of the global variables . By default MkDocs will use this approach to create a sitemap for the documentation. Other Changes and Additions to Version 0.13.0 \u00b6 Add support for Markdown extension configuration options . ( #435 ) MkDocs now ships Python wheels . ( #486 ) Only include the build date and MkDocs version on the homepage. ( #490 ) Generate sitemaps for documentation builds. ( #436 ) Add a clearer way to define nested pages in the configuration. ( #482 ) Add an extra config option for passing arbitrary variables to the template. ( #510 ) Add --no-livereload to mkdocs serve for a simpler development server. ( #511 ) Add copyright display support to all themes ( #549 ) Add support for custom commit messages in a mkdocs gh-deploy ( #516 ) Bugfix: Fix linking to media within the same directory as a markdown file called index.md ( #535 ) Bugfix: Fix errors with Unicode filenames ( #542 ). Version 0.12.2 (2015-04-22) \u00b6 Bugfix: Fix a regression where there would be an error if some child titles were missing but others were provided in the pages config. ( #464 ) Version 0.12.1 (2015-04-14) \u00b6 Bugfix: Fixed a CSS bug in the table of contents on some browsers where the bottom item was not clickable. Version 0.12.0 (2015-04-14) \u00b6 Display the current MkDocs version in the CLI output. ( #258 ) Check for CNAME file when using gh-deploy. ( #285 ) Add the homepage back to the navigation on all themes. ( #271 ) Add a strict more for local link checking. ( #279 ) Add Google analytics support to all themes. ( #333 ) Add build date and MkDocs version to the ReadTheDocs and MkDocs theme outputs. ( #382 ) Standardize highlighting across all themes and add missing languages. ( #387 ) Add a verbose flag. (-v) to show more details about what the build. ( #147 ) Add the option to specify a remote branch when deploying to GitHub. This enables deploying to GitHub pages on personal and repo sites. ( #354 ) Add favicon support to the ReadTheDocs theme HTML. ( #422 ) Automatically refresh the browser when files are edited. ( #163 ) Bugfix: Never re-write URLs in code blocks. ( #240 ) Bugfix: Don't copy dotfiles when copying media from the docs_dir . ( #254 ) Bugfix: Fix the rendering of tables in the ReadTheDocs theme. ( #106 ) Bugfix: Add padding to the bottom of all bootstrap themes. ( #255 ) Bugfix: Fix issues with nested Markdown pages and the automatic pages configuration. ( #276 ) Bugfix: Fix a URL parsing error with GitHub enterprise. ( #284 ) Bugfix: Don't error if the mkdocs.yml is completely empty. ( #288 ) Bugfix: Fix a number of problems with relative URLs and Markdown files. ( #292 ) Bugfix: Don't stop the build if a page can't be found, continue with other pages. ( #150 ) Bugfix: Remove the site_name from the page title, this needs to be added manually. ( #299 ) Bugfix: Fix an issue with table of contents cutting off Markdown. ( #294 ) Bugfix: Fix hostname for BitBucket. ( #339 ) Bugfix: Ensure all links end with a slash. ( #344 ) Bugfix: Fix repo links in the readthedocs theme. ( #365 ) Bugfix: Include jQuery locally to avoid problems using MkDocs offline. ( #143 ) Bugfix: Don't allow the docs_dir to be in the site_dir or vice versa. ( #384 ) Bugfix: Remove inline CSS in the ReadTheDocs theme. ( #393 ) Bugfix: Fix problems with the child titles due to the order the pages config was processed. ( #395 ) Bugfix: Don't error during live reload when the theme doesn't exist. ( #373 ) Bugfix: Fix problems with the Meta extension when it may not exist. ( #398 ) Bugfix: Wrap long inline code otherwise they will run off the screen. ( #313 ) Bugfix: Remove HTML parsing regular expressions and parse with HTMLParser to fix problems with titles containing code. ( #367 ) Bugfix: Fix an issue with the scroll to anchor causing the title to be hidden under the navigation. ( #7 ) Bugfix: Add nicer CSS classes to the HTML tables in bootswatch themes. ( #295 ) Bugfix: Fix an error when passing in a specific config file with mkdocs serve . ( #341 ) Bugfix: Don't overwrite index.md files with the mkdocs new command. ( #412 ) Bugfix: Remove bold and italic from code in the ReadTheDocs theme. ( #411 ) Bugfix: Display images inline in the MkDocs theme. ( #415 ) Bugfix: Fix problems with no-highlight in the ReadTheDocs theme. ( #319 ) Bugfix: Don't delete hidden files when using mkdocs build --clean . ( #346 ) Bugfix: Don't block newer versions of Python-markdown on Python >= 2.7. ( #376 ) Bugfix: Fix encoding issues when opening files across platforms. ( #428 ) Version 0.11.1 (2014-11-20) \u00b6 Bugfix: Fix a CSS wrapping issue with code highlighting in the ReadTheDocs theme. ( #233 ) Version 0.11.0 (2014-11-18) \u00b6 Render 404.html files if they exist for the current theme. ( #194 ) Bugfix: Fix long nav bars, table rendering and code highlighting in MkDocs and ReadTheDocs themes. ( #225 ) Bugfix: Fix an issue with the google_analytics code. ( #219 ) Bugfix: Remove __pycache__ from the package tar. ( #196 ) Bugfix: Fix markdown links that go to an anchor on the current page. ( #197 ) Bugfix: Don't add prettyprint well CSS classes to all HTML, only add it in the MkDocs theme. ( #183 ) Bugfix: Display section titles in the ReadTheDocs theme. ( #175 ) Bugfix: Use the polling observer in watchdog so rebuilding works on filesystems without inotify. ( #184 ) Bugfix: Improve error output for common configuration related errors. ( #176 ) Version 0.10.0 (2014-10-29) \u00b6 Added support for Python 3.3 and 3.4. ( #103 ) Configurable Python-Markdown extensions with the config setting markdown_extensions . ( #74 ) Added mkdocs json command to output your rendered documentation as json files. ( #128 ) Added --clean switch to build , json and gh-deploy commands to remove stale files from the output directory. ( #157 ) Support multiple theme directories to allow replacement of individual templates rather than copying the full theme. ( #129 ) Bugfix: Fix <ul> rendering in readthedocs theme. ( #171 ) Bugfix: Improve the readthedocs theme on smaller displays. ( #168 ) Bugfix: Relaxed required python package versions to avoid clashes. ( #104 ) Bugfix: Fix issue rendering the table of contents with some configs. ( #146 ) Bugfix: Fix path for embedded images in sub pages. ( #138 ) Bugfix: Fix use_directory_urls config behavior. ( #63 ) Bugfix: Support extra_javascript and extra_css in all themes. ( #90 ) Bugfix: Fix path-handling under Windows. ( #121 ) Bugfix: Fix the menu generation in the readthedocs theme. ( #110 ) Bugfix: Fix the mkdocs command creation under Windows. ( #122 ) Bugfix: Correctly handle external extra_javascript and extra_css . ( #92 ) Bugfix: Fixed favicon support. ( #87 )","title":"\u53d1\u884c\u8bf4\u660e"},{"location":"about/release-notes/#release-notes","text":"","title":"Release Notes"},{"location":"about/release-notes/#upgrading","text":"To upgrade MkDocs to the latest version, use pip: pip install -U mkdocs You can determine your currently installed version using mkdocs --version : $ mkdocs --version mkdocs, version 1.0 from /path/to/mkdocs (Python 3.6)","title":"Upgrading"},{"location":"about/release-notes/#maintenance-team","text":"The current and past members of the MkDocs team. @tomchristie @d0ugal @waylan @oprypin @ultrabug","title":"Maintenance team"},{"location":"about/release-notes/#version-142-2022-11-01","text":"Officially support Python 3.11 ( #3020 ) Tip: Simply upgrading to Python 3.11 can cut off 10-15% of your site's build time. Support multiple instances of the same plugin ( #3027 ) If a plugin is specified multiple times in the list under the plugins: config, that will create 2 (or more) instances of the plugin with their own config each. Previously this case was unforeseen and, as such, bugged. Now even though this works, by default a warning will appear from MkDocs anyway, unless the plugin adds a class variable supports_multiple_instances = True . Bugfix (regression in 1.4.1): Don't error when a plugin puts a plain string into warnings ( #3016 ) Bugfix: Relative links will always render with a trailing slash ( #3022 ) Previously under use_directory_urls , links from a sub-page to the main index page rendered as e.g. <a href=\"../..\"> even though in all other cases the links look like <a href=\"../../\"> . This caused unwanted behavior on some combinations of Web browsers and servers. Now this special-case bug was removed. Built-in \"mkdocs\" theme now also supports Norwegian language ( #3024 ) Plugin-related warnings look more readable ( #3016 ) See commit log .","title":"Version 1.4.2 (2022-11-01)"},{"location":"about/release-notes/#version-141-2022-10-15","text":"Support theme-namespaced plugin loading ( #2998 ) Plugins' entry points can be named as 'sometheme/someplugin'. That will have the following outcome: If the current theme is 'sometheme', the plugin 'sometheme/someplugin' will always be preferred over 'someplugin'. If the current theme isn't 'sometheme', the only way to use this plugin is by specifying plugins: [sometheme/someplugin] . One can also specify plugins: ['/someplugin'] instead of plugins: ['someplugin'] to definitely avoid the theme-namespaced plugin. Bugfix: mkdocs serve will work correctly with non-ASCII paths and redirects ( #3001 ) Windows: 'colorama' is now a dependency of MkDocs, to ensure colorful log output ( #2987 ) Plugin-related config options have more reliable validation and error reporting ( #2997 ) Translation sub-commands of setup.py were completely dropped. See documentation [1] [2] for their new replacements ( #2990 ) The 'mkdocs' package (wheel and source) is now produced by Hatch build system and pyproject.toml instead of setup.py ( #2988 ) Other small improvements; see commit log .","title":"Version 1.4.1 (2022-10-15)"},{"location":"about/release-notes/#version-140-2022-09-27","text":"","title":"Version 1.4.0 (2022-09-27)"},{"location":"about/release-notes/#feature-upgrades","text":"","title":"Feature upgrades"},{"location":"about/release-notes/#hooks-2978","text":"The new hooks: config allows you to add plugin-like event handlers from local Python files, without needing to set up and install an actual plugin. See documentation .","title":"Hooks (#2978)"},{"location":"about/release-notes/#edit_uri-flexibility-2927","text":"There is a new edit_uri_template: config. It works like edit_uri but more generally covers ways to construct an edit URL. See documentation . Additionally, the edit_uri functionality will now fully work even if repo_url is omitted ( #2928 )","title":"edit_uri flexibility (#2927)"},{"location":"about/release-notes/#upgrades-for-plugin-developers","text":"Note This release has big changes to the implementation of plugins and their configs. But, the intention is to have zero breaking changes in all reasonably common use cases. Or at the very least if a code fix is required, there should always be a way to stay compatible with older MkDocs versions. Please report if this release breaks something.","title":"Upgrades for plugin developers"},{"location":"about/release-notes/#customize-event-order-for-plugin-event-handlers-2973","text":"Plugins can now choose to set a priority value for their event handlers. This can override the old behavior where for each event type, the handlers are called in the order that their plugins appear in the plugins config . If this is set, events with higher priority are called first. Events without a chosen priority get a default of 0. Events that have the same priority are ordered as they appear in the config. Recommended priority values: 100 \"first\", 50 \"early\", 0 \"default\", -50 \"late\", -100 \"last\". As different plugins discover more precise relations to each other, the values should be further tweaked. See documentation .","title":"Customize event order for plugin event handlers (#2973)"},{"location":"about/release-notes/#new-events-that-persist-across-builds-in-mkdocs-serve-2972","text":"The new events are on_startup and on_shutdown . They run at the very beginning and very end of an mkdocs invocation. on_startup also receives information on how mkdocs was invoked (e.g. serve --dirtyreload ). See documentation .","title":"New events that persist across builds in mkdocs serve (#2972)"},{"location":"about/release-notes/#replace-filesrc_path-to-not-deal-with-backslashes-2930","text":"The property src_path uses backslashes on Windows, which doesn't make sense as it's a virtual path. To not make a breaking change, there's no change to how this property is used, but now you should: Use File.src_uri instead of File.src_path and File.dest_uri instead of File.dest_path . These consistently use forward slashes, and are now the definitive source that MkDocs itself uses. See source code . As a related tip: you should also stop using os.path.* or pathlib.Path() to deal with these paths, and instead use posixpath.* or pathlib.PurePosixPath()","title":"Replace File.src_path to not deal with backslashes (#2930)"},{"location":"about/release-notes/#mkdocs-is-type-annotated-ready-for-use-with-mypy-2941-2970","text":"","title":"MkDocs is type-annotated, ready for use with mypy (#2941, #2970)"},{"location":"about/release-notes/#type-annotations-for-event-handler-methods-2931","text":"MkDocs' plugin event methods now have type annotations. You might have been adding annotations to events already, but now they will be validated to match the original. See source code and documentation . One big update is that now you should annotate method parameters more specifically as config: defaults.MkDocsConfig instead of config: base.Config . This not only makes it clear that it is the main config of MkDocs itself , but also provides type-safe access through attributes of the object (see next section). See source code and documentation .","title":"Type annotations for event handler methods (#2931)"},{"location":"about/release-notes/#rework-configoption-schemas-as-class-based-2962","text":"When developing a plugin, the settings that it accepts used to be specified in the config_scheme variable on the plugin class. This approach is now soft-deprecated, and instead you should specify the config in a sub-class of base.Config . Old example: from mkdocs import plugins from mkdocs.config import base, config_options class MyPlugin(plugins.BasePlugin): config_scheme = ( ('foo', config_options.Type(int)), ('bar', config_options.Type(str, default='')), ) def on_page_markdown(self, markdown: str, *, config: base.Config, **kwargs): if self.config['foo'] < 5: if config['site_url'].startswith('http:'): return markdown + self.config['baz'] This code snippet actually has many mistakes but it will pass all type checks and silently run and even succeed in some cases. So, on to the new equivalent example, changed to new-style schema and attribute-based access: (Complaints from \"mypy\" added inline) from mkdocs import plugins from mkdocs.config import base, config_options as c class MyPluginConfig(base.Config): foo = c.Optional(c.Type(int)) bar = c.Type(str, default='') class MyPlugin(plugins.BasePlugin[MyPluginConfig]): def on_page_markdown(self, markdown: str, *, config: base.MkDocsConfig, **kwargs): if self.config.foo < 5: # Error, `foo` might be `None`, need to check first. if config.site_url.startswith('http:'): # Error, MkDocs' `site_url` also might be `None`. return markdown + self.config.baz # Error, no such attribute `baz`! This lets you notice the errors from a static type checker before running the code and fix them as such: class MyPlugin(plugins.BasePlugin[MyPluginConfig]): def on_page_markdown(self, markdown: str, *, config: base.MkDocsConfig, **kwargs): if self.config.foo is not None and self.config.foo < 5: # OK, `int < int` is valid. if (config.site_url or '').startswith('http:'): # OK, `str.startswith(str)` is valid. return markdown + self.config.bar # OK, `str + str` is valid. See documentation . Also notice that we had to explicitly mark the config attribute foo as Optional . The new-style config has all attributes marked as required by default, and specifying required=False or required=True is not allowed!","title":"Rework ConfigOption schemas as class-based (#2962)"},{"location":"about/release-notes/#new-config_optionsoptional-2962","text":"Wrapping something into Optional is conceptually similar to \"I want the default to be None \" -- and you have to express it like that, because writing default=None doesn't actually work. Breaking change: the method BaseConfigOption.is_required() was removed. Use .required instead. ( #2938 ) And even the required property should be mostly unused now. For class-based configs, there's a new definition for whether an option is \"required\": It has no default, and It is not wrapped into config_options.Optional .","title":"New: config_options.Optional (#2962)"},{"location":"about/release-notes/#new-config_optionslistofitems-2938","text":"Defines a list of items that each must adhere to the same constraint. Kind of like a validated Type(list) Examples how to express a list of integers (with from mkdocs.config import config_options as c ): Description Code entry Required to specify foo = c.ListOfItems(c.Type(int)) Optional, default is [] foo = c.ListOfItems(c.Type(int), default=[]) Optional, default is None foo = c.Optional(c.ListOfItems(c.Type(int))) See more examples in documentation .","title":"New: config_options.ListOfItems (#2938)"},{"location":"about/release-notes/#updated-config_optionssubconfig-2807","text":"SubConfig used to silently ignore all validation of its config options. Now you should pass validate=True to it or just use new class-based configs where this became the default. So, it can be used to validate a nested sub-dict with all keys pre-defined and value types strictly validated. See examples in documentation .","title":"Updated: config_options.SubConfig (#2807)"},{"location":"about/release-notes/#other-changes-to-config-options","text":"URL 's default is now None instead of '' . This can still be checked for truthiness in the same way - if config.some_url: ( #2962 ) FilesystemObject is no longer abstract and can be used directly, standing for \"file or directory\" with optional existence checking ( #2938 ) Bug fixes: Fix SubConfig , ConfigItems , MarkdownExtensions to not leak values across different instances ( #2916 , #2290 ) SubConfig raises the correct kind of validation error without a stack trace ( #2938 ) Fix dot-separated redirect in config_options.Deprecated(moved_to) ( #2963 ) Tweaked logic for handling ConfigOption.default ( #2938 ) Deprecated config option classes: ConfigItems ( #2983 ), OptionallyRequired ( #2962 ), RepoURL ( #2927 )","title":"Other changes to config options"},{"location":"about/release-notes/#theme-updates","text":"Styles of admonitions in \"MkDocs\" theme ( #2981 ): Update colors to increase contrast Apply admonition styles also to <details> tag, to support Markdown extensions that provide it ( pymdownx.details , callouts ) Built-in themes now also support these languages: Russian ( #2976 ) Turkish (Turkey) ( #2946 ) Ukrainian ( #2980 )","title":"Theme updates"},{"location":"about/release-notes/#future-compatibility","text":"extra_css: and extra_javascript: warn if a backslash \\ is passed to them. ( #2930 , #2984 ) Show DeprecationWarning s as INFO messages. ( #2907 ) If any plugin or extension that you use relies on deprecated functionality of other libraries, it is at risk of breaking in the near future. Plugin developers should address these in a timely manner. Avoid a dependency on importlib_metadata starting from Python 3.10 ( #2959 ) Drop support for Python 3.6 ( #2948 )","title":"Future compatibility"},{"location":"about/release-notes/#incompatible-changes-to-public-apis","text":"mkdocs.utils : create_media_urls and normalize_url warn if a backslash \\ is passed to them. ( #2930 ) is_markdown_file stops accepting case-insensitive variants such as .MD , which is how MkDocs build was already operating. ( #2912 ) Hard-deprecated: modified_time , reduce_list , get_html_path , get_url_path , is_html_file , is_template_file . ( #2912 )","title":"Incompatible changes to public APIs"},{"location":"about/release-notes/#miscellaneous","text":"If a plugin adds paths to watch in LiveReloadServer , it can now unwatch them. ( #2777 ) Bugfix (regression in 1.2): Support listening on an IPv6 address in mkdocs serve . ( #2951 ) Other small improvements; see commit log .","title":"Miscellaneous"},{"location":"about/release-notes/#version-131-2022-07-19","text":"Pin Python-Markdown version to <3.4, thus excluding its latest release that breaks too many external extensions ( #2893 ) When a Markdown extension fails to load, print its name and traceback ( #2894 ) Bugfix for \"readthedocs\" theme (regression in 1.3.0): add missing space in breadcrumbs ( #2810 ) Bugfix: don't complain when a file \"readme.md\" (lowercase) exists, it's not recognized otherwise ( #2852 ) Built-in themes now also support these languages: Italian ( #2860 ) Other small improvements; see commit log .","title":"Version 1.3.1 (2022-07-19)"},{"location":"about/release-notes/#version-130-2022-03-26","text":"","title":"Version 1.3.0 (2022-03-26)"},{"location":"about/release-notes/#feature-upgrades_1","text":"ReadTheDocs theme updated from v0.4.1 to v1.0.0 according to upstream ( #2585 ) The most notable changes: New option logo : Rather than displaying the site_name in the title, one can specify a path to an image to display instead. New option anonymize_ip for Google Analytics. Dependencies were upgraded: jQuery upgraded to 3.6.0, Modernizr.js dropped, and others. See documentation of config options for the theme Built-in themes now also support these languages: German ( #2633 ) Persian (Farsi) ( #2787 ) Support custom directories to watch when running mkdocs serve ( #2642 ) MkDocs by default watches the docs directory and the config file. Now there is a way to add more directories to watch for changes, either via the YAML watch key or the command line flag --watch . Normally MkDocs never reaches into any other directories (so this feature shouldn't be necessary), but some plugins and extensions may do so. See documentation . New --no-history option for gh_deploy ( #2594 ) Allows to discard the history of commits when deploying, and instead replace it with one root commit","title":"Feature upgrades"},{"location":"about/release-notes/#bug-fixes","text":"An XSS vulnerability when using the search function in built-in themes was fixed ( #2791 ) Setting the edit_uri option no longer erroneously adds a trailing slash to repo_url ( #2733 )","title":"Bug fixes"},{"location":"about/release-notes/#miscellaneous_1","text":"Breaking change: the pages config option that was deprecated for a very long time now causes an error when used ( #2652 ) To fix the error, just change from pages to nav . Performance optimization: during startup of MkDocs, code and dependencies of other commands will not be imported ( #2714 ) The most visible effect of this is that dependencies of mkdocs serve will not be imported when mkdocs build is used. Recursively validate nav ( #2680 ) Validation of the nested nav structure has been reworked to report errors early and reliably. Some edge cases have been declared invalid. Other small improvements; see commit log .","title":"Miscellaneous"},{"location":"about/release-notes/#version-124-2022-03-26","text":"Compatibility with Jinja2 3.1.0 ( #2800 ) Due to a breaking change in Jinja2, MkDocs would crash with the message AttributeError: module 'jinja2' has no attribute 'contextfilter'","title":"Version 1.2.4 (2022-03-26)"},{"location":"about/release-notes/#version-123-2021-10-12","text":"Built-in themes now also support these languages: Simplified Chinese ( #2497 ) Japanese ( #2525 ) Brazilian Portuguese ( #2535 ) Spanish ( #2545 , previously #2396 ) Third-party plugins will take precedence over built-in plugins with the same name ( #2591 ) Bugfix: Fix ability to load translations for some languages: core support ( #2565 ) and search plugin support with fallbacks ( #2602 ) Bugfix (regression in 1.2): Prevent directory traversal in the dev server ( #2604 ) Bugfix (regression in 1.2): Prevent webserver warnings from being treated as a build failure in strict mode ( #2607 ) Bugfix: Correctly print colorful messages in the terminal on Windows ( #2606 ) Bugfix: Python version 3.10 was displayed incorrectly in --version ( #2618 ) Other small improvements; see commit log .","title":"Version 1.2.3 (2021-10-12)"},{"location":"about/release-notes/#version-122-2021-07-18","text":"Bugfix (regression in 1.2): Fix serving files/paths with Unicode characters ( #2464 ) Bugfix (regression in 1.2): Revert livereload file watching to use polling observer ( #2477 ) This had to be done to reasonably support usages that span virtual filesystems such as non-native Docker and network mounts. This goes back to the polling approach, very similar to that was always used prior, meaning most of the same downsides with latency and CPU usage. Revert from 1.2: Remove the requirement of a site_url config and the restriction on use_directory_urls ( #2490 ) Bugfix (regression in 1.2): Don't require trailing slash in the URL when serving a directory index in mkdocs serve server ( #2507 ) Instead of showing a 404 error, detect if it's a directory and redirect to a path with a trailing slash added, like before. Bugfix: Fix gh_deploy with config-file in the current directory ( #2481 ) Bugfix: Fix reversed breadcrumbs in \"readthedocs\" theme ( #2179 ) Allow \"mkdocs.yaml\" as the file name when '--config' is not passed ( #2478 ) Stop treating \";\" as a special character in URLs: urlparse -> urlsplit ( #2502 ) Improve build performance for sites with many pages (partly already done in 1.2) ( #2407 )","title":"Version 1.2.2 (2021-07-18)"},{"location":"about/release-notes/#version-121-2021-06-09","text":"Bugfix (regression in 1.2): Ensure 'gh-deploy' always pushes.","title":"Version 1.2.1 (2021-06-09)"},{"location":"about/release-notes/#version-12-2021-06-04","text":"","title":"Version 1.2 (2021-06-04)"},{"location":"about/release-notes/#major-additions-to-version-12","text":"","title":"Major Additions to Version 1.2"},{"location":"about/release-notes/#support-added-for-theme-localization-2299","text":"The mkdocs and readthedocs themes now support language localization using the theme.locale parameter, which defaults to en (English). The only other supported languages in this release are fr (French) and es (Spanish). For details on using the provided translations, see the user guide . Note that translation will not happen by default. Users must first install the necessary dependencies with the following command: pip install mkdocs[i18n] Translation contributions are welcome and detailed in the Translation Guide . Developers of third party themes may want to review the relevant section of the Theme Development Guide . Contributors who are updating the templates to the built-in themes should review the Contributing Guide . The lang setting of the search plugin now defaults to the language specified in theme.locale .","title":"Support added for Theme Localization (#2299)"},{"location":"about/release-notes/#support-added-for-environment-variables-in-the-configuration-file-1954","text":"Environments variables may now be specified in the configuration file with the !ENV tag. The value of the variable will be parsed by the YAML parser and converted to the appropriate type. somekey: !ENV VAR_NAME otherkey: !ENV [VAR_NAME, FALLBACK_VAR, 'default value'] See Environment Variables in the Configuration documentation for details.","title":"Support added for Environment Variables in the configuration file (#1954)"},{"location":"about/release-notes/#support-added-for-configuration-inheritance-2218","text":"A configuration file may now inherit from a parent configuration file. In the primary file set the INHERIT key to the relative path of the parent file. INHERIT: path/to/base.yml The two files will then be deep merged. See Configuration Inheritance for details.","title":"Support added for Configuration Inheritance (#2218)"},{"location":"about/release-notes/#update-gh-deploy-command-2170","text":"The vendored (and modified) copy of ghp_import has been replaced with a dependency on the upstream library. As of version 1.0.0, ghp-import includes a Python API which makes it possible to call directly. MkDocs can now benefit from recent bug fixes and new features, including the following: A .nojekyll file is automatically included when deploying to GitHub Pages. The --shell flag is now available, which reportedly works better on Windows. Git author and committer environment variables should be respected ( #1383 ).","title":"Update gh-deploy command (#2170)"},{"location":"about/release-notes/#rework-auto-reload-and-http-server-for-mkdocs-serve-2385","text":"mkdocs serve now uses a new underlying server + file watcher implementation, based on http.server from standard library and watchdog . It provides similar functionality to the previously used livereload library (which is now dropped from dependencies, along with tornado ). This makes reloads more responsive and consistent in terms of timing. Multiple rapid file changes no longer cause the site to repeatedly rebuild (issue #2061 ). Almost every aspect of the server is slightly different, but actual visible changes are minor. The logging outputs are only similar to the old ones. Degradations in behavior are not expected, and should be reported if found.","title":"Rework auto-reload and HTTP server for mkdocs serve (#2385)"},{"location":"about/release-notes/#offset-the-local-site-root-according-to-the-sub-path-of-the-site_url-2424","text":"When using mkdocs serve and having the site_url specified as e.g. http://example.org/sub/path/ , now the root of the locally served site becomes http://127.0.0.1:8000/sub/path/ and all document paths are offset accordingly.","title":"Offset the local site root according to the sub-path of the site_url (#2424)"},{"location":"about/release-notes/#a-build_error-event-was-added-2103","text":"Plugin developers can now use the on_build_error hook to execute code when an exception is raised while building the site. See on_build_error in the Plugins documentation for details.","title":"A build_error event was added (#2103)"},{"location":"about/release-notes/#three-new-exceptions-builderror-pluginerror-and-abort-2103","text":"MkDocs now has tree new exceptions defined in mkdocs.exceptions : BuildError , PluginError , and Abort : PluginError can be raised from a plugin to stop the build and log an error message without traceback . BuildError should not be used by third-party plugins developers and is reserved for internal use only. Abort is used internally to abort the build and display an error without a traceback. See Handling errors in the Plugins documentation for details.","title":"Three new exceptions: BuildError PluginError and Abort (#2103)"},{"location":"about/release-notes/#search-indexing-strategy-configuration","text":"Users can now specify which strategy they wish to use when indexing their site for search. A user can select between the following options: full : Adds page title, section headings, and full page text to the search index. sections : Adds page titles and section headings only to the search index. titles : Adds only the page titles to the search index. See Search Indexing in the configuration documentation for details.","title":"Search Indexing Strategy configuration"},{"location":"about/release-notes/#backward-incompatible-changes-in-12","text":"The site_url configuration option is now required . If it is not set, a warning will be issued. In a future release an error will be raised ( #2189 ). The use_directory_urls configuration option will be forced to false if site_url is set to an empty string. In that case, if use_directory_urls is not explicitly set to false , a warning will be issued ( #2189 ). Note This was reverted in release 1.2.2 The google_analytics configuration option is deprecated as Google appears to be phasing it out in favor of its new Google Analytics 4 property. See the documentation for your theme for alternatives which can be configured as part of your theme configuration. For example, the mkdocs and readthedocs themes have each added a new theme.analytics.gtag configuration option which uses the new Google Analytics 4 property. See Google's documentation on how to Upgrade to a Google Analytics 4 property . Then set theme.analytics.gtag to the \"G-\" ID and delete the google_analytics configuration option which contains a \"UA-\" ID. So long as the old \"UA-\" ID and new \"G-\" ID are properly linked in your Google account, and you are using the \"G-\" ID, the data will be made available in both the old and new formats by Google Analytics. See #2252 . A theme's files are now excluded from the list of watched files by default when using the --livereload server. This new default behavior is what most users need and provides better performance when editing site content. Theme developers can enable the old behavior with the --watch-theme option. ( #2092 ). The mkdocs theme now removes the sidebar when printing a page. This frees up horizontal space for better rendering of content like tables ( #2193 ). The mkdocs.config.DEFAULT_SCHEMA global variable has been replaced with the function mkdocs.config.defaults.get_schema() , which ensures that each instance of the configuration is unique ( #2289 ). The mkdocs.utils.warning_filter is deprecated and now does nothing. Plugins should remove any reference to is as it may be deleted in a future release. To ensure any warnings get counted, simply log them to the mkdocs log (i.e.: mkdocs.plugins.pluginname ). The on_serve event (which receives the server object and the builder function) is affected by the server rewrite. server is now a mkdocs.livereload.LiveReloadServer instead of livereload.server.Server . The typical action that plugins can do with these is to call server.watch(some_dir, builder) , which basically adds that directory to watched directories, causing the site to be rebuilt on file changes. That still works, but passing any other function to watch is deprecated and shows a warning. This 2 nd parameter is already optional, and will accept only this exact builder function just for compatibility. The python method of the plugins.search.prebuild_index configuration option is pending deprecation as of version 1.2. It is expected that in version 1.3 it will raise a warning if used and in version 1.4 it will raise an error. Users are encouraged to use an alternate method to generate a prebuilt index for search. The lunr and lunr[languages] dependencies are no longer installed by default. The dependencies are only needed for the rare user who pre-builds the search index and uses the python option, which is now pending deprecation. If you use this feature, then you will need to manually install lunr and lunr[languages] . A warning is issued if the dependencies are needed but not installed.","title":"Backward Incompatible Changes in 1.2"},{"location":"about/release-notes/#other-changes-and-additions-to-version-12","text":"Bugfix: Properly process navigation child items in _get_by_type when filtering for sections ( #2203 ). Official support for Python 3.9 has been added and support for Python 3.5 has been dropped. Bugfix: Fixes an issue that would result in a partially cut-off navigation item in the ReadTheDocs theme ( #2297 ). Structure Files object now has a remove method to help plugin developers manipulate the Files tree. The corresponding src_paths has become a property to accommodate this possible dynamic behavior. See #2305 . Updated highlight.js to 10.5.0. See #2313 . Bugfix: Search plugin now works with Japanese language. See #2178 . Documentation has been refactored ( #1629 ). Restore styling of tables in the readthedocs theme ( #2028 ). Ensure site_url ends with a slash ( #1785 ). Correct documentation of pages template context variable ( #1736 ). The lunr dependency has been updated to 0.5.9, and lunr.js to the corresponding 2.3.9 version ( #2306 ). Color is now used in log messages to identify errors, warnings and debug messages. Bugfix: Identify homepage when use_directory_urls is False ( #2362 ).","title":"Other Changes and Additions to Version 1.2"},{"location":"about/release-notes/#version-112-2020-05-14","text":"Bugfix: Normalize IP addresses and change unsupported address error to a warning ( #2108 ).","title":"Version 1.1.2 (2020-05-14)"},{"location":"about/release-notes/#version-111-2020-05-12","text":"Bugfix: Allow compressed sitemap to be deterministic by supporting the SOURCE_DATE_EPOCH environment variable ( #2100 ). Bugfix: Use README.md as index.html even if use_directory_urls is false ( #2081 ). Bugfix: Ignore links which start with a backslash ( #1680 ). Bugfix: Pass builder to the on_serve event so that it can be passed to server.watch by plugins ( #1952 ). Bugfix: Use lunr[languages]==0.5.8 to avoid nltk incompatibilities ( #2062 ). Bugfix: Ensure wheel is Python 3 only ( #2021 ). Bugfix: Clean up dev_addr validation and disallow 0.0.0.0 ( #2022 ). Add support for min_search_length parameter for search plugin ( #2014 ). Bugfix: readthedocs theme code colors ( #2027 ).","title":"Version 1.1.1 (2020-05-12)"},{"location":"about/release-notes/#version-11-2020-02-22","text":"","title":"Version 1.1 (2020-02-22)"},{"location":"about/release-notes/#major-additions-to-version-11","text":"","title":"Major Additions to Version 1.1"},{"location":"about/release-notes/#support-for-lunrpy-as-prebuild_index-engine","text":"Mkdocs now supports pre-building indices using Lunr.py , a pure Python implementation of Lunr.js, allowing the user to avoid installing a NodeJS environment if so desired. For more information please read the prebuild_index documentation .","title":"Support for Lunr.py as prebuild_index engine"},{"location":"about/release-notes/#readthedocs-theme-updated-with-upstream-588-and-1374","text":"The readthedocs theme now more closely matches the upstream Sphinx theme (version 0.4.1). A number of new theme configuration settings were added which mirror the upstream configuration options. See the theme documentation for details.","title":"readthedocs theme updated with upstream (#588 and #1374)"},{"location":"about/release-notes/#update-mkdocs-theme-to-bootswatch-413-1563","text":"The mkdocs theme now supports all the features of Bootswatch 4.1 . Additionally, 2 filenames were changed in this update. If you are using a theme which inherits from the mkdocs theme, the theme developer may need to update these filenames as follows. css/bootstrap-custom.min.css => css/bootstrap.min.css js/bootstrap-3.0.3.min.js => js/bootstrap.min.js","title":"Update mkdocs theme to Bootswatch 4.1.3 (#1563)"},{"location":"about/release-notes/#improved-configuration-support-on-the-command-line-1401","text":"The build , serve , and gh-deploy subcommands now support flags to control whether directory URLs should be created: --use-directory-urls / --no-directory-urls . In addition, the gh-deploy subcommand now supports all the configuration options that build and serve do, adding --strict , --theme , --theme-dir , and --site-dir .","title":"Improved configuration support on the command line (#1401)"},{"location":"about/release-notes/#updated-lunr-languages-support-1729","text":"The lunr-languages plugin has been updated to 1.4.0, adding support for Arabic ( ar ) and Vietnamese ( vi ) languages. In addition, the Dutch and Japanese language codes have been changed to their standard values: nl and ja , respectively. The old language codes ( du and jp ) remain as aliases but may be removed in a future version of MkDocs.","title":"Updated lunr-languages support (#1729)"},{"location":"about/release-notes/#other-changes-and-additions-to-version-11","text":"Bugfix: Ensure nested dot files in themes are ignored and document behavior ( #1981 ). Update minimum dependency to Markdown 3.2.1. Updated minimum dependency to Jinja 2.10.1 to address security concerns ( #1780 ). Update to lunr.js 2.3.8 ( #1989 ). Add support for Python 3.8. Drop support for Python 3.4. Drop support for Python 2.7. MkDocs is PY3 only now ( #1926 ). Bugfix: Select appropriate asyncio event loop on Windows for Python 3.8+ ( #1885 ). Bugfix: Ensure nested index pages do not get identified as the homepage ( #1919 ). Bugfix: Properly identify deployment version ( #1879 ). Bugfix: Properly build ValidationError message for custom_dir ( #1849 ). Bugfix: Exclude Markdown files and READMEs from theme ( #1766 ). Bugfix: Account for encoded URLs ( #1670 ). Bugfix: Ensure theme files do not override docs_dir files ( #1671 ). Bugfix: Do not normalize URL fragments ( #1655 ). Bugfix: Skip external URLs in sitemap.xml ( #1742 ). Bugfix: Ensure theme files do not override docs_dir files on Windows ( #1876 ) Add canonical tag to readthedocs theme ( #1669 ). Improved error message for when git is not available. Add support for nav_style theme option for the mkdocs theme ( #1930 ). Bugfix: Long/nested dropdowns now behave more consistently for the mkdocs theme ( #1234 ). Bugfix: Multi-row nav headers in the mkdocs theme no longer obscure the document content ( #716 ). Add support for navigation_depth theme option for the mkdocs theme ( #1970 ). level attribute in page.toc items is now 1-indexed to match the level in <hN> tags ( #1970 ).","title":"Other Changes and Additions to Version 1.1"},{"location":"about/release-notes/#version-104-2018-09-07","text":"Bugfix: Ignore absolute links in Markdown ( #1621 ).","title":"Version 1.0.4 (2018-09-07)"},{"location":"about/release-notes/#version-103-2018-08-29","text":"Bugfix: Warn on relative paths in navigation ( #1604 ). Bugfix: Handle empty theme_config.yml files correctly ( #1602 ).","title":"Version 1.0.3 (2018-08-29)"},{"location":"about/release-notes/#version-102-2018-08-22","text":"Bugfix: Provide absolute base_url to error templates ( #1598 ).","title":"Version 1.0.2 (2018-08-22)"},{"location":"about/release-notes/#version-101-2018-08-13","text":"Bugfix: Prevent page reload when [Enter] is pressed in search box ( #1589 ). Bugfix: Avoid calling search until all assets are ready ( #1584 ). Bugfix: Exclude README.md if index.md is present ( #1580 ). Bugfix: Fix readthedocs theme navigation bug with homepage ( #1576 ).","title":"Version 1.0.1 (2018-08-13)"},{"location":"about/release-notes/#version-10-2018-08-03","text":"","title":"Version 1.0 (2018-08-03)"},{"location":"about/release-notes/#major-additions-to-version-10","text":"","title":"Major Additions to Version 1.0"},{"location":"about/release-notes/#internal-refactor-of-pages-files-and-navigation","text":"Internal handling of pages, files and navigation has been completely refactored. The changes included in the refactor are summarized below. Support for hidden pages. All Markdown pages are now included in the build regardless of whether they are included in the navigation configuration ( #699 ). The navigation can now include links to external sites ( #989 #1373 & #1406 ). Page data (including titles) is properly determined for all pages before any page is rendered ( #1347 ). Automatically populated navigation now sorts index pages to the top. In other words, The index page will be listed as the first child of a directory, while all other documents are sorted alphanumerically by file name after the index page ( #73 & #1042 ). A README.md file is now treated as an index file within a directory and will be rendered to index.html ( #608 ). The URLs for all files are computed once and stored in a files collection. This ensures all internal links are always computed correctly regardless of the configuration. This also allows all internal links to be validated, not just links to other Markdown pages. ( #842 & #872 ). A new url template filter smartly ensures all URLs are relative to the current page ( #1526 ). An on_files plugin event has been added, which could be used to include files not in the docs_dir , exclude files, redefine page URLs (i.e. implement extensionless URLs), or to manipulate files in various other ways.","title":"Internal Refactor of Pages, Files, and Navigation"},{"location":"about/release-notes/#backward-incompatible-changes","text":"As part of the internal refactor, a number of backward incompatible changes have been introduced, which are summarized below.","title":"Backward Incompatible Changes"},{"location":"about/release-notes/#urls-have-changed-when-use_directory_urls-is-false","text":"Previously, all Markdown pages would be have their filenames altered to be index pages regardless of how the use_directory_urls setting was configured. However, the path munging is only needed when use_directory_urls is set to True (the default). The path mangling no longer happens when use_directory_urls is set to False , which will result in different URLs for all pages that were not already index files. As this behavior only effects a non-default configuration, and the most common user-case for setting the option to False is for local file system ( file:// ) browsing, its not likely to effect most users. However, if you have use_directory_urls set to False for a MkDocs site hosted on a web server, most of your URLs will now be broken. As you can see below, the new URLs are much more sensible. Markdown file Old URL New URL index.md index.html index.html foo.md foo/index.html foo.html foo/bar.md foo/bar/index.html foo/bar.html Note that there has been no change to URLs or file paths when use_directory_urls is set to True (the default), except that MkDocs more consistently includes an ending slash on all internally generated URLs.","title":"URLs have changed when use_directory_urls is False"},{"location":"about/release-notes/#the-pages-configuration-setting-has-been-renamed-to-nav","text":"The pages configuration setting is deprecated and will issue a warning if set in the configuration file. The setting has been renamed nav . To update your configuration, simply rename the setting to nav . In other words, if your configuration looked like this: pages: - Home: index.md - User Guide: user-guide.md Simply edit the configuration as follows: nav: - Home: index.md - User Guide: user-guide.md In the current release, any configuration which includes a pages setting, but no nav setting, the pages configuration will be copied to nav and a warning will be issued. However, in a future release, that may no longer happen. If both pages and nav are defined, the pages setting will be ignored.","title":"The pages configuration setting has been renamed to nav"},{"location":"about/release-notes/#template-variables-and-base_url","text":"In previous versions of MkDocs some URLs expected the base_url template variable to be prepended to the URL and others did not. That inconsistency has been removed in that no URLs are modified before being added to the template context. For example, a theme template might have previously included a link to the site_name as: <a href=\"{{ nav.homepage.url }}\">{{ config.site_name }}</a> And MkDocs would magically return a URL for the homepage which was relative to the current page. That \"magic\" has been removed and the url template filter should be used: <a href=\"{{ nav.homepage.url|url }}\">{{ config.site_name }}</a> This change applies to any navigation items and pages, as well as the page.next_page and page.previous_page attributes. For the time being, the extra_javascript and extra_css variables continue to work as previously (without the url template filter), but they have been deprecated and the corresponding configuration values ( config.extra_javascript and config.extra_css respectively) should be used with the filter instead. {% for path in config['extra_css'] %} <link href=\"{{ path|url }}\" rel=\"stylesheet\"> {% endfor %} Note that navigation can now include links to external sites. Obviously, the base_url should not be prepended to these items. However, the url template filter is smart enough to recognize the URL is absolute and does not alter it. Therefore, all navigation items can be passed to the filter and only those that need to will be altered. {% for nav_item in nav %} <a href=\"{{ nav_item.url|url }}\">{{ nav_item.title }}</a> {% endfor %}","title":"Template variables and base_url"},{"location":"about/release-notes/#path-based-settings-are-relative-to-configuration-file-543","text":"Previously any relative paths in the various configuration options were resolved relative to the current working directory. They are now resolved relative to the configuration file. As the documentation has always encouraged running the various MkDocs commands from the directory that contains the configuration file (project root), this change will not affect most users. However, it will make it much easier to implement automated builds or otherwise run commands from a location other than the project root. Simply use the -f/--config-file option and point it at the configuration file: mkdocs build --config-file /path/to/my/config/file.yml As previously, if no file is specified, MkDocs looks for a file named mkdocs.yml in the current working directory.","title":"Path Based Settings are Relative to Configuration File (#543)"},{"location":"about/release-notes/#added-support-for-yaml-meta-data-1542","text":"Previously, MkDocs only supported MultiMarkdown style meta-data, which does not recognize different data types and is rather limited. MkDocs now also supports YAML style meta-data in Markdown documents. MkDocs relies on the the presence or absence of the deliminators ( --- or ... ) to determine whether YAML style meta-data or MultiMarkdown style meta-data is being used. Previously MkDocs would recognize MultiMarkdown style meta-data between the deliminators. Now, if the deliminators are detected, but the content between the deliminators is not valid YAML meta-data, MkDocs does not attempt to parse the content as MultiMarkdown style meta-data. Therefore, MultiMarkdown's style meta-data must not include the deliminators. See the MultiMarkdown style meta-data documentation for details. Prior to version 0.17, MkDocs returned all meta-data values as a list of strings (even a single line would return a list of one string). In version 0.17, that behavior was changed to return each value as a single string (multiple lines were joined), which some users found limiting (see #1471 ). That behavior continues for MultiMarkdown style meta-data in the current version. However, YAML style meta-data supports the full range of \"safe\" YAML data types. Therefore, it is recommended that any complex meta-data make use of the YAML style (see the YAML style meta-data documentation for details). In fact, a future version of MkDocs may deprecate support for MultiMarkdown style meta-data.","title":"Added support for YAML Meta-Data (#1542)"},{"location":"about/release-notes/#refactor-search-plugin","text":"The search plugin has been completely refactored to include support for the following features: Use a web worker in the browser with a fallback ( #1396 ). Optionally pre-build search index locally ( #859 & #1061 ). Upgrade to lunr.js 2.x ( #1319 ). Support search in languages other than English ( #826 ). Allow the user to define the word separators ( #867 ). Only run searches for queries of length > 2 ( #1127 ). Remove dependency on require.js ( #1218 ). Compress the search index ( #1128 ). Users can review the configuration options available and theme authors should review how search and themes interact.","title":"Refactor Search Plugin"},{"location":"about/release-notes/#theme_dir-configuration-option-fully-deprecated","text":"As of version 0.17, the custom_dir option replaced the deprecated theme_dir option. If users had set the theme_dir option, MkDocs version 0.17 copied the value to the theme.custom_dir option and a warning was issued. As of version 1.0, the value is no longer copied and an error is raised.","title":"theme_dir Configuration Option fully Deprecated"},{"location":"about/release-notes/#other-changes-and-additions-to-version-10","text":"Keyboard shortcuts changed to not conflict with commonly used accessibility shortcuts ( #1502 .) User friendly YAML parse errors ( #1543 ). Officially support Python 3.7. A missing theme configuration file now raises an error. Empty extra_css and extra_javascript settings no longer raise a warning. Add highlight.js configuration settings to built-in themes ( #1284 ). Close search modal when result is selected ( #1527 ). Add a level attribute to AnchorLinks ( #1272 ). Add MkDocs version check to gh-deploy script ( #640 ). Improve Markdown extension error messages. ( #782 ). Drop official support for Python 3.3 and set tornado>=5.0 ( #1427 ). Add support for GitLab edit links ( #1435 ). Link to GitHub issues from release notes ( #644 ). Expand {sha} and {version} in gh-deploy commit message ( #1410 ). Compress sitemap.xml ( #1130 ). Defer loading JS scripts ( #1380 ). Add a title attribute to the search input ( #1379 ). Update RespondJS to latest version ( #1398 ). Always load Google Analytics over HTTPS ( #1397 ). Improve scrolling frame rate ( #1394 ). Provide more version info. ( #1393 ). Refactor writing-your-docs.md ( #1392 ). Workaround Safari bug when zooming to < 100% ( #1389 ). Remove addition of clicky class to body and animations. ( #1387 ). Prevent search plugin from re-injecting extra_javascript files ( #1388 ). Refactor copy_media_files util function for more flexibility ( #1370 ). Remove PyPI Deployment Docs ( #1360 ). Update links to Python-Markdown library ( #1360 ). Document how to generate manpages for MkDocs commands ( #686 ).","title":"Other Changes and Additions to Version 1.0"},{"location":"about/release-notes/#version-0175-2018-07-06","text":"Bugfix: Fix Python 3.7 and PEP 479 incompatibility ( #1518 ).","title":"Version 0.17.5 (2018-07-06)"},{"location":"about/release-notes/#version-0174-2018-06-08","text":"Bugfix: Add multi-level nesting support to sitemap.xml ( #1482 ).","title":"Version 0.17.4 (2018-06-08)"},{"location":"about/release-notes/#version-0173-2018-03-07","text":"Bugfix: Set dependency tornado>=4.1,<5.0 due to changes in 5.0 ( #1428 ).","title":"Version 0.17.3 (2018-03-07)"},{"location":"about/release-notes/#version-0172-2017-11-15","text":"Bugfix: Correct extra_* config setting regressions ( #1335 & #1336 ).","title":"Version 0.17.2 (2017-11-15)"},{"location":"about/release-notes/#version-0171-2017-10-30","text":"Bugfix: Support repo_url with missing ending slash. ( #1321 ). Bugfix: Add length support to mkdocs.toc.TableOfContext ( #1325 ). Bugfix: Add some theme specific settings to the search plugin for third party themes ( #1316 ). Bugfix: Override site_url with dev_addr on local server ( #1317 ).","title":"Version 0.17.1 (2017-10-30)"},{"location":"about/release-notes/#version-0170-2017-10-19","text":"","title":"Version 0.17.0 (2017-10-19)"},{"location":"about/release-notes/#major-additions-to-version-0170","text":"","title":"Major Additions to Version 0.17.0"},{"location":"about/release-notes/#plugin-api-206","text":"A new Plugin API has been added to MkDocs which allows users to define their own custom behaviors. See the included documentation for a full explanation of the API. The previously built-in search functionality has been removed and wrapped in a plugin (named \"search\") with no changes in behavior. When MkDocs builds, the search index is now written to search/search_index.json instead of mkdocs/search_index.json . If no plugins setting is defined in the config, then the search plugin will be included by default. See the configuration documentation for information on overriding the default.","title":"Plugin API. (#206)"},{"location":"about/release-notes/#theme-customization-1164","text":"Support had been added to provide theme specific customizations. Theme authors can define default options as documented in Theme Configuration . A theme can now inherit from another theme, define various static templates to be rendered, and define arbitrary default variables to control behavior in the templates. The theme configuration is defined in a configuration file named mkdocs_theme.yml which should be placed at the root of your template files. A warning will be raised if no configuration file is found and an error will be raised in a future release. Users can override those defaults under the theme configuration option of their mkdocs.yml configuration file, which now accepts nested options. One such nested option is the custom_dir option, which replaces the now deprecated theme_dir option. If users had previously set the theme_dir option, a warning will be issued, with an error expected in a future release. If a configuration previously defined a theme_dir like this: theme: mkdocs theme_dir: custom Then the configuration should be adjusted as follows: theme: name: mkdocs custom_dir: custom See the theme configuration option documentation for details.","title":"Theme Customization. (#1164)"},{"location":"about/release-notes/#previously-deprecated-template-variables-removed-1168","text":"","title":"Previously deprecated Template variables removed. (#1168)"},{"location":"about/release-notes/#page-template","text":"The primary entry point for page templates has been changed from base.html to main.html . This allows base.html to continue to exist while allowing users to override main.html and extend base.html . For version 0.16, base.html continued to work if no main.html template existed, but it raised a deprecation warning. In version 1.0, a build will fail if no main.html template exists.","title":"Page Template"},{"location":"about/release-notes/#context-variables","text":"Page specific variable names in the template context have been refactored as defined in Custom Themes . The old variable names issued a warning in version 0.16, but have been removed in version 1.0. Any of the following old page variables should be updated to the new ones in user created and third-party templates: Old Variable Name New Variable Name current_page page page_title page.title content page.content toc page.toc meta page.meta canonical_url page.canonical_url previous_page page.previous_page next_page page.next_page Additionally, a number of global variables have been altered and/or removed and user created and third-party templates should be updated as outlined below: Old Variable Name New Variable Name or Expression current_page page include_nav nav|length>1 include_next_prev (page.next_page or page.previous_page) site_name config.site_name site_author config.site_author page_description config.site_description repo_url config.repo_url repo_name config.repo_name site_url config.site_url copyright config.copyright google_analytics config.google_analytics homepage_url nav.homepage.url favicon {{ base_url }}/img/favicon.ico","title":"Context Variables"},{"location":"about/release-notes/#auto-populated-extra_css-and-extra_javascript-fully-deprecated-986","text":"In previous versions of MkDocs, if the extra_css or extra_javascript config settings were empty, MkDocs would scan the docs_dir and auto-populate each setting with all of the CSS and JavaScript files found. On version 0.16 this behavior was deprecated and a warning was issued. In 0.17 any unlisted CSS and JavaScript files will not be included in the HTML templates, however, a warning will be issued. In other words, they will still be copied to the site-dir , but they will not have any effect on the theme if they are not explicitly listed. All CSS and JavaScript files in the docs_dir should be explicitly listed in the extra_css or extra_javascript config settings going forward.","title":"Auto-Populated extra_css and extra_javascript Fully Deprecated. (#986)"},{"location":"about/release-notes/#other-changes-and-additions-to-version-0170","text":"Add \"edit Link\" support to MkDocs theme ( #1129 ) Open files with utf-8-sig to account for BOM ( #1186 ) Symbolic links are now followed consistently ( #1134 ) Support for keyboard navigation shortcuts added to included themes ( #1095 ) Some refactoring and improvements to config_options ( #1296 ) Officially added support for Python 3.6 ( #1296 ) 404 Error page added to readthedocs theme ( #1296 )) Internal refactor of Markdown processing ( #713 ) Removed special error message for mkdocs-bootstrap and mkdocs-bootswatch themes ( #1168 ) The legacy pages config is no longer supported ( #1168 ) The deprecated json command has been removed ( #481 ) Support for Python 2.6 has been dropped ( #165 ) File permissions are no longer copied during build ( #1292 ) Support query and fragment strings in edit_uri ( #1224 & #1273 )","title":"Other Changes and Additions to Version 0.17.0"},{"location":"about/release-notes/#version-0163-2017-04-04","text":"Fix error raised by autoscrolling in the readthedocs theme ( #1177 ) Fix a few documentation typos ( #1181 & #1185 ) Fix a regression to livereload server introduced in 0.16.2 ( #1174 )","title":"Version 0.16.3 (2017-04-04)"},{"location":"about/release-notes/#version-0162-2017-03-13","text":"System root ( / ) is not a valid path for site_dir or docs_dir ( #1161 ) Refactor readthedocs theme navigation ( #1155 & #1156 ) Add support to dev server to serve custom error pages ( #1040 ) Ensure nav.homepage.url is not blank on error pages ( #1131 ) Increase livereload dependency to 2.5.1 ( #1106 )","title":"Version 0.16.2 (2017-03-13)"},{"location":"about/release-notes/#version-0161-2016-12-22","text":"Ensure scrollspy behavior does not affect nav bar ( #1094 ) Only \"load\" a theme when it is explicitly requested by the user ( #1105 )","title":"Version 0.16.1 (2016-12-22)"},{"location":"about/release-notes/#version-016-2016-11-04","text":"","title":"Version 0.16 (2016-11-04)"},{"location":"about/release-notes/#major-additions-to-version-0160","text":"","title":"Major Additions to Version 0.16.0"},{"location":"about/release-notes/#template-variables-refactored-874","text":"","title":"Template variables refactored. (#874)"},{"location":"about/release-notes/#page-context","text":"Page specific variable names in the template context have been refactored as defined in Custom Themes . The old variable names will issue a warning but continue to work for version 0.16, but may be removed in a future version. Any of the following old page variables should be updated to the new ones in user created and third-party templates: Old Variable Name New Variable Name current_page page page_title page.title content page.content toc page.toc meta page.meta canonical_url page.canonical_url previous_page page.previous_page next_page page.next_page","title":"Page Context"},{"location":"about/release-notes/#global-context","text":"Additionally, a number of global variables have been altered and/or deprecated and user created and third-party templates should be updated as outlined below: Previously, the global variable include_nav was altered programmatically based on the number of pages in the nav. The variable will issue a warning but continue to work for version 0.16, but may be removed in a future version. Use {% if nav|length>1 %} instead. Previously, the global variable include_next_prev was altered programmatically based on the number of pages in the nav. The variable will issue a warning but continue to work for version 0.16, but may be removed in a future version. Use {% if page.next_page or page.previous_page %} instead. Previously the global variable page_description was altered programmatically based on whether the current page was the homepage. Now it simply maps to config['site_description'] . Use {% if page.is_homepage %} in the template to conditionally change the description. The global variable homepage_url maps directly to nav.homepage.url and is being deprecated. The variable will issue a warning but continue to work for version 0.16, but may be removed in a future version. Use nav.homepage.url instead. The global variable favicon maps to the configuration setting site_favicon . Both the template variable and the configuration setting are being deprecated and will issue a warning but continue to work for version 0.16, and may be removed in a future version. Use {{ base_url }}/img/favicon.ico in your template instead. Users can simply save a copy of their custom favicon icon to img/favicon.ico in either their docs_dir or theme_dir . A number of variables map directly to similarly named variables in the config . Those variables are being deprecated and will issue a warning but continue to work for version 0.16, but may be removed in a future version. Use config.var_name instead, where var_name is the name of one of the configuration variables. Below is a summary of all of the changes made to the global context: Old Variable Name New Variable Name or Expression current_page page include_nav nav|length>1 include_next_prev (page.next_page or page.previous_page) site_name config.site_name site_author config.site_author page_description config.site_description repo_url config.repo_url repo_name config.repo_name site_url config.site_url copyright config.copyright google_analytics config.google_analytics homepage_url nav.homepage.url favicon {{ base_url }}/img/favicon.ico","title":"Global Context"},{"location":"about/release-notes/#increased-template-customization-607","text":"The built-in themes have been updated by having each of their many parts wrapped in template blocks which allow each individual block to be easily overridden using the theme_dir config setting. Without any new settings, you can use a different analytics service, replace the default search function, or alter the behavior of the navigation, among other things. See the relevant documentation for more details. To enable this feature, the primary entry point for page templates has been changed from base.html to main.html . This allows base.html to continue to exist while allowing users to override main.html and extend base.html . For version 0.16, base.html will continue to work if no main.html template exists, but it is deprecated and will raise a warning. In version 1.0, a build will fail if no main.html template exists. Any custom and third party templates should be updated accordingly. The easiest way for a third party theme to be updated would be to simply add a main.html file which only contains the following line: {% extends \"base.html\" %} That way, the theme contains the main.html entry point, and also supports overriding blocks in the same manner as the built-in themes. Third party themes are encouraged to wrap the various pieces of their templates in blocks in order to support such customization.","title":"Increased Template Customization. (#607)"},{"location":"about/release-notes/#auto-populated-extra_css-and-extra_javascript-deprecated-986","text":"In previous versions of MkDocs, if the extra_css or extra_javascript config settings were empty, MkDocs would scan the docs_dir and auto-populate each setting with all of the CSS and JavaScript files found. This behavior is deprecated and a warning will be issued. In the next release, the auto-populate feature will stop working and any unlisted CSS and JavaScript files will not be included in the HTML templates. In other words, they will still be copied to the site-dir , but they will not have any effect on the theme if they are not explicitly listed. All CSS and JavaScript files in the docs_dir should be explicitly listed in the extra_css or extra_javascript config settings going forward.","title":"Auto-Populated extra_css and extra_javascript Deprecated. (#986)"},{"location":"about/release-notes/#support-for-dirty-builds-990","text":"For large sites the build time required to create the pages can become problematic, thus a \"dirty\" build mode was created. This mode simply compares the modified time of the generated HTML and source markdown. If the markdown has changed since the HTML then the page is re-constructed. Otherwise, the page remains as is. This mode may be invoked in both the mkdocs serve and mkdocs build commands: mkdocs serve --dirtyreload mkdocs build --dirty It is important to note that this method for building the pages is for development of content only, since the navigation and other links do not get updated on other pages.","title":"Support for dirty builds. (#990)"},{"location":"about/release-notes/#stricter-directory-validation","text":"Previously, a warning was issued if the site_dir was a child directory of the docs_dir . This now raises an error. Additionally, an error is now raised if the docs_dir is set to the directory which contains your config file rather than a child directory. You will need to rearrange you directory structure to better conform with the documented layout .","title":"Stricter Directory Validation"},{"location":"about/release-notes/#other-changes-and-additions-to-version-0160","text":"Bugfix: Support gh-deploy command on Windows with Python 3 ( #722 ) Bugfix: Include .woff2 font files in Python package build ( #894 ) Various updates and improvements to Documentation Home Page/Tutorial ( #870 ) Bugfix: Support livereload for config file changes ( #735 ) Bugfix: Non-media template files are no longer copied with media files ( #807 ) Add a flag (-e/--theme-dir) to specify theme directory with the commands mkdocs build and mkdocs serve ( #832 ) Fixed issues with Unicode file names under Windows and Python 2. ( #833 ) Improved the styling of in-line code in the MkDocs theme. ( #718 ) Bugfix: convert variables to JSON when being passed to JavaScript ( #850 ) Updated the ReadTheDocs theme to match the upstream font sizes and colors more closely. ( #857 ) Fixes an issue with permalink markers showing when the mouse was far above them ( #843 ) Bugfix: Handle periods in directory name when automatically creating the pages config. ( #728 ) Update searching to Lunr 0.7, which comes with some performance enhancements for larger documents ( #859 ) Bugfix: Support SOURCE_DATE_EPOCH environment variable for \"reproducible\" builds ( #938 ) Follow links when copying media files ( #869 ). Change \"Edit on...\" links to point directly to the file in the source repository, rather than to the root of the repository ( #975 ), configurable via the new edit_uri setting. Bugfix: Don't override config value for strict mode if not specified on CLI ( #738 ). Add a --force flag to the gh-deploy command to force the push to the repository ( #973 ). Improve alignment for current selected menu item in readthedocs theme ( #888 ). http://user.github.io/repo => https://user.github.io/repo/ ( #1029 ). Improve installation instructions ( #1028 ). Account for wide tables and consistently wrap inline code spans ( #834 ). Bugfix: Use absolute URLs in nav & media links from error templates ( #77 ).","title":"Other Changes and Additions to Version 0.16.0"},{"location":"about/release-notes/#version-0153-2016-02-18","text":"Improve the error message the given theme can't be found. Fix an issue with relative symlinks ( #639 )","title":"Version 0.15.3 (2016-02-18)"},{"location":"about/release-notes/#version-0152-2016-02-08","text":"Fix an incorrect warning that states external themes will be removed from MkDocs .","title":"Version 0.15.2 (2016-02-08)"},{"location":"about/release-notes/#version-0151-2016-01-30","text":"Lower the minimum supported Click version to 3.3 for package maintainers. ( #763 )","title":"Version 0.15.1 (2016-01-30)"},{"location":"about/release-notes/#version-0150-2016-01-21","text":"","title":"Version 0.15.0 (2016-01-21)"},{"location":"about/release-notes/#major-additions-to-version-0150","text":"","title":"Major Additions to Version 0.15.0"},{"location":"about/release-notes/#add-support-for-installable-themes","text":"MkDocs now supports themes that are distributed via Python packages. With this addition, the Bootstrap and Bootswatch themes have been moved to external git repositories and python packages. See their individual documentation for more details about these specific themes. MkDocs Bootstrap MkDocs Bootswatch They will be included with MkDocs by default until a future release. After that they will be installable with pip: pip install mkdocs-bootstrap and pip install mkdocs-bootswatch See the documentation for Customizing Your Theme for more information about using and customizing themes and Custom themes for creating and distributing new themes","title":"Add support for installable themes"},{"location":"about/release-notes/#other-changes-and-additions-to-version-0150","text":"Fix issues when using absolute links to Markdown files. ( #628 ) Deprecate support of Python 2.6, pending removal in 1.0.0. ( #165 ) Add official support for Python version 3.5. Add support for site_description and site_author to the ReadTheDocs theme. ( #631 ) Update FontAwesome to 4.5.0. ( #789 ) Increase IE support with X-UA-Compatible. ( #785 ) Added support for Python's -m flag. ( #706 ) Bugfix: Ensure consistent ordering of auto-populated pages. ( #638 ) Bugfix: Scroll the tables of contents on the MkDocs theme if it is too long for the page. ( #204 ) Bugfix: Add all ancestors to the page attribute ancestors rather than just the initial one. ( #693 ) Bugfix: Include HTML in the build output again. ( #691 ) Bugfix: Provide filename to Read the Docs. ( #721 and RTD#1480 ) Bugfix: Silence Click's unicode_literals warning. ( #708 )","title":"Other Changes and Additions to Version 0.15.0"},{"location":"about/release-notes/#version-0140-2015-06-09","text":"Improve Unicode handling by ensuring that all config strings are loaded as Unicode. ( #592 ) Remove dependency on the six library. ( #583 ) Remove dependency on the ghp-import library. ( #547 ) Add --quiet and --verbose options to all sub-commands. ( #579 ) Add short options ( -a ) to most command line options. ( #579 ) Add copyright footer for readthedocs theme. ( #568 ) If the requested port in mkdocs serve is already in use, don't show the user a full stack trace. ( #596 ) Bugfix: Fix a JavaScript encoding problem when searching with spaces. ( #586 ) Bugfix: gh-deploy now works if the mkdocs.yml is not in the git repo root. ( #578 ) Bugfix: Handle (pass-through instead of dropping) HTML entities while parsing TOC. ( #612 ) Bugfix: Default extra_templates to an empty list, don't automatically discover them. ( #616 )","title":"Version 0.14.0 (2015-06-09)"},{"location":"about/release-notes/#version-0133-2015-06-02","text":"Bugfix: Reduce validation error to a warning if the site_dir is within the docs_dir as this shouldn't cause any problems with building but will inconvenience users building multiple times. ( #580 )","title":"Version 0.13.3 (2015-06-02)"},{"location":"about/release-notes/#version-0132-2015-05-30","text":"Bugfix: Ensure all errors and warnings are logged before exiting. ( #536 ) Bugfix: Fix compatibility issues with ReadTheDocs. ( #554 )","title":"Version 0.13.2 (2015-05-30)"},{"location":"about/release-notes/#version-0131-2015-05-27","text":"Bugfix: Fix a problem with minimal configurations which only contain a list of paths in the pages config. ( #562 )","title":"Version 0.13.1 (2015-05-27)"},{"location":"about/release-notes/#version-0130-2015-05-26","text":"","title":"Version 0.13.0 (2015-05-26)"},{"location":"about/release-notes/#deprecations-to-version-0130","text":"","title":"Deprecations to Version 0.13.0"},{"location":"about/release-notes/#deprecate-the-json-command","text":"In this release the mkdocs json command has been marked as deprecated and when used a deprecation warning will be shown. It will be removed in a future release of MkDocs, version 1.0 at the latest. The mkdocs json command provided a convenient way for users to output the documentation contents as JSON files but with the additions of search to MkDocs this functionality is duplicated. A new index with all the contents from a MkDocs build is created in the site_dir , so with the default value for the site_dir It can be found in site/mkdocs/search_index.json . This new file is created on every MkDocs build (with mkdocs build ) and no configuration is needed to enable it.","title":"Deprecate the JSON command"},{"location":"about/release-notes/#change-the-pages-configuration","text":"Provide a new way to define pages, and specifically nested pages , in the mkdocs.yml file and deprecate the existing approach, support will be removed with MkDocs 1.0.","title":"Change the pages configuration"},{"location":"about/release-notes/#warn-users-about-the-removal-of-builtin-themes","text":"All themes other than mkdocs and readthedocs will be moved into external packages in a future release of MkDocs. This will enable them to be more easily supported and updates outside MkDocs releases.","title":"Warn users about the removal of builtin themes"},{"location":"about/release-notes/#major-additions-to-version-0130","text":"","title":"Major Additions to Version 0.13.0"},{"location":"about/release-notes/#search","text":"Support for search has now been added to MkDocs. This is based on the JavaScript library lunr.js . It has been added to both the mkdocs and readthedocs themes. See the custom theme documentation on supporting search for adding it to your own themes.","title":"Search"},{"location":"about/release-notes/#new-command-line-interface","text":"The command line interface for MkDocs has been re-written with the Python library Click . This means that MkDocs now has an easier to use interface with better help output. This change is partially backwards incompatible as while undocumented it was possible to pass any configuration option to the different commands. Now only a small subset of the configuration options can be passed to the commands. To see in full commands and available arguments use mkdocs --help and mkdocs build --help to have them displayed.","title":"New Command Line Interface"},{"location":"about/release-notes/#support-extra-html-and-xml-files","text":"Like the extra_javascript and extra_css configuration options, a new option named extra_templates has been added. This will automatically be populated with any .html or .xml files in the project docs directory. Users can place static HTML and XML files and they will be copied over, or they can also use Jinja2 syntax and take advantage of the global variables . By default MkDocs will use this approach to create a sitemap for the documentation.","title":"Support Extra HTML and XML files"},{"location":"about/release-notes/#other-changes-and-additions-to-version-0130","text":"Add support for Markdown extension configuration options . ( #435 ) MkDocs now ships Python wheels . ( #486 ) Only include the build date and MkDocs version on the homepage. ( #490 ) Generate sitemaps for documentation builds. ( #436 ) Add a clearer way to define nested pages in the configuration. ( #482 ) Add an extra config option for passing arbitrary variables to the template. ( #510 ) Add --no-livereload to mkdocs serve for a simpler development server. ( #511 ) Add copyright display support to all themes ( #549 ) Add support for custom commit messages in a mkdocs gh-deploy ( #516 ) Bugfix: Fix linking to media within the same directory as a markdown file called index.md ( #535 ) Bugfix: Fix errors with Unicode filenames ( #542 ).","title":"Other Changes and Additions to Version 0.13.0"},{"location":"about/release-notes/#version-0122-2015-04-22","text":"Bugfix: Fix a regression where there would be an error if some child titles were missing but others were provided in the pages config. ( #464 )","title":"Version 0.12.2 (2015-04-22)"},{"location":"about/release-notes/#version-0121-2015-04-14","text":"Bugfix: Fixed a CSS bug in the table of contents on some browsers where the bottom item was not clickable.","title":"Version 0.12.1 (2015-04-14)"},{"location":"about/release-notes/#version-0120-2015-04-14","text":"Display the current MkDocs version in the CLI output. ( #258 ) Check for CNAME file when using gh-deploy. ( #285 ) Add the homepage back to the navigation on all themes. ( #271 ) Add a strict more for local link checking. ( #279 ) Add Google analytics support to all themes. ( #333 ) Add build date and MkDocs version to the ReadTheDocs and MkDocs theme outputs. ( #382 ) Standardize highlighting across all themes and add missing languages. ( #387 ) Add a verbose flag. (-v) to show more details about what the build. ( #147 ) Add the option to specify a remote branch when deploying to GitHub. This enables deploying to GitHub pages on personal and repo sites. ( #354 ) Add favicon support to the ReadTheDocs theme HTML. ( #422 ) Automatically refresh the browser when files are edited. ( #163 ) Bugfix: Never re-write URLs in code blocks. ( #240 ) Bugfix: Don't copy dotfiles when copying media from the docs_dir . ( #254 ) Bugfix: Fix the rendering of tables in the ReadTheDocs theme. ( #106 ) Bugfix: Add padding to the bottom of all bootstrap themes. ( #255 ) Bugfix: Fix issues with nested Markdown pages and the automatic pages configuration. ( #276 ) Bugfix: Fix a URL parsing error with GitHub enterprise. ( #284 ) Bugfix: Don't error if the mkdocs.yml is completely empty. ( #288 ) Bugfix: Fix a number of problems with relative URLs and Markdown files. ( #292 ) Bugfix: Don't stop the build if a page can't be found, continue with other pages. ( #150 ) Bugfix: Remove the site_name from the page title, this needs to be added manually. ( #299 ) Bugfix: Fix an issue with table of contents cutting off Markdown. ( #294 ) Bugfix: Fix hostname for BitBucket. ( #339 ) Bugfix: Ensure all links end with a slash. ( #344 ) Bugfix: Fix repo links in the readthedocs theme. ( #365 ) Bugfix: Include jQuery locally to avoid problems using MkDocs offline. ( #143 ) Bugfix: Don't allow the docs_dir to be in the site_dir or vice versa. ( #384 ) Bugfix: Remove inline CSS in the ReadTheDocs theme. ( #393 ) Bugfix: Fix problems with the child titles due to the order the pages config was processed. ( #395 ) Bugfix: Don't error during live reload when the theme doesn't exist. ( #373 ) Bugfix: Fix problems with the Meta extension when it may not exist. ( #398 ) Bugfix: Wrap long inline code otherwise they will run off the screen. ( #313 ) Bugfix: Remove HTML parsing regular expressions and parse with HTMLParser to fix problems with titles containing code. ( #367 ) Bugfix: Fix an issue with the scroll to anchor causing the title to be hidden under the navigation. ( #7 ) Bugfix: Add nicer CSS classes to the HTML tables in bootswatch themes. ( #295 ) Bugfix: Fix an error when passing in a specific config file with mkdocs serve . ( #341 ) Bugfix: Don't overwrite index.md files with the mkdocs new command. ( #412 ) Bugfix: Remove bold and italic from code in the ReadTheDocs theme. ( #411 ) Bugfix: Display images inline in the MkDocs theme. ( #415 ) Bugfix: Fix problems with no-highlight in the ReadTheDocs theme. ( #319 ) Bugfix: Don't delete hidden files when using mkdocs build --clean . ( #346 ) Bugfix: Don't block newer versions of Python-markdown on Python >= 2.7. ( #376 ) Bugfix: Fix encoding issues when opening files across platforms. ( #428 )","title":"Version 0.12.0 (2015-04-14)"},{"location":"about/release-notes/#version-0111-2014-11-20","text":"Bugfix: Fix a CSS wrapping issue with code highlighting in the ReadTheDocs theme. ( #233 )","title":"Version 0.11.1 (2014-11-20)"},{"location":"about/release-notes/#version-0110-2014-11-18","text":"Render 404.html files if they exist for the current theme. ( #194 ) Bugfix: Fix long nav bars, table rendering and code highlighting in MkDocs and ReadTheDocs themes. ( #225 ) Bugfix: Fix an issue with the google_analytics code. ( #219 ) Bugfix: Remove __pycache__ from the package tar. ( #196 ) Bugfix: Fix markdown links that go to an anchor on the current page. ( #197 ) Bugfix: Don't add prettyprint well CSS classes to all HTML, only add it in the MkDocs theme. ( #183 ) Bugfix: Display section titles in the ReadTheDocs theme. ( #175 ) Bugfix: Use the polling observer in watchdog so rebuilding works on filesystems without inotify. ( #184 ) Bugfix: Improve error output for common configuration related errors. ( #176 )","title":"Version 0.11.0 (2014-11-18)"},{"location":"about/release-notes/#version-0100-2014-10-29","text":"Added support for Python 3.3 and 3.4. ( #103 ) Configurable Python-Markdown extensions with the config setting markdown_extensions . ( #74 ) Added mkdocs json command to output your rendered documentation as json files. ( #128 ) Added --clean switch to build , json and gh-deploy commands to remove stale files from the output directory. ( #157 ) Support multiple theme directories to allow replacement of individual templates rather than copying the full theme. ( #129 ) Bugfix: Fix <ul> rendering in readthedocs theme. ( #171 ) Bugfix: Improve the readthedocs theme on smaller displays. ( #168 ) Bugfix: Relaxed required python package versions to avoid clashes. ( #104 ) Bugfix: Fix issue rendering the table of contents with some configs. ( #146 ) Bugfix: Fix path for embedded images in sub pages. ( #138 ) Bugfix: Fix use_directory_urls config behavior. ( #63 ) Bugfix: Support extra_javascript and extra_css in all themes. ( #90 ) Bugfix: Fix path-handling under Windows. ( #121 ) Bugfix: Fix the menu generation in the readthedocs theme. ( #110 ) Bugfix: Fix the mkdocs command creation under Windows. ( #122 ) Bugfix: Correctly handle external extra_javascript and extra_css . ( #92 ) Bugfix: Fixed favicon support. ( #87 )","title":"Version 0.10.0 (2014-10-29)"},{"location":"dev-guide/","text":"\u5f00\u53d1\u4eba\u5458\u6307\u5357 \u00b6 \u6269\u5c55 MkDocs MkDocs\u5f00\u53d1\u8005\u6307\u5357\u4e3a\u7b2c\u4e09\u65b9\u4e3b\u9898\u548c\u63d2\u4ef6\u7684\u5f00\u53d1\u8005\u63d0\u4f9b\u4e86\u6587\u6863\u3002 \u8bf7\u53c2\u9605 \u8d21\u732e\u6307\u5357 \u4e86\u89e3\u5982\u4f55\u8d21\u732eMkDocs\u672c\u8eab\u3002 \u60a8\u53ef\u4ee5\u76f4\u63a5\u8df3\u8f6c\u5230\u4e0b\u9762\u5217\u51fa\u7684\u9875\u9762\uff0c\u6216\u8005\u4f7f\u7528\u9875\u9762\u9876\u90e8\u5bfc\u822a\u680f\u4e2d\u7684 next \u548c previous \u6309\u94ae\u6309\u987a\u5e8f\u6d4f\u89c8\u6587\u6863\u3002 \u4e3b\u9898 \u7ffb\u8bd1 \u63d2\u4ef6 API \u53c2\u8003","title":"\u5f00\u53d1\u4eba\u5458\u6307\u5357"},{"location":"dev-guide/#_1","text":"\u6269\u5c55 MkDocs MkDocs\u5f00\u53d1\u8005\u6307\u5357\u4e3a\u7b2c\u4e09\u65b9\u4e3b\u9898\u548c\u63d2\u4ef6\u7684\u5f00\u53d1\u8005\u63d0\u4f9b\u4e86\u6587\u6863\u3002 \u8bf7\u53c2\u9605 \u8d21\u732e\u6307\u5357 \u4e86\u89e3\u5982\u4f55\u8d21\u732eMkDocs\u672c\u8eab\u3002 \u60a8\u53ef\u4ee5\u76f4\u63a5\u8df3\u8f6c\u5230\u4e0b\u9762\u5217\u51fa\u7684\u9875\u9762\uff0c\u6216\u8005\u4f7f\u7528\u9875\u9762\u9876\u90e8\u5bfc\u822a\u680f\u4e2d\u7684 next \u548c previous \u6309\u94ae\u6309\u987a\u5e8f\u6d4f\u89c8\u6587\u6863\u3002 \u4e3b\u9898 \u7ffb\u8bd1 \u63d2\u4ef6 API \u53c2\u8003","title":"\u5f00\u53d1\u4eba\u5458\u6307\u5357"},{"location":"dev-guide/api/","text":"API \u53c2\u8003 \u00b6 Note The main entry point to the API is through Events that are received by plugins. These events' descriptions link back to this page. mkdocs.structure.files.Files \u00b6 A collection of File objects. src_paths: Dict[str, File] property \u00b6 Soft-deprecated, prefer src_uris . src_uris: Dict[str, File] property \u00b6 A mapping containing every file, with the keys being their src_uri . __iter__() -> Iterator[File] \u00b6 Iterate over the files within. __len__() -> int \u00b6 The number of files within. __contains__(path: str) -> bool \u00b6 Whether the file with this src_uri is in the collection. get_file_from_path(path: str) -> Optional[File] \u00b6 Return a File instance with File.src_uri equal to path. append(file: File) -> None \u00b6 Append file to Files collection. remove(file: File) -> None \u00b6 Remove file from Files collection. copy_static_files(dirty: bool = False) -> None \u00b6 Copy static files from source to destination. documentation_pages() -> Sequence[File] \u00b6 Return iterable of all Markdown page file objects. static_pages() -> Sequence[File] \u00b6 Return iterable of all static page file objects. media_files() -> Sequence[File] \u00b6 Return iterable of all file objects which are not documentation or static pages. javascript_files() -> Sequence[File] \u00b6 Return iterable of all javascript file objects. css_files() -> Sequence[File] \u00b6 Return iterable of all CSS file objects. add_files_from_theme(env: jinja2.Environment, config: MkDocsConfig) -> None \u00b6 Retrieve static files from Jinja environment and add to collection. mkdocs.structure.files.File \u00b6 A MkDocs File object. Points to the source and destination locations of a file. The path argument must be a path that exists relative to src_dir . The src_dir and dest_dir must be absolute paths on the local file system. The use_directory_urls argument controls how destination paths are generated. If False , a Markdown file is mapped to an HTML file of the same name (the file extension is changed to .html ). If True, a Markdown file is mapped to an HTML index file ( index.html ) nested in a directory using the \"name\" of the file in path . The use_directory_urls argument has no effect on non-Markdown files. File objects have the following properties, which are Unicode strings: src_uri: str class-attribute \u00b6 The pure path (always '/'-separated) of the source file relative to the source directory. dest_path: str writable property \u00b6 Same as dest_uri (and synchronized with it) but will use backslashes on Windows. Discouraged. url_relative_to(other: File) -> str \u00b6 Return url for file relative to other file. copy_file(dirty: bool = False) -> None \u00b6 Copy source file to destination, ensuring parent directories exist. is_documentation_page() -> bool \u00b6 Return True if file is a Markdown page. is_static_page() -> bool \u00b6 Return True if file is a static page (HTML, XML, JSON). is_media_file() -> bool \u00b6 Return True if file is not a documentation or static page. is_javascript() -> bool \u00b6 Return True if file is a JavaScript file. is_css() -> bool \u00b6 Return True if file is a CSS file. mkdocs.config.base.Config \u00b6 Bases: UserDict Base class for MkDocs configuration, plugin configuration (and sub-configuration) objects. It should be subclassed and have ConfigOption s defined as attributes. For examples, see mkdocs/contrib/search/ init .py and mkdocs/config/defaults.py. Behavior as it was prior to MkDocs 1.4 is now handled by LegacyConfig. __new__(*args, **kwargs) -> Config \u00b6 Compatibility: allow referring to LegacyConfig(...) constructor as Config(...) . set_defaults() -> None \u00b6 Set the base config by going through each validator and getting the default if it has one. load_dict(patch: Optional[dict]) -> None \u00b6 Load config options from a dictionary. load_file(config_file: IO) -> None \u00b6 Load config options from the open file descriptor of a YAML file. mkdocs.livereload.LiveReloadServer \u00b6 Bases: socketserver . ThreadingMixIn , wsgiref . simple_server . WSGIServer watch(path: str, func: Optional[Callable[[], None]] = None, recursive: bool = True) -> None \u00b6 Add the 'path' to watched paths, call the function and reload when any file changes under it. unwatch(path: str) -> None \u00b6 Stop watching file changes for path. Raises if there was no corresponding watch call.","title":"API \u53c2\u8003"},{"location":"dev-guide/api/#api","text":"Note The main entry point to the API is through Events that are received by plugins. These events' descriptions link back to this page.","title":"API \u53c2\u8003"},{"location":"dev-guide/api/#mkdocs.structure.files.Files","text":"A collection of File objects.","title":"Files"},{"location":"dev-guide/api/#mkdocs.structure.files.Files.src_paths","text":"Soft-deprecated, prefer src_uris .","title":"src_paths"},{"location":"dev-guide/api/#mkdocs.structure.files.Files.src_uris","text":"A mapping containing every file, with the keys being their src_uri .","title":"src_uris"},{"location":"dev-guide/api/#mkdocs.structure.files.Files.__iter__","text":"Iterate over the files within.","title":"__iter__()"},{"location":"dev-guide/api/#mkdocs.structure.files.Files.__len__","text":"The number of files within.","title":"__len__()"},{"location":"dev-guide/api/#mkdocs.structure.files.Files.__contains__","text":"Whether the file with this src_uri is in the collection.","title":"__contains__()"},{"location":"dev-guide/api/#mkdocs.structure.files.Files.get_file_from_path","text":"Return a File instance with File.src_uri equal to path.","title":"get_file_from_path()"},{"location":"dev-guide/api/#mkdocs.structure.files.Files.append","text":"Append file to Files collection.","title":"append()"},{"location":"dev-guide/api/#mkdocs.structure.files.Files.remove","text":"Remove file from Files collection.","title":"remove()"},{"location":"dev-guide/api/#mkdocs.structure.files.Files.copy_static_files","text":"Copy static files from source to destination.","title":"copy_static_files()"},{"location":"dev-guide/api/#mkdocs.structure.files.Files.documentation_pages","text":"Return iterable of all Markdown page file objects.","title":"documentation_pages()"},{"location":"dev-guide/api/#mkdocs.structure.files.Files.static_pages","text":"Return iterable of all static page file objects.","title":"static_pages()"},{"location":"dev-guide/api/#mkdocs.structure.files.Files.media_files","text":"Return iterable of all file objects which are not documentation or static pages.","title":"media_files()"},{"location":"dev-guide/api/#mkdocs.structure.files.Files.javascript_files","text":"Return iterable of all javascript file objects.","title":"javascript_files()"},{"location":"dev-guide/api/#mkdocs.structure.files.Files.css_files","text":"Return iterable of all CSS file objects.","title":"css_files()"},{"location":"dev-guide/api/#mkdocs.structure.files.Files.add_files_from_theme","text":"Retrieve static files from Jinja environment and add to collection.","title":"add_files_from_theme()"},{"location":"dev-guide/api/#mkdocs.structure.files.File","text":"A MkDocs File object. Points to the source and destination locations of a file. The path argument must be a path that exists relative to src_dir . The src_dir and dest_dir must be absolute paths on the local file system. The use_directory_urls argument controls how destination paths are generated. If False , a Markdown file is mapped to an HTML file of the same name (the file extension is changed to .html ). If True, a Markdown file is mapped to an HTML index file ( index.html ) nested in a directory using the \"name\" of the file in path . The use_directory_urls argument has no effect on non-Markdown files. File objects have the following properties, which are Unicode strings:","title":"File"},{"location":"dev-guide/api/#mkdocs.structure.files.File.src_uri","text":"The pure path (always '/'-separated) of the source file relative to the source directory.","title":"src_uri"},{"location":"dev-guide/api/#mkdocs.structure.files.File.dest_path","text":"Same as dest_uri (and synchronized with it) but will use backslashes on Windows. Discouraged.","title":"dest_path"},{"location":"dev-guide/api/#mkdocs.structure.files.File.url_relative_to","text":"Return url for file relative to other file.","title":"url_relative_to()"},{"location":"dev-guide/api/#mkdocs.structure.files.File.copy_file","text":"Copy source file to destination, ensuring parent directories exist.","title":"copy_file()"},{"location":"dev-guide/api/#mkdocs.structure.files.File.is_documentation_page","text":"Return True if file is a Markdown page.","title":"is_documentation_page()"},{"location":"dev-guide/api/#mkdocs.structure.files.File.is_static_page","text":"Return True if file is a static page (HTML, XML, JSON).","title":"is_static_page()"},{"location":"dev-guide/api/#mkdocs.structure.files.File.is_media_file","text":"Return True if file is not a documentation or static page.","title":"is_media_file()"},{"location":"dev-guide/api/#mkdocs.structure.files.File.is_javascript","text":"Return True if file is a JavaScript file.","title":"is_javascript()"},{"location":"dev-guide/api/#mkdocs.structure.files.File.is_css","text":"Return True if file is a CSS file.","title":"is_css()"},{"location":"dev-guide/api/#mkdocs.config.base.Config","text":"Bases: UserDict Base class for MkDocs configuration, plugin configuration (and sub-configuration) objects. It should be subclassed and have ConfigOption s defined as attributes. For examples, see mkdocs/contrib/search/ init .py and mkdocs/config/defaults.py. Behavior as it was prior to MkDocs 1.4 is now handled by LegacyConfig.","title":"Config"},{"location":"dev-guide/api/#mkdocs.config.base.Config.__new__","text":"Compatibility: allow referring to LegacyConfig(...) constructor as Config(...) .","title":"__new__()"},{"location":"dev-guide/api/#mkdocs.config.base.Config.set_defaults","text":"Set the base config by going through each validator and getting the default if it has one.","title":"set_defaults()"},{"location":"dev-guide/api/#mkdocs.config.base.Config.load_dict","text":"Load config options from a dictionary.","title":"load_dict()"},{"location":"dev-guide/api/#mkdocs.config.base.Config.load_file","text":"Load config options from the open file descriptor of a YAML file.","title":"load_file()"},{"location":"dev-guide/api/#mkdocs.livereload.LiveReloadServer","text":"Bases: socketserver . ThreadingMixIn , wsgiref . simple_server . WSGIServer","title":"LiveReloadServer"},{"location":"dev-guide/api/#mkdocs.livereload.LiveReloadServer.watch","text":"Add the 'path' to watched paths, call the function and reload when any file changes under it.","title":"watch()"},{"location":"dev-guide/api/#mkdocs.livereload.LiveReloadServer.unwatch","text":"Stop watching file changes for path. Raises if there was no corresponding watch call.","title":"unwatch()"},{"location":"dev-guide/plugins/","text":"MkDocs \u63d2\u4ef6 \u00b6 \u4e00\u4e2a\u5b89\u88c5\uff0c\u4f7f\u7528\u548c\u521b\u5efaMkDocs\u63d2\u4ef6\u7684\u6307\u5357 \u5b89\u88c5\u63d2\u4ef6 \u00b6 \u5728\u4f7f\u7528\u63d2\u4ef6\u4e4b\u524d\uff0c\u5fc5\u987b\u5728\u7cfb\u7edf\u4e0a\u5b89\u88c5\u8be5\u63d2\u4ef6\u3002 \u5982\u679c\u4f60\u4f7f\u7528\u7684\u662fMkDocs\u81ea\u5e26\u7684\u63d2\u4ef6\uff0c\u90a3\u4e48\u5b83\u5728\u4f60\u5b89\u88c5MkDocs\u7684\u65f6\u5019\u5c31\u5df2\u7ecf\u5b89\u88c5\u4e86\u3002 \u4f46\u662f\uff0c\u8981\u5b89\u88c5\u7b2c\u4e09\u65b9\u63d2\u4ef6\uff0c\u60a8\u9700\u8981\u786e\u5b9a\u9002\u5f53\u7684\u5305\u540d\u5e76\u4f7f\u7528 pip \u5b89\u88c5\u5b83: pip install mkdocs-foo-plugin \u4e00\u65e6\u63d2\u4ef6\u6210\u529f\u5b89\u88c5\uff0c\u5b83\u5c31\u53ef\u4ee5\u4f7f\u7528\u4e86\u3002 \u5b83\u53ea\u9700\u8981\u5728\u914d\u7f6e\u6587\u4ef6\u4e2d \u542f\u7528 \u3002 [MkDocs \u63d2\u4ef6] wiki\u9875\u9762\u6709\u4e00\u4e2a\u4e0d\u65ad\u589e\u957f\u7684\u63d2\u4ef6\u5217\u8868\uff0c\u60a8\u53ef\u4ee5\u5b89\u88c5\u548c\u4f7f\u7528\u3002 \u4f7f\u7528\u63d2\u4ef6 \u00b6 \u63d2\u4ef6 \u914d\u7f6e\u9009\u9879\u5e94\u8be5\u5305\u542b\u5728\u6784\u5efa\u7f51\u7ad9\u65f6\u4f7f\u7528\u7684\u63d2\u4ef6\u5217\u8868\u3002 \u6bcf\u4e2a\u201c\u63d2\u4ef6\u201d\u5fc5\u987b\u662f\u5206\u914d\u7ed9\u8be5\u63d2\u4ef6\u7684\u5b57\u7b26\u4e32\u540d\u79f0(\u8bf7\u53c2\u9605\u7ed9\u5b9a\u63d2\u4ef6\u7684\u6587\u6863\u4ee5\u786e\u5b9a\u5176\u201c\u540d\u79f0\u201d)\u3002 \u8fd9\u91cc\u5217\u51fa\u7684\u63d2\u4ef6\u5fc5\u987b\u5df2\u7ecf \u5b89\u88c5 \u3002 plugins: - search \u4e00\u4e9b\u63d2\u4ef6\u53ef\u80fd\u63d0\u4f9b\u81ea\u5df1\u7684\u914d\u7f6e\u9009\u9879\u3002 \u5982\u679c\u4f60\u60f3\u8bbe\u7f6e\u4efb\u4f55\u914d\u7f6e\u9009\u9879\uff0c\u90a3\u4e48\u4f60\u53ef\u4ee5\u5d4c\u5957\u4e00\u4e2a\u7ed9\u5b9a\u63d2\u4ef6\u652f\u6301\u7684\u4efb\u4f55\u9009\u9879\u7684\u952e/\u503c\u6620\u5c04( option_name: option value )\u3002 \u6ce8\u610f\uff0c\u63d2\u4ef6\u540d\u540e\u9762\u5fc5\u987b\u8ddf\u7740\u5192\u53f7( : )\uff0c\u7136\u540e\u5728\u65b0\u884c\u4e2d\uff0c\u9009\u9879\u540d\u548c\u503c\u5fc5\u987b\u7f29\u8fdb\u5e76\u7528\u5192\u53f7\u5206\u9694\u3002 \u5982\u679c\u4f60\u60f3\u4e3a\u4e00\u4e2a\u63d2\u4ef6\u5b9a\u4e49\u591a\u4e2a\u9009\u9879\uff0c\u6bcf\u4e2a\u9009\u9879\u5fc5\u987b\u5728\u5355\u72ec\u7684\u884c\u4e2d\u5b9a\u4e49\u3002 plugins: - search: lang: en foo: bar \u6709\u5173\u7ed9\u5b9a\u63d2\u4ef6\u53ef\u7528\u7684\u914d\u7f6e\u9009\u9879\u7684\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605\u8be5\u63d2\u4ef6\u7684\u6587\u6863\u3002 \u6709\u5173\u9ed8\u8ba4\u63d2\u4ef6\u7684\u5217\u8868\u4ee5\u53ca\u5982\u4f55\u8986\u76d6\u5b83\u4eec\uff0c\u8bf7\u53c2\u9605 \u914d\u7f6e \u6587\u6863\u3002 \u5f00\u53d1\u63d2\u4ef6 \u00b6 \u50cfMkDocs\u4e00\u6837\uff0c\u63d2\u4ef6\u5fc5\u987b\u7528Python\u7f16\u5199\u3002\u5c3d\u7ba1\u53ef\u4ee5\u5728\u540c\u4e00\u4e2a\u6a21\u5757\u4e2d\u5b9a\u4e49\u591a\u4e2a\u63d2\u4ef6\uff0c\u4f46\u901a\u5e38\u671f\u671b\u6bcf\u4e2a\u63d2\u4ef6\u90fd\u4f5c\u4e3a\u5355\u72ec\u7684Python\u6a21\u5757\u53d1\u5e03\u3002 MkDocs Plugin\u81f3\u5c11\u5fc5\u987b\u5305\u542b\u4e00\u4e2a BasePlugin \u5b50\u7c7b\u548c\u4e00\u4e2a\u6307\u5411\u5b83\u7684[\u5165\u53e3\u70b9]\u3002 BasePlugin \u00b6 mkdocs.plugins.BasePlugin \u7684\u5b50\u7c7b\u5e94\u8be5\u5b9a\u4e49\u63d2\u4ef6\u7684\u884c\u4e3a\u3002 \u8be5\u7c7b\u901a\u5e38\u7531\u6784\u5efa\u8fc7\u7a0b\u4e2d\u5bf9\u7279\u5b9a\u4e8b\u4ef6\u6267\u884c\u7684\u64cd\u4f5c\u4ee5\u53ca\u63d2\u4ef6\u7684\u914d\u7f6e\u65b9\u6848\u7ec4\u6210\u3002 \u6240\u6709 BasePlugin \u5b50\u7c7b\u5305\u542b\u4ee5\u4e0b\u5c5e\u6027: config_scheme \u00b6 A tuple of configuration validation instances. Each item must consist of a two item tuple in which the first item is the string name of the configuration option and the second item is an instance of mkdocs.config.config_options.BaseConfigOption or any of its subclasses. For example, the following config_scheme defines three configuration options: foo , which accepts a string; bar , which accepts an integer; and baz , which accepts a boolean value. class MyPlugin(mkdocs.plugins.BasePlugin): config_scheme = ( ('foo', mkdocs.config.config_options.Type(str, default='a default value')), ('bar', mkdocs.config.config_options.Type(int, default=0)), ('baz', mkdocs.config.config_options.Type(bool, default=True)) ) New in version 1.4. Subclassing Config \u6307\u5b9a\u914d\u7f6e\u6a21\u5f0f \u4e3a\u4e86\u83b7\u5f97\u7c7b\u578b\u5b89\u5168\u7684\u597d\u5904\uff0c\u5982\u679c\u4f60\u53ea\u9488\u5bf9MkDocs 1.4+\uff0c\u8bf7\u5c06\u914d\u7f6e\u6a21\u5f0f\u5b9a\u4e49\u4e3a\u4e00\u4e2a\u7c7b: class MyPluginConfig(mkdocs.config.base.Config): foo = mkdocs.config.config_options.Type(str, default='a default value') bar = mkdocs.config.config_options.Type(int, default=0) baz = mkdocs.config.config_options.Type(bool, default=True) class MyPlugin(mkdocs.plugins.BasePlugin[MyPluginConfig]): ... Examples of config definitions \u00b6 Example from mkdocs.config import base, config_options as c class _ValidationOptions(base.Config): enable = c.Type(bool, default=True) verbose = c.Type(bool, default=False) skip_checks = c.ListOfItems(c.Choice(('foo', 'bar', 'baz')), default=[]) class MyPluginConfig(base.Config): definition_file = c.File(exists=True) # required checksum_file = c.Optional(c.File(exists=True)) # can be None but must exist if specified validation = c.SubConfig(_ValidationOptions) From the user's point of view SubConfig is similar to Type(dict) , it's just that it also retains full ability for validation: you define all valid keys and what each value should adhere to. And ListOfItems is similar to Type(list) , but again, we define the constraint that each value must adhere to. This accepts a config as follows: my_plugin: definition_file: configs/test.ini # relative to mkdocs.yml validation: enable: !ENV [CI, false] verbose: true skip_checks: - foo - baz Example import numbers from mkdocs.config import base, config_options as c class _Rectangle(base.Config): width = c.Type(numbers.Real) # required height = c.Type(numbers.Real) # required class MyPluginConfig(base.Config): add_rectangles = c.ListOfItems(c.SubConfig(_Rectangle)) # required In this example we define a list of complex items, and that's achieved by passing a concrete SubConfig to ListOfItems . This accepts a config as follows: my_plugin: add_rectangles: - width: 5 height: 7 - width: 12 height: 2 When the user's configuration is loaded, the above scheme will be used to validate the configuration and fill in any defaults for settings not provided by the user. The validation classes may be any of the classes provided in mkdocs.config.config_options or a third party subclass defined in the plugin. Any settings provided by the user which fail validation or are not defined in the config_scheme will raise a mkdocs.config.base.ValidationError . config \u00b6 A dictionary of configuration options for the plugin, which is populated by the load_config method after configuration validation has completed. Use this attribute to access options provided by the user. def on_pre_build(self, config, **kwargs): if self.config['baz']: # implement \"baz\" functionality here... New in version 1.4 Safe attribute-based access \u00b6 To get type safety benefits, if you're targeting only MkDocs 1.4+, access options as attributes instead: def on_pre_build(self, config, **kwargs): if self.config.baz: print(self.config.bar ** 2) # OK, `int ** 2` is valid. All BasePlugin subclasses contain the following method(s): load_config(options) \u00b6 Loads configuration from a dictionary of options. Returns a tuple of (errors, warnings) . This method is called by MkDocs during configuration validation and should not need to be called by the plugin. on_<event_name>() \u00b6 Optional methods which define the behavior for specific events . The plugin should define its behavior within these methods. Replace <event_name> with the actual name of the event. For example, the pre_build event would be defined in the on_pre_build method. Most events accept one positional argument and various keyword arguments. It is generally expected that the positional argument would be modified (or replaced) by the plugin and returned. If nothing is returned (the method returns None ), then the original, unmodified object is used. The keyword arguments are simply provided to give context and/or supply data which may be used to determine how the positional argument should be modified. It is good practice to accept keyword arguments as **kwargs . In the event that additional keywords are provided to an event in a future version of MkDocs, there will be no need to alter your plugin. For example, the following event would add an additional static_template to the theme config: class MyPlugin(BasePlugin): def on_config(self, config, **kwargs): config['theme'].static_templates.add('my_template.html') return config New in version 1.4 To get type safety benefits, if you're targeting only MkDocs 1.4+, access config options as attributes instead: def on_config(self, config: MkDocsConfig): config.theme.static_templates.add('my_template.html') return config Events \u00b6 There are three kinds of events: Global Events , Page Events and Template Events . See a diagram with relations between all the plugin events The events themselves are shown in yellow, with their parameters. Arrows show the flow of arguments and outputs of each event. Sometimes they're omitted. The events are chronologically ordered from top to bottom. Dotted lines appear at splits from global events to per-page events. Click the events' titles to jump to their description. One-time Events \u00b6 One-time events run once per mkdocs invocation. The only case where these tangibly differ from global events is for mkdocs serve : global events, unlike these, will run multiple times -- once per build . on_startup \u00b6 The startup event runs once at the very beginning of an mkdocs invocation. New in MkDocs 1.4. The presence of an on_startup method (even if empty) migrates the plugin to the new system where the plugin object is kept across builds within one mkdocs serve . Note that for initializing variables, the __init__ method is still preferred. For initializing per-build variables (and whenever in doubt), use the on_config event. Parameters: command ( Literal [ build , gh-deploy , serve ] ) \u2013 the command that MkDocs was invoked with, e.g. \"serve\" for mkdocs serve . dirty ( bool ) \u2013 whether --dirtyreload or --dirty flags were passed. on_shutdown \u00b6 The shutdown event runs once at the very end of an mkdocs invocation, before exiting. This event is relevant only for support of mkdocs serve , otherwise within a single build it's undistinguishable from on_post_build . New in MkDocs 1.4. The presence of an on_shutdown method (even if empty) migrates the plugin to the new system where the plugin object is kept across builds within one mkdocs serve . Note the on_post_build method is still preferred for cleanups, when possible, as it has a much higher chance of actually triggering. on_shutdown is \"best effort\" because it relies on detecting a graceful shutdown of MkDocs. on_serve \u00b6 The serve event is only called when the serve command is used during development. It runs only once, after the first build finishes. It is passed the Server instance which can be modified before it is activated. For example, additional files or directories could be added to the list of \"watched\" files for auto-reloading. Parameters: server ( LiveReloadServer ) \u2013 livereload.Server instance config ( MkDocsConfig ) \u2013 global configuration object builder ( Callable ) \u2013 a callable which gets passed to each call to server.watch Returns: Optional [ LiveReloadServer ] \u2013 livereload.Server instance Global Events \u00b6 Global events are called once per build at either the beginning or end of the build process. Any changes made in these events will have a global effect on the entire site. on_config \u00b6 The config event is the first event called on build and is run immediately after the user configuration is loaded and validated. Any alterations to the config should be made here. Parameters: config ( MkDocsConfig ) \u2013 global configuration object Returns: Optional [ Config ] \u2013 global configuration object on_pre_build \u00b6 The pre_build event does not alter any variables. Use this event to call pre-build scripts. Parameters: config ( MkDocsConfig ) \u2013 global configuration object on_files \u00b6 The files event is called after the files collection is populated from the docs_dir . Use this event to add, remove, or alter files in the collection. Note that Page objects have not yet been associated with the file objects in the collection. Use Page Events to manipulate page specific data. Parameters: files ( Files ) \u2013 global files collection config ( MkDocsConfig ) \u2013 global configuration object Returns: Optional [ Files ] \u2013 global files collection on_nav \u00b6 The nav event is called after the site navigation is created and can be used to alter the site navigation. Parameters: nav ( Navigation ) \u2013 global navigation object config ( MkDocsConfig ) \u2013 global configuration object files ( Files ) \u2013 global files collection Returns: Optional [ Navigation ] \u2013 global navigation object on_env \u00b6 The env event is called after the Jinja template environment is created and can be used to alter the Jinja environment . Parameters: env ( jinja2 . Environment ) \u2013 global Jinja environment config ( MkDocsConfig ) \u2013 global configuration object files ( Files ) \u2013 global files collection Returns: Optional [ jinja2 . Environment ] \u2013 global Jinja Environment on_post_build \u00b6 The post_build event does not alter any variables. Use this event to call post-build scripts. Parameters: config ( MkDocsConfig ) \u2013 global configuration object on_build_error \u00b6 The build_error event is called after an exception of any kind is caught by MkDocs during the build process. Use this event to clean things up before MkDocs terminates. Note that any other events which were scheduled to run after the error will have been skipped. See Handling Errors for more details. Parameters: error ( Exception ) \u2013 exception raised Template Events \u00b6 Template events are called once for each non-page template. Each template event will be called for each template defined in the extra_templates config setting as well as any static_templates defined in the theme. All template events are called after the env event and before any page events . on_pre_template \u00b6 The pre_template event is called immediately after the subject template is loaded and can be used to alter the template. Parameters: template ( jinja2 . Template ) \u2013 a Jinja2 Template object template_name ( str ) \u2013 string filename of template config ( MkDocsConfig ) \u2013 global configuration object Returns: Optional [ jinja2 . Template ] \u2013 a Jinja2 Template object on_template_context \u00b6 The template_context event is called immediately after the context is created for the subject template and can be used to alter the context for that specific template only. Parameters: context ( Dict [ str , Any ] ) \u2013 dict of template context variables template_name ( str ) \u2013 string filename of template config ( MkDocsConfig ) \u2013 global configuration object Returns: Optional [ Dict [ str , Any ]] \u2013 dict of template context variables on_post_template \u00b6 The post_template event is called after the template is rendered, but before it is written to disc and can be used to alter the output of the template. If an empty string is returned, the template is skipped and nothing is is written to disc. Parameters: output_content ( str ) \u2013 output of rendered template as string template_name ( str ) \u2013 string filename of template config ( MkDocsConfig ) \u2013 global configuration object Returns: Optional [ str ] \u2013 output of rendered template as string Page Events \u00b6 Page events are called once for each Markdown page included in the site. All page events are called after the post_template event and before the post_build event. on_pre_page \u00b6 The pre_page event is called before any actions are taken on the subject page and can be used to alter the Page instance. Parameters: page ( Page ) \u2013 mkdocs.nav.Page instance config ( MkDocsConfig ) \u2013 global configuration object files ( Files ) \u2013 global files collection Returns: Optional [ Page ] \u2013 mkdocs.nav.Page instance on_page_read_source \u00b6 The on_page_read_source event can replace the default mechanism to read the contents of a page's source from the filesystem. Parameters: page ( Page ) \u2013 mkdocs.nav.Page instance config ( MkDocsConfig ) \u2013 global configuration object Returns: Optional [ str ] \u2013 The raw source for a page as unicode string. If None is returned, the default loading from a file will be performed. on_page_markdown \u00b6 The page_markdown event is called after the page's markdown is loaded from file and can be used to alter the Markdown source text. The meta- data has been stripped off and is available as page.meta at this point. Parameters: markdown ( str ) \u2013 Markdown source text of page as string page ( Page ) \u2013 mkdocs.nav.Page instance config ( MkDocsConfig ) \u2013 global configuration object files ( Files ) \u2013 global files collection Returns: Optional [ str ] \u2013 Markdown source text of page as string on_page_content \u00b6 The page_content event is called after the Markdown text is rendered to HTML (but before being passed to a template) and can be used to alter the HTML body of the page. Parameters: html ( str ) \u2013 HTML rendered from Markdown source as string page ( Page ) \u2013 mkdocs.nav.Page instance config ( MkDocsConfig ) \u2013 global configuration object files ( Files ) \u2013 global files collection Returns: Optional [ str ] \u2013 HTML rendered from Markdown source as string on_page_context \u00b6 The page_context event is called after the context for a page is created and can be used to alter the context for that specific page only. Parameters: context ( Dict [ str , Any ] ) \u2013 dict of template context variables page ( Page ) \u2013 mkdocs.nav.Page instance config ( MkDocsConfig ) \u2013 global configuration object nav ( Navigation ) \u2013 global navigation object Returns: Optional [ Dict [ str , Any ]] \u2013 dict of template context variables on_post_page \u00b6 The post_page event is called after the template is rendered, but before it is written to disc and can be used to alter the output of the page. If an empty string is returned, the page is skipped and nothing is written to disc. Parameters: output ( str ) \u2013 output of rendered template as string page ( Page ) \u2013 mkdocs.nav.Page instance config ( MkDocsConfig ) \u2013 global configuration object Returns: Optional [ str ] \u2013 output of rendered template as string Event Priorities \u00b6 For each event type, corresponding methods of plugins are called in the order that the plugins appear in the plugins config . Since MkDocs 1.4, plugins can choose to set a priority value for their events. Events with higher priority are called first. Events without a chosen priority get a default of 0. Events that have the same priority are ordered as they appear in the config. mkdocs.plugins.event_priority(priority: float) -> Callable[[T], T] \u00b6 A decorator to set an event priority for an event handler method. Recommended priority values: 100 \"first\", 50 \"early\", 0 \"default\", -50 \"late\", -100 \"last\". As different plugins discover more precise relations to each other, the values should be further tweaked. @plugins.event_priority(-100) # Wishing to run this after all other plugins' `on_files` events. def on_files(self, files, config, **kwargs): ... New in MkDocs 1.4. Recommended shim for backwards compatibility: try: from mkdocs.plugins import event_priority except ImportError: event_priority = lambda priority: lambda f: f # No-op fallback Handling Errors \u00b6 MkDocs defines four error types: mkdocs.exceptions.MkDocsException \u00b6 Bases: ClickException The base class which all MkDocs exceptions inherit from. This should not be raised directly. One of the subclasses should be raised instead. mkdocs.exceptions.ConfigurationError \u00b6 Bases: MkDocsException This error is raised by configuration validation when a validation error is encountered. This error should be raised by any configuration options defined in a plugin's config_scheme . mkdocs.exceptions.BuildError \u00b6 Bases: MkDocsException This error may be raised by MkDocs during the build process. Plugins should not raise this error. mkdocs.exceptions.PluginError \u00b6 Bases: BuildError A subclass of [ mkdocs.exceptions.BuildError ][] which can be raised by plugin events. Unexpected and uncaught exceptions will interrupt the build process and produce typical Python tracebacks, which are useful for debugging your code. However, users generally find tracebacks overwhelming and often miss the helpful error message. Therefore, MkDocs will catch any of the errors listed above, retrieve the error message, and exit immediately with only the helpful message displayed to the user. Therefore, you might want to catch any exceptions within your plugin and raise a PluginError , passing in your own custom-crafted message, so that the build process is aborted with a helpful message. The on_build_error event will be triggered for any exception. For example: from mkdocs.exceptions import PluginError from mkdocs.plugins import BasePlugin class MyPlugin(BasePlugin): def on_post_page(self, output, page, config, **kwargs): try: # some code that could throw a KeyError ... except KeyError as error: raise PluginError(str(error)) def on_build_error(self, error, **kwargs): # some code to clean things up ... Entry Point \u00b6 Plugins need to be packaged as Python libraries (distributed on PyPI separate from MkDocs) and each must register as a Plugin via a setuptools entry_points . Add the following to your setup.py script: entry_points={ 'mkdocs.plugins': [ 'pluginname = path.to.some_plugin:SomePluginClass', ] } The pluginname would be the name used by users (in the config file) and path.to.some_plugin:SomePluginClass would be the importable plugin itself ( from path.to.some_plugin import SomePluginClass ) where SomePluginClass is a subclass of BasePlugin which defines the plugin behavior. Naturally, multiple Plugin classes could exist in the same module. Simply define each as a separate entry point. entry_points={ 'mkdocs.plugins': [ 'featureA = path.to.my_plugins:PluginA', 'featureB = path.to.my_plugins:PluginB' ] } Note that registering a plugin does not activate it. The user still needs to tell MkDocs to use it via the config.","title":"\u63d2\u4ef6"},{"location":"dev-guide/plugins/#mkdocs","text":"\u4e00\u4e2a\u5b89\u88c5\uff0c\u4f7f\u7528\u548c\u521b\u5efaMkDocs\u63d2\u4ef6\u7684\u6307\u5357","title":"MkDocs \u63d2\u4ef6"},{"location":"dev-guide/plugins/#_1","text":"\u5728\u4f7f\u7528\u63d2\u4ef6\u4e4b\u524d\uff0c\u5fc5\u987b\u5728\u7cfb\u7edf\u4e0a\u5b89\u88c5\u8be5\u63d2\u4ef6\u3002 \u5982\u679c\u4f60\u4f7f\u7528\u7684\u662fMkDocs\u81ea\u5e26\u7684\u63d2\u4ef6\uff0c\u90a3\u4e48\u5b83\u5728\u4f60\u5b89\u88c5MkDocs\u7684\u65f6\u5019\u5c31\u5df2\u7ecf\u5b89\u88c5\u4e86\u3002 \u4f46\u662f\uff0c\u8981\u5b89\u88c5\u7b2c\u4e09\u65b9\u63d2\u4ef6\uff0c\u60a8\u9700\u8981\u786e\u5b9a\u9002\u5f53\u7684\u5305\u540d\u5e76\u4f7f\u7528 pip \u5b89\u88c5\u5b83: pip install mkdocs-foo-plugin \u4e00\u65e6\u63d2\u4ef6\u6210\u529f\u5b89\u88c5\uff0c\u5b83\u5c31\u53ef\u4ee5\u4f7f\u7528\u4e86\u3002 \u5b83\u53ea\u9700\u8981\u5728\u914d\u7f6e\u6587\u4ef6\u4e2d \u542f\u7528 \u3002 [MkDocs \u63d2\u4ef6] wiki\u9875\u9762\u6709\u4e00\u4e2a\u4e0d\u65ad\u589e\u957f\u7684\u63d2\u4ef6\u5217\u8868\uff0c\u60a8\u53ef\u4ee5\u5b89\u88c5\u548c\u4f7f\u7528\u3002","title":"\u5b89\u88c5\u63d2\u4ef6"},{"location":"dev-guide/plugins/#_2","text":"\u63d2\u4ef6 \u914d\u7f6e\u9009\u9879\u5e94\u8be5\u5305\u542b\u5728\u6784\u5efa\u7f51\u7ad9\u65f6\u4f7f\u7528\u7684\u63d2\u4ef6\u5217\u8868\u3002 \u6bcf\u4e2a\u201c\u63d2\u4ef6\u201d\u5fc5\u987b\u662f\u5206\u914d\u7ed9\u8be5\u63d2\u4ef6\u7684\u5b57\u7b26\u4e32\u540d\u79f0(\u8bf7\u53c2\u9605\u7ed9\u5b9a\u63d2\u4ef6\u7684\u6587\u6863\u4ee5\u786e\u5b9a\u5176\u201c\u540d\u79f0\u201d)\u3002 \u8fd9\u91cc\u5217\u51fa\u7684\u63d2\u4ef6\u5fc5\u987b\u5df2\u7ecf \u5b89\u88c5 \u3002 plugins: - search \u4e00\u4e9b\u63d2\u4ef6\u53ef\u80fd\u63d0\u4f9b\u81ea\u5df1\u7684\u914d\u7f6e\u9009\u9879\u3002 \u5982\u679c\u4f60\u60f3\u8bbe\u7f6e\u4efb\u4f55\u914d\u7f6e\u9009\u9879\uff0c\u90a3\u4e48\u4f60\u53ef\u4ee5\u5d4c\u5957\u4e00\u4e2a\u7ed9\u5b9a\u63d2\u4ef6\u652f\u6301\u7684\u4efb\u4f55\u9009\u9879\u7684\u952e/\u503c\u6620\u5c04( option_name: option value )\u3002 \u6ce8\u610f\uff0c\u63d2\u4ef6\u540d\u540e\u9762\u5fc5\u987b\u8ddf\u7740\u5192\u53f7( : )\uff0c\u7136\u540e\u5728\u65b0\u884c\u4e2d\uff0c\u9009\u9879\u540d\u548c\u503c\u5fc5\u987b\u7f29\u8fdb\u5e76\u7528\u5192\u53f7\u5206\u9694\u3002 \u5982\u679c\u4f60\u60f3\u4e3a\u4e00\u4e2a\u63d2\u4ef6\u5b9a\u4e49\u591a\u4e2a\u9009\u9879\uff0c\u6bcf\u4e2a\u9009\u9879\u5fc5\u987b\u5728\u5355\u72ec\u7684\u884c\u4e2d\u5b9a\u4e49\u3002 plugins: - search: lang: en foo: bar \u6709\u5173\u7ed9\u5b9a\u63d2\u4ef6\u53ef\u7528\u7684\u914d\u7f6e\u9009\u9879\u7684\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605\u8be5\u63d2\u4ef6\u7684\u6587\u6863\u3002 \u6709\u5173\u9ed8\u8ba4\u63d2\u4ef6\u7684\u5217\u8868\u4ee5\u53ca\u5982\u4f55\u8986\u76d6\u5b83\u4eec\uff0c\u8bf7\u53c2\u9605 \u914d\u7f6e \u6587\u6863\u3002","title":"\u4f7f\u7528\u63d2\u4ef6"},{"location":"dev-guide/plugins/#_3","text":"\u50cfMkDocs\u4e00\u6837\uff0c\u63d2\u4ef6\u5fc5\u987b\u7528Python\u7f16\u5199\u3002\u5c3d\u7ba1\u53ef\u4ee5\u5728\u540c\u4e00\u4e2a\u6a21\u5757\u4e2d\u5b9a\u4e49\u591a\u4e2a\u63d2\u4ef6\uff0c\u4f46\u901a\u5e38\u671f\u671b\u6bcf\u4e2a\u63d2\u4ef6\u90fd\u4f5c\u4e3a\u5355\u72ec\u7684Python\u6a21\u5757\u53d1\u5e03\u3002 MkDocs Plugin\u81f3\u5c11\u5fc5\u987b\u5305\u542b\u4e00\u4e2a BasePlugin \u5b50\u7c7b\u548c\u4e00\u4e2a\u6307\u5411\u5b83\u7684[\u5165\u53e3\u70b9]\u3002","title":"\u5f00\u53d1\u63d2\u4ef6"},{"location":"dev-guide/plugins/#baseplugin","text":"mkdocs.plugins.BasePlugin \u7684\u5b50\u7c7b\u5e94\u8be5\u5b9a\u4e49\u63d2\u4ef6\u7684\u884c\u4e3a\u3002 \u8be5\u7c7b\u901a\u5e38\u7531\u6784\u5efa\u8fc7\u7a0b\u4e2d\u5bf9\u7279\u5b9a\u4e8b\u4ef6\u6267\u884c\u7684\u64cd\u4f5c\u4ee5\u53ca\u63d2\u4ef6\u7684\u914d\u7f6e\u65b9\u6848\u7ec4\u6210\u3002 \u6240\u6709 BasePlugin \u5b50\u7c7b\u5305\u542b\u4ee5\u4e0b\u5c5e\u6027:","title":"BasePlugin"},{"location":"dev-guide/plugins/#config_scheme","text":"A tuple of configuration validation instances. Each item must consist of a two item tuple in which the first item is the string name of the configuration option and the second item is an instance of mkdocs.config.config_options.BaseConfigOption or any of its subclasses. For example, the following config_scheme defines three configuration options: foo , which accepts a string; bar , which accepts an integer; and baz , which accepts a boolean value. class MyPlugin(mkdocs.plugins.BasePlugin): config_scheme = ( ('foo', mkdocs.config.config_options.Type(str, default='a default value')), ('bar', mkdocs.config.config_options.Type(int, default=0)), ('baz', mkdocs.config.config_options.Type(bool, default=True)) ) New in version 1.4. Subclassing Config \u6307\u5b9a\u914d\u7f6e\u6a21\u5f0f \u4e3a\u4e86\u83b7\u5f97\u7c7b\u578b\u5b89\u5168\u7684\u597d\u5904\uff0c\u5982\u679c\u4f60\u53ea\u9488\u5bf9MkDocs 1.4+\uff0c\u8bf7\u5c06\u914d\u7f6e\u6a21\u5f0f\u5b9a\u4e49\u4e3a\u4e00\u4e2a\u7c7b: class MyPluginConfig(mkdocs.config.base.Config): foo = mkdocs.config.config_options.Type(str, default='a default value') bar = mkdocs.config.config_options.Type(int, default=0) baz = mkdocs.config.config_options.Type(bool, default=True) class MyPlugin(mkdocs.plugins.BasePlugin[MyPluginConfig]): ...","title":"config_scheme"},{"location":"dev-guide/plugins/#examples-of-config-definitions","text":"Example from mkdocs.config import base, config_options as c class _ValidationOptions(base.Config): enable = c.Type(bool, default=True) verbose = c.Type(bool, default=False) skip_checks = c.ListOfItems(c.Choice(('foo', 'bar', 'baz')), default=[]) class MyPluginConfig(base.Config): definition_file = c.File(exists=True) # required checksum_file = c.Optional(c.File(exists=True)) # can be None but must exist if specified validation = c.SubConfig(_ValidationOptions) From the user's point of view SubConfig is similar to Type(dict) , it's just that it also retains full ability for validation: you define all valid keys and what each value should adhere to. And ListOfItems is similar to Type(list) , but again, we define the constraint that each value must adhere to. This accepts a config as follows: my_plugin: definition_file: configs/test.ini # relative to mkdocs.yml validation: enable: !ENV [CI, false] verbose: true skip_checks: - foo - baz Example import numbers from mkdocs.config import base, config_options as c class _Rectangle(base.Config): width = c.Type(numbers.Real) # required height = c.Type(numbers.Real) # required class MyPluginConfig(base.Config): add_rectangles = c.ListOfItems(c.SubConfig(_Rectangle)) # required In this example we define a list of complex items, and that's achieved by passing a concrete SubConfig to ListOfItems . This accepts a config as follows: my_plugin: add_rectangles: - width: 5 height: 7 - width: 12 height: 2 When the user's configuration is loaded, the above scheme will be used to validate the configuration and fill in any defaults for settings not provided by the user. The validation classes may be any of the classes provided in mkdocs.config.config_options or a third party subclass defined in the plugin. Any settings provided by the user which fail validation or are not defined in the config_scheme will raise a mkdocs.config.base.ValidationError .","title":"Examples of config definitions"},{"location":"dev-guide/plugins/#config","text":"A dictionary of configuration options for the plugin, which is populated by the load_config method after configuration validation has completed. Use this attribute to access options provided by the user. def on_pre_build(self, config, **kwargs): if self.config['baz']: # implement \"baz\" functionality here... New in version 1.4","title":"config"},{"location":"dev-guide/plugins/#safe-attribute-based-access","text":"To get type safety benefits, if you're targeting only MkDocs 1.4+, access options as attributes instead: def on_pre_build(self, config, **kwargs): if self.config.baz: print(self.config.bar ** 2) # OK, `int ** 2` is valid. All BasePlugin subclasses contain the following method(s):","title":"Safe attribute-based access"},{"location":"dev-guide/plugins/#load_configoptions","text":"Loads configuration from a dictionary of options. Returns a tuple of (errors, warnings) . This method is called by MkDocs during configuration validation and should not need to be called by the plugin.","title":"load_config(options)"},{"location":"dev-guide/plugins/#on_event_name","text":"Optional methods which define the behavior for specific events . The plugin should define its behavior within these methods. Replace <event_name> with the actual name of the event. For example, the pre_build event would be defined in the on_pre_build method. Most events accept one positional argument and various keyword arguments. It is generally expected that the positional argument would be modified (or replaced) by the plugin and returned. If nothing is returned (the method returns None ), then the original, unmodified object is used. The keyword arguments are simply provided to give context and/or supply data which may be used to determine how the positional argument should be modified. It is good practice to accept keyword arguments as **kwargs . In the event that additional keywords are provided to an event in a future version of MkDocs, there will be no need to alter your plugin. For example, the following event would add an additional static_template to the theme config: class MyPlugin(BasePlugin): def on_config(self, config, **kwargs): config['theme'].static_templates.add('my_template.html') return config New in version 1.4 To get type safety benefits, if you're targeting only MkDocs 1.4+, access config options as attributes instead: def on_config(self, config: MkDocsConfig): config.theme.static_templates.add('my_template.html') return config","title":"on_&lt;event_name&gt;()"},{"location":"dev-guide/plugins/#events","text":"There are three kinds of events: Global Events , Page Events and Template Events . See a diagram with relations between all the plugin events The events themselves are shown in yellow, with their parameters. Arrows show the flow of arguments and outputs of each event. Sometimes they're omitted. The events are chronologically ordered from top to bottom. Dotted lines appear at splits from global events to per-page events. Click the events' titles to jump to their description.","title":"Events"},{"location":"dev-guide/plugins/#one-time-events","text":"One-time events run once per mkdocs invocation. The only case where these tangibly differ from global events is for mkdocs serve : global events, unlike these, will run multiple times -- once per build .","title":"One-time Events"},{"location":"dev-guide/plugins/#on_startup","text":"The startup event runs once at the very beginning of an mkdocs invocation. New in MkDocs 1.4. The presence of an on_startup method (even if empty) migrates the plugin to the new system where the plugin object is kept across builds within one mkdocs serve . Note that for initializing variables, the __init__ method is still preferred. For initializing per-build variables (and whenever in doubt), use the on_config event. Parameters: command ( Literal [ build , gh-deploy , serve ] ) \u2013 the command that MkDocs was invoked with, e.g. \"serve\" for mkdocs serve . dirty ( bool ) \u2013 whether --dirtyreload or --dirty flags were passed.","title":"on_startup"},{"location":"dev-guide/plugins/#on_shutdown","text":"The shutdown event runs once at the very end of an mkdocs invocation, before exiting. This event is relevant only for support of mkdocs serve , otherwise within a single build it's undistinguishable from on_post_build . New in MkDocs 1.4. The presence of an on_shutdown method (even if empty) migrates the plugin to the new system where the plugin object is kept across builds within one mkdocs serve . Note the on_post_build method is still preferred for cleanups, when possible, as it has a much higher chance of actually triggering. on_shutdown is \"best effort\" because it relies on detecting a graceful shutdown of MkDocs.","title":"on_shutdown"},{"location":"dev-guide/plugins/#on_serve","text":"The serve event is only called when the serve command is used during development. It runs only once, after the first build finishes. It is passed the Server instance which can be modified before it is activated. For example, additional files or directories could be added to the list of \"watched\" files for auto-reloading. Parameters: server ( LiveReloadServer ) \u2013 livereload.Server instance config ( MkDocsConfig ) \u2013 global configuration object builder ( Callable ) \u2013 a callable which gets passed to each call to server.watch Returns: Optional [ LiveReloadServer ] \u2013 livereload.Server instance","title":"on_serve"},{"location":"dev-guide/plugins/#global-events","text":"Global events are called once per build at either the beginning or end of the build process. Any changes made in these events will have a global effect on the entire site.","title":"Global Events"},{"location":"dev-guide/plugins/#on_config","text":"The config event is the first event called on build and is run immediately after the user configuration is loaded and validated. Any alterations to the config should be made here. Parameters: config ( MkDocsConfig ) \u2013 global configuration object Returns: Optional [ Config ] \u2013 global configuration object","title":"on_config"},{"location":"dev-guide/plugins/#on_pre_build","text":"The pre_build event does not alter any variables. Use this event to call pre-build scripts. Parameters: config ( MkDocsConfig ) \u2013 global configuration object","title":"on_pre_build"},{"location":"dev-guide/plugins/#on_files","text":"The files event is called after the files collection is populated from the docs_dir . Use this event to add, remove, or alter files in the collection. Note that Page objects have not yet been associated with the file objects in the collection. Use Page Events to manipulate page specific data. Parameters: files ( Files ) \u2013 global files collection config ( MkDocsConfig ) \u2013 global configuration object Returns: Optional [ Files ] \u2013 global files collection","title":"on_files"},{"location":"dev-guide/plugins/#on_nav","text":"The nav event is called after the site navigation is created and can be used to alter the site navigation. Parameters: nav ( Navigation ) \u2013 global navigation object config ( MkDocsConfig ) \u2013 global configuration object files ( Files ) \u2013 global files collection Returns: Optional [ Navigation ] \u2013 global navigation object","title":"on_nav"},{"location":"dev-guide/plugins/#on_env","text":"The env event is called after the Jinja template environment is created and can be used to alter the Jinja environment . Parameters: env ( jinja2 . Environment ) \u2013 global Jinja environment config ( MkDocsConfig ) \u2013 global configuration object files ( Files ) \u2013 global files collection Returns: Optional [ jinja2 . Environment ] \u2013 global Jinja Environment","title":"on_env"},{"location":"dev-guide/plugins/#on_post_build","text":"The post_build event does not alter any variables. Use this event to call post-build scripts. Parameters: config ( MkDocsConfig ) \u2013 global configuration object","title":"on_post_build"},{"location":"dev-guide/plugins/#on_build_error","text":"The build_error event is called after an exception of any kind is caught by MkDocs during the build process. Use this event to clean things up before MkDocs terminates. Note that any other events which were scheduled to run after the error will have been skipped. See Handling Errors for more details. Parameters: error ( Exception ) \u2013 exception raised","title":"on_build_error"},{"location":"dev-guide/plugins/#template-events","text":"Template events are called once for each non-page template. Each template event will be called for each template defined in the extra_templates config setting as well as any static_templates defined in the theme. All template events are called after the env event and before any page events .","title":"Template Events"},{"location":"dev-guide/plugins/#on_pre_template","text":"The pre_template event is called immediately after the subject template is loaded and can be used to alter the template. Parameters: template ( jinja2 . Template ) \u2013 a Jinja2 Template object template_name ( str ) \u2013 string filename of template config ( MkDocsConfig ) \u2013 global configuration object Returns: Optional [ jinja2 . Template ] \u2013 a Jinja2 Template object","title":"on_pre_template"},{"location":"dev-guide/plugins/#on_template_context","text":"The template_context event is called immediately after the context is created for the subject template and can be used to alter the context for that specific template only. Parameters: context ( Dict [ str , Any ] ) \u2013 dict of template context variables template_name ( str ) \u2013 string filename of template config ( MkDocsConfig ) \u2013 global configuration object Returns: Optional [ Dict [ str , Any ]] \u2013 dict of template context variables","title":"on_template_context"},{"location":"dev-guide/plugins/#on_post_template","text":"The post_template event is called after the template is rendered, but before it is written to disc and can be used to alter the output of the template. If an empty string is returned, the template is skipped and nothing is is written to disc. Parameters: output_content ( str ) \u2013 output of rendered template as string template_name ( str ) \u2013 string filename of template config ( MkDocsConfig ) \u2013 global configuration object Returns: Optional [ str ] \u2013 output of rendered template as string","title":"on_post_template"},{"location":"dev-guide/plugins/#page-events","text":"Page events are called once for each Markdown page included in the site. All page events are called after the post_template event and before the post_build event.","title":"Page Events"},{"location":"dev-guide/plugins/#on_pre_page","text":"The pre_page event is called before any actions are taken on the subject page and can be used to alter the Page instance. Parameters: page ( Page ) \u2013 mkdocs.nav.Page instance config ( MkDocsConfig ) \u2013 global configuration object files ( Files ) \u2013 global files collection Returns: Optional [ Page ] \u2013 mkdocs.nav.Page instance","title":"on_pre_page"},{"location":"dev-guide/plugins/#on_page_read_source","text":"The on_page_read_source event can replace the default mechanism to read the contents of a page's source from the filesystem. Parameters: page ( Page ) \u2013 mkdocs.nav.Page instance config ( MkDocsConfig ) \u2013 global configuration object Returns: Optional [ str ] \u2013 The raw source for a page as unicode string. If None is returned, the default loading from a file will be performed.","title":"on_page_read_source"},{"location":"dev-guide/plugins/#on_page_markdown","text":"The page_markdown event is called after the page's markdown is loaded from file and can be used to alter the Markdown source text. The meta- data has been stripped off and is available as page.meta at this point. Parameters: markdown ( str ) \u2013 Markdown source text of page as string page ( Page ) \u2013 mkdocs.nav.Page instance config ( MkDocsConfig ) \u2013 global configuration object files ( Files ) \u2013 global files collection Returns: Optional [ str ] \u2013 Markdown source text of page as string","title":"on_page_markdown"},{"location":"dev-guide/plugins/#on_page_content","text":"The page_content event is called after the Markdown text is rendered to HTML (but before being passed to a template) and can be used to alter the HTML body of the page. Parameters: html ( str ) \u2013 HTML rendered from Markdown source as string page ( Page ) \u2013 mkdocs.nav.Page instance config ( MkDocsConfig ) \u2013 global configuration object files ( Files ) \u2013 global files collection Returns: Optional [ str ] \u2013 HTML rendered from Markdown source as string","title":"on_page_content"},{"location":"dev-guide/plugins/#on_page_context","text":"The page_context event is called after the context for a page is created and can be used to alter the context for that specific page only. Parameters: context ( Dict [ str , Any ] ) \u2013 dict of template context variables page ( Page ) \u2013 mkdocs.nav.Page instance config ( MkDocsConfig ) \u2013 global configuration object nav ( Navigation ) \u2013 global navigation object Returns: Optional [ Dict [ str , Any ]] \u2013 dict of template context variables","title":"on_page_context"},{"location":"dev-guide/plugins/#on_post_page","text":"The post_page event is called after the template is rendered, but before it is written to disc and can be used to alter the output of the page. If an empty string is returned, the page is skipped and nothing is written to disc. Parameters: output ( str ) \u2013 output of rendered template as string page ( Page ) \u2013 mkdocs.nav.Page instance config ( MkDocsConfig ) \u2013 global configuration object Returns: Optional [ str ] \u2013 output of rendered template as string","title":"on_post_page"},{"location":"dev-guide/plugins/#event-priorities","text":"For each event type, corresponding methods of plugins are called in the order that the plugins appear in the plugins config . Since MkDocs 1.4, plugins can choose to set a priority value for their events. Events with higher priority are called first. Events without a chosen priority get a default of 0. Events that have the same priority are ordered as they appear in the config.","title":"Event Priorities"},{"location":"dev-guide/plugins/#mkdocs.plugins.event_priority","text":"A decorator to set an event priority for an event handler method. Recommended priority values: 100 \"first\", 50 \"early\", 0 \"default\", -50 \"late\", -100 \"last\". As different plugins discover more precise relations to each other, the values should be further tweaked. @plugins.event_priority(-100) # Wishing to run this after all other plugins' `on_files` events. def on_files(self, files, config, **kwargs): ... New in MkDocs 1.4. Recommended shim for backwards compatibility: try: from mkdocs.plugins import event_priority except ImportError: event_priority = lambda priority: lambda f: f # No-op fallback","title":"event_priority()"},{"location":"dev-guide/plugins/#handling-errors","text":"MkDocs defines four error types:","title":"Handling Errors"},{"location":"dev-guide/plugins/#mkdocs.exceptions.MkDocsException","text":"Bases: ClickException The base class which all MkDocs exceptions inherit from. This should not be raised directly. One of the subclasses should be raised instead.","title":"MkDocsException"},{"location":"dev-guide/plugins/#mkdocs.exceptions.ConfigurationError","text":"Bases: MkDocsException This error is raised by configuration validation when a validation error is encountered. This error should be raised by any configuration options defined in a plugin's config_scheme .","title":"ConfigurationError"},{"location":"dev-guide/plugins/#mkdocs.exceptions.BuildError","text":"Bases: MkDocsException This error may be raised by MkDocs during the build process. Plugins should not raise this error.","title":"BuildError"},{"location":"dev-guide/plugins/#mkdocs.exceptions.PluginError","text":"Bases: BuildError A subclass of [ mkdocs.exceptions.BuildError ][] which can be raised by plugin events. Unexpected and uncaught exceptions will interrupt the build process and produce typical Python tracebacks, which are useful for debugging your code. However, users generally find tracebacks overwhelming and often miss the helpful error message. Therefore, MkDocs will catch any of the errors listed above, retrieve the error message, and exit immediately with only the helpful message displayed to the user. Therefore, you might want to catch any exceptions within your plugin and raise a PluginError , passing in your own custom-crafted message, so that the build process is aborted with a helpful message. The on_build_error event will be triggered for any exception. For example: from mkdocs.exceptions import PluginError from mkdocs.plugins import BasePlugin class MyPlugin(BasePlugin): def on_post_page(self, output, page, config, **kwargs): try: # some code that could throw a KeyError ... except KeyError as error: raise PluginError(str(error)) def on_build_error(self, error, **kwargs): # some code to clean things up ...","title":"PluginError"},{"location":"dev-guide/plugins/#entry-point","text":"Plugins need to be packaged as Python libraries (distributed on PyPI separate from MkDocs) and each must register as a Plugin via a setuptools entry_points . Add the following to your setup.py script: entry_points={ 'mkdocs.plugins': [ 'pluginname = path.to.some_plugin:SomePluginClass', ] } The pluginname would be the name used by users (in the config file) and path.to.some_plugin:SomePluginClass would be the importable plugin itself ( from path.to.some_plugin import SomePluginClass ) where SomePluginClass is a subclass of BasePlugin which defines the plugin behavior. Naturally, multiple Plugin classes could exist in the same module. Simply define each as a separate entry point. entry_points={ 'mkdocs.plugins': [ 'featureA = path.to.my_plugins:PluginA', 'featureB = path.to.my_plugins:PluginB' ] } Note that registering a plugin does not activate it. The user still needs to tell MkDocs to use it via the config.","title":"Entry Point"},{"location":"dev-guide/themes/","text":"\u5f00\u53d1\u4e3b\u9898 \u00b6 \u521b\u5efa\u548c\u5206\u53d1\u81ea\u5b9a\u4e49\u4e3b\u9898\u7684\u6307\u5357\u3002 Note \u5982\u679c\u60a8\u6b63\u5728\u5bfb\u627e\u73b0\u6709\u7684\u7b2c\u4e09\u65b9\u4e3b\u9898\uff0c\u5b83\u4eec\u5728MkDocs \u793e\u533a wiki \u4e2d\u5217\u51fa\u3002 \u5982\u679c\u4f60\u60f3\u5206\u4eab\u4f60\u521b\u5efa\u7684\u4e3b\u9898\uff0c\u4f60\u5e94\u8be5\u5728\u7ef4\u57fa\u4e0a\u5217\u51fa\u5b83\u3002 When creating a new theme, you can either follow the steps in this guide to create one from scratch or you can download the mkdocs-basic-theme as a basic, yet complete, theme with all the boilerplate required. You can find this base theme on GitHub . It contains detailed comments in the code to describe the different features and their usage. \u521b\u5efa\u81ea\u5b9a\u4e49\u4e3b\u9898 \u00b6 The bare minimum required for a custom theme is a main.html Jinja2 template file which is placed in a directory that is not a child of the docs_dir . Within mkdocs.yml , set the theme.custom_dir option to the path of the directory containing main.html . The path should be relative to the configuration file. For example, given this example project layout: mkdocs.yml docs/ index.md about.md custom_theme/ main.html ... ... you would include the following settings in mkdocs.yml to use the custom theme directory: theme: name: null custom_dir: 'custom_theme/' Note Generally, when building your own custom theme, the theme. name configuration setting would be set to null . However, if the theme. custom_dir configuration value is used in combination with an existing theme, the theme. custom_dir can be used to replace only specific parts of a built-in theme. For example, with the above layout and if you set name: \"mkdocs\" then the main.html file in the theme. custom_dir would replace the file of the same name in the mkdocs theme but otherwise the mkdocs theme would remain unchanged. This is useful if you want to make small adjustments to an existing theme. For more specific information, see Customizing Your Theme . Warning A theme's configuration defined in a mkdocs_theme.yml file is not loaded from theme.custom_dir . When an entire theme exists in theme.custom_dir and theme.name is set to null , then the entire theme configuration must be defined in the theme configuration option in the mkdocs.yml file. However, when a theme is packaged up for distribution, and loaded using the theme.name configuration option, then a mkdocs_theme.yml file is required for the theme. \u57fa\u672c\u4e3b\u9898 \u00b6 The simplest main.html file is the following: <!DOCTYPE html> <html> <head> <title>{% if page.title %}{{ page.title }} - {% endif %}{{ config.site_name }}</title> </head> <body> {{ page.content }} </body> </html> The body content from each page specified in mkdocs.yml is inserted using the {{ page.content }} tag. Style-sheets and scripts can be brought into this theme as with a normal HTML file. Navbars and tables of contents can also be generated and included automatically, through the nav and toc objects, respectively. If you wish to write your own theme, it is recommended to start with one of the built-in themes and modify it accordingly. Note As MkDocs uses Jinja as its template engine, you have access to all the power of Jinja, including template inheritance . You may notice that the themes included with MkDocs make extensive use of template inheritance and blocks, allowing users to easily override small bits and pieces of the templates from the theme custom_dir . Therefore, the built-in themes are implemented in a base.html file, which main.html extends. Although not required, third party template authors are encouraged to follow a similar pattern and may want to define the same blocks as are used in the built-in themes for consistency. \u4e3b\u9898\u6587\u4ef6 \u00b6 There are various files which a theme treats special in some way. Any other files are simply copied from the theme directory to the same path in the site_dir when the site it built. For example image and CSS files have no special significance and are copied as-is. Note, however, that if the user provides a file with the same path in their docs_dir , then the user's file will replace the theme file. \u6a21\u677f\u6587\u4ef6 \u00b6 Any files with the .html extension are considered to be template files and are not copied from the theme directory or any subdirectories. Also, any files listed in static_templates are treated as templates regardless of their file extension. \u4e3b\u9898\u5143\u6587\u4ef6 \u00b6 The various files required for packaging a theme are also ignored. Specifically, the mkdocs_theme.yml configuration file and any Python files. \u70b9\u6587\u4ef6 \u00b6 Theme authors can explicitly force MkDocs to ignore files by starting a file or directory name with a dot. Any of the following files would be ignored: .ignored.txt .ignored/file.txt foo/.ignored.txt foo/.ignored/file.txt \u6587\u6863\u6587\u4ef6 \u00b6 All documentation files are ignored. Specifically, any Markdown files (using any of the file extensions supported by MKDocs). Additionally, any README files which may exist in the theme directories are ignored. \u6a21\u677f\u53d8\u91cf \u00b6 Each template in a theme is built with a template context. These are the variables that are available to themes. The context varies depending on the template that is being built. At the moment templates are either built with the global context or with a page specific context. The global context is used for HTML pages that don't represent an individual Markdown document, for example a 404.html page or search.html. \u5168\u5c40\u73af\u5883 \u00b6 The following variables are available globally on any template. config \u00b6 The config variable is an instance of MkDocs' config object generated from the mkdocs.yml config file. While you can use any config option, some commonly used options include: config.site_name config.site_url config.site_author config.site_description config.theme.locale (See also Theme Configuration below) config.extra_javascript config.extra_css config.repo_url config.repo_name config.copyright config.google_analytics nav \u00b6 The nav variable is used to create the navigation for the documentation. The nav object is an iterable of navigation objects as defined by the nav configuration setting. In addition to the iterable of navigation objects , the nav object contains the following attributes: homepage: Optional[Page] class-attribute \u00b6 The page object for the homepage of the site. pages: List[Page] class-attribute \u00b6 A flat list of all page objects contained in the navigation. This list is not necessarily a complete list of all site pages as it does not contain pages which are not included in the navigation. This list does match the list and order of pages used for all \"next page\" and \"previous page\" links. For a list of all pages, use the pages template variable. \u5bfc\u822a\u793a\u4f8b \u00b6 Following is a basic usage example which outputs the first and second level navigation as a nested list. {% if nav|length>1 %} <ul> {% for nav_item in nav %} {% if nav_item.children %} <li>{{ nav_item.title }} <ul> {% for nav_item in nav_item.children %} <li class=\"{% if nav_item.active %}current{% endif %}\"> <a href=\"{{ nav_item.url|url }}\">{{ nav_item.title }}</a> </li> {% endfor %} </ul> </li> {% else %} <li class=\"{% if nav_item.active %}current{% endif %}\"> <a href=\"{{ nav_item.url|url }}\">{{ nav_item.title }}</a> </li> {% endif %} {% endfor %} </ul> {% endif %} base_url \u00b6 The base_url provides a relative path to the root of the MkDocs project. While this can be used directly by prepending it to a local relative URL, it is best to use the url template filter, which is smarter about how it applies base_url . mkdocs_version \u00b6 Contains the current MkDocs version. build_date_utc \u00b6 A Python datetime object that represents the date and time the documentation was built in UTC. This is useful for showing how recently the documentation was updated. pages \u00b6 A flat list of File objects for all pages in the project. This list can contain pages not included in the global navigation and may not match the order of pages within that navigation. The page object for each File can be accessed from file.page . page \u00b6 In templates which are not rendered from a Markdown source file, the page variable is None . In templates which are rendered from a Markdown source file, the page variable contains a page object. The same page objects are used as page navigation objects in the global navigation and in the pages template variable. All page objects contain the following attributes: title: Optional[str] class-attribute \u00b6 Contains the Title for the current page. content: Optional[str] class-attribute \u00b6 The rendered Markdown as HTML, this is the contents of the documentation. toc: TableOfContents class-attribute \u00b6 An iterable object representing the Table of contents for a page. Each item in the toc is an AnchorLink . The following example would display the top two levels of the Table of Contents for a page. <ul> {% for toc_item in page.toc %} <li><a href=\"{{ toc_item.url }}\">{{ toc_item.title }}</a></li> {% for toc_item in toc_item.children %} <li><a href=\"{{ toc_item.url }}\">{{ toc_item.title }}</a></li> {% endfor %} {% endfor %} </ul> meta: MutableMapping[str, Any] class-attribute \u00b6 A mapping of the metadata included at the top of the markdown page. In this example we define a source property above the page title: source: generics.py mixins.py # Page title Content... A template can access this metadata for the page with the meta.source variable. This could then be used to link to source files related to the documentation page. {% for filename in page.meta.source %} <a class=\"github\" href=\"https://github.com/.../{{ filename }}\"> <span class=\"label label-info\">{{ filename }}</span> </a> {% endfor %} url: str property \u00b6 The URL of the page relative to the MkDocs site_dir . It is expected that this be used with the url filter to ensure the URL is relative to the current page. <a href=\"{{ page.url|url }}\">{{ page.title }}</a> file: File class-attribute \u00b6 The documentation File that the page is being rendered from. abs_url: Optional[str] class-attribute \u00b6 The absolute URL of the page from the server root as determined by the value assigned to the site_url configuration setting. The value includes any subdirectory included in the site_url , but not the domain. base_url should not be used with this variable. For example, if site_url: https://example.com/ , then the value of page.abs_url for the page foo.md would be /foo/ . However, if site_url: https://example.com/bar/ , then the value of page.abs_url for the page foo.md would be /bar/foo/ . canonical_url: Optional[str] class-attribute \u00b6 The full, canonical URL to the current page as determined by the value assigned to the site_url configuration setting. The value includes the domain and any subdirectory included in the site_url . base_url should not be used with this variable. edit_url: Optional[str] class-attribute \u00b6 The full URL to the source page in the source repository. Typically used to provide a link to edit the source page. base_url should not be used with this variable. is_homepage: bool property \u00b6 Evaluates to True for the homepage of the site and False for all other pages. This can be used in conjunction with other attributes of the page object to alter the behavior. For example, to display a different title on the homepage: {% if not page.is_homepage %}{{ page.title }} - {% endif %}{{ site_name }} previous_page: Optional[Page] class-attribute \u00b6 The page object for the previous page or None . The value will be None if the current page is the first item in the site navigation or if the current page is not included in the navigation at all. next_page: Optional[Page] class-attribute \u00b6 The page object for the next page or None . The value will be None if the current page is the last item in the site navigation or if the current page is not included in the navigation at all. parent: Optional[Section] class-attribute \u00b6 The immediate parent of the page in the site navigation. None if the page is at the top level. children: None = None class-attribute \u00b6 Pages do not contain children and the attribute is always None . active: bool writable property \u00b6 When True , indicates that this page is the currently viewed page. Defaults to False . is_section: bool = False class-attribute \u00b6 Indicates that the navigation object is a \"section\" object. Always False for page objects. is_page: bool = True class-attribute \u00b6 Indicates that the navigation object is a \"page\" object. Always True for page objects. is_link: bool = False class-attribute \u00b6 Indicates that the navigation object is a \"link\" object. Always False for page objects. AnchorLink \u00b6 A single entry in the table of contents. title: str class-attribute \u00b6 The text of the item. url: str property \u00b6 The hash fragment of a URL pointing to the item. level: int class-attribute \u00b6 The zero-based level of the item. children: List[AnchorLink] class-attribute \u00b6 An iterable of any child items. \u5bfc\u822a\u5bf9\u8c61 \u00b6 Navigation objects contained in the nav template variable may be one of section objects, page objects, and link objects. While section objects may contain nested navigation objects, pages and links do not. Page objects are the full page object as used for the current page with all of the same attributes available. Section and Link objects contain a subset of those attributes as defined below: Section \u00b6 A section navigation object defines a named section in the navigation and contains a list of child navigation objects. Note that sections do not contain URLs and are not links of any kind. However, by default, MkDocs sorts index pages to the top and the first child might be used as the URL for a section if a theme chooses to do so. The following attributes are available on section objects: title: str class-attribute \u00b6 The title of the section. parent: Optional[Section] class-attribute \u00b6 The immediate parent of the section or None if the section is at the top level. children: List[Union[Page, Section, Link]] class-attribute \u00b6 An iterable of all child navigation objects. Children may include nested sections, pages and links. active: bool writable property \u00b6 When True , indicates that a child page of this section is the current page and can be used to highlight the section as the currently viewed section. Defaults to False . is_section: bool = True class-attribute \u00b6 Indicates that the navigation object is a \"section\" object. Always True for section objects. is_page: bool = False class-attribute \u00b6 Indicates that the navigation object is a \"page\" object. Always False for section objects. is_link: bool = False class-attribute \u00b6 Indicates that the navigation object is a \"link\" object. Always False for section objects. Link \u00b6 A link navigation object contains a link which does not point to an internal MkDocs page. The following attributes are available on link objects: title: str class-attribute \u00b6 The title of the link. This would generally be used as the label of the link. url: str class-attribute \u00b6 The URL that the link points to. The URL should always be an absolute URLs and should not need to have base_url prepended. parent: Optional[Section] class-attribute \u00b6 The immediate parent of the link. None if the link is at the top level. children: None = None class-attribute \u00b6 Links do not contain children and the attribute is always None . active: bool = False class-attribute \u00b6 External links cannot be \"active\" and the attribute is always False . is_section: bool = False class-attribute \u00b6 Indicates that the navigation object is a \"section\" object. Always False for link objects. is_page: bool = False class-attribute \u00b6 Indicates that the navigation object is a \"page\" object. Always False for link objects. is_link: bool = True class-attribute \u00b6 Indicates that the navigation object is a \"link\" object. Always True for link objects. \u989d\u5916\u7684\u4e0a\u4e0b\u6587 \u00b6 Additional variables can be passed to the template with the extra configuration option. This is a set of key value pairs that can make custom templates far more flexible. For example, this could be used to include the project version of all pages and a list of links related to the project. This can be achieved with the following extra configuration: extra: version: 0.13.0 links: - https://github.com/mkdocs - https://docs.readthedocs.org/en/latest/builds.html#mkdocs - https://www.mkdocs.org/ And then displayed with this HTML in the custom theme. {{ config.extra.version }} {% if config.extra.links %} <ul> {% for link in config.extra.links %} <li>{{ link }}</li> {% endfor %} </ul> {% endif %} \u6a21\u677f\u8fc7\u6ee4\u5668 \u00b6 In addition to Jinja's default filters , the following custom filters are available to use in MkDocs templates: url \u00b6 Normalizes a URL. Absolute URLs are passed through unaltered. If the URL is relative and the template context includes a page object, then the URL is returned relative to the page object. Otherwise, the URL is returned with base_url prepended. <a href=\"{{ page.url|url }}\">{{ page.title }}</a> tojson \u00b6 Safety convert a Python object to a value in a JavaScript script. <script> var mkdocs_page_name = {{ page.title|tojson|safe }}; </script> \u641c\u7d22\u548c\u4e3b\u9898 \u00b6 As of MkDocs version 0.17 client side search support has been added to MkDocs via the search plugin. A theme needs to provide a few things for the plugin to work with the theme. While the search plugin is activated by default, users can disable the plugin and themes should account for this. It is recommended that theme templates wrap search specific markup with a check for the plugin: {% if 'search' in config['plugins'] %} search stuff here... {% endif %} At its most basic functionality, the search plugin will simply provide an index file which is no more than a JSON file containing the content of all pages. The theme would need to implement its own search functionality client-side. However, with a few settings and the necessary templates, the plugin can provide a complete functioning client-side search tool based on lunr.js . The following HTML needs to be added to the theme so that the provided JavaScript is able to properly load the search scripts and make relative links to the search results from the current page. <script>var base_url = '{{ base_url }}';</script> With properly configured settings, the following HTML in a template will add a full search implementation to your theme. <h1 id=\"search\">Search Results</h1> <form action=\"search.html\"> <input name=\"q\" id=\"mkdocs-search-query\" type=\"text\" > </form> <div id=\"mkdocs-search-results\"> Sorry, page not found. </div> The JavaScript in the plugin works by looking for the specific ID's used in the above HTML. The form input for the user to type the search query must be identified with id=\"mkdocs-search-query\" and the div where the results will be placed must be identified with id=\"mkdocs-search-results\" . The plugin supports the following options being set in the theme's configuration file , mkdocs_theme.yml : include_search_page \u00b6 Determines whether the search plugin expects the theme to provide a dedicated search page via a template located at search/search.html . When include_search_page is set to true , the search template will be built and available at search/search.html . This method is used by the readthedocs theme. When include_search_page is set to false or not defined, it is expected that the theme provide some other mechanisms for displaying search results. For example, the mkdocs theme displays results on any page via a modal. search_index_only \u00b6 Determines whether the search plugin should only generate a search index or a complete search solution. When search_index_only is set to false , then the search plugin modifies the Jinja environment by adding its own templates directory (with a lower precedence than the theme) and adds its scripts to the extra_javascript config setting. When search_index_only is set to true or not defined, the search plugin makes no modifications to the Jinja environment. A complete solution using the provided index file is the responsibility of the theme. The search index is written to a JSON file at search/search_index.json in the site_dir . The JSON object contained within the file may contain up to three objects. { config: {...}, docs: [...], index: {...} } If present, the config object contains the key/value pairs of config options defined for the plugin in the user's mkdocs.yml config file under plugings.search . The config object was new in MkDocs version 1.0 . The docs object contains a list of document objects. Each document object is made up of a location (URL), a title , and text which can be used to create a search index and/or display search results. If present, the index object contains a pre-built index which offers performance improvements for larger sites. Note that the pre-built index is only created if the user explicitly enables the prebuild_index config option. Themes should expect the index to not be present, but can choose to use the index when it is available. The index object was new in MkDocs version 1.0 . \u5305\u88c5\u4e3b\u9898 \u00b6 MkDocs makes use of Python packaging to distribute themes. This comes with a few requirements. To see an example of a package containing one theme, see the MkDocs Bootstrap theme and to see a package that contains many themes, see the MkDocs Bootswatch theme . Note It is not strictly necessary to package a theme, as the entire theme can be contained in the custom_dir . If you have created a \"one-off theme,\" that should be sufficient. However, if you intend to distribute your theme for others to use, packaging the theme has some advantages. By packaging your theme, your users can more easily install it, they can rely on a default configuration being defined, and they can then take advantage of the custom_dir to make tweaks to your theme to better suit their needs. \u5305\u88c5\u5e03\u5c40 \u00b6 The following layout is recommended for themes. Two files at the top level directory called MANIFEST.in and setup.py beside the theme directory which contains an empty __init__.py file, a theme configuration file ( mkdocs_theme.yml ), and your template and media files. . |-- MANIFEST.in |-- theme_name | |-- __init__.py | |-- mkdocs_theme.yml | |-- main.html | |-- styles.css `-- setup.py The MANIFEST.in file should contain the following contents but with theme_name updated and any extra file extensions added to the include. recursive-include theme_name *.ico *.js *.css *.png *.html *.eot *.svg *.ttf *.woff recursive-exclude * __pycache__ recursive-exclude * *.py[co] The setup.py should include the following text with the modifications described below. from setuptools import setup, find_packages VERSION = '0.0.1' setup( name=\"mkdocs-themename\", version=VERSION, url='', license='', description='', author='', author_email='', packages=find_packages(), include_package_data=True, entry_points={ 'mkdocs.themes': [ 'themename = theme_name', ] }, zip_safe=False ) Fill in the URL, license, description, author and author email address. The name should follow the convention mkdocs-themename (like mkdocs-bootstrap and mkdocs-bootswatch ), starting with MkDocs, using hyphens to separate words and including the name of your theme. Most of the rest of the file can be left unedited. The last section we need to change is the entry_points. This is how MkDocs finds the theme(s) you are including in the package. The name on the left is the one that users will use in their mkdocs.yml and the one on the right is the directory containing your theme files. The directory you created at the start of this section with the main.html file should contain all of the other theme files. The minimum requirement is that it includes a main.html for the theme. It must also include a __init__.py file which should be empty, this file tells Python that the directory is a package. \u4e3b\u9898\u914d\u7f6e \u00b6 A packaged theme is required to include a configuration file named mkdocs_theme.yml which is placed in the root of your template files. The file should contain default configuration options for the theme. However, if the theme offers no configuration options, the file is still required and can be left blank. A theme which is not packaged does not need a mkdocs_theme.yml file as that file is not loaded from theme.custom_dir . The theme author is free to define any arbitrary options deemed necessary and those options will be made available in the templates to control behavior. For example, a theme might want to make a sidebar optional and include the following in the mkdocs_theme.yml file: show_sidebar: true Then in a template, that config option could be referenced: {% if config.theme.show_sidebar %} <div id=\"sidebar\">...</div> {% endif %} And the user could override the default in their project's mkdocs.yml config file: theme: name: themename show_sidebar: false In addition to arbitrary options defined by the theme, MkDocs defines a few special options which alters its behavior: Block locale \u00b6 This option mirrors the theme config option of the same name. If this value is not defined in the mkdocs_theme.yml file and the user does not set it in mkdocs.yml then it will default to en (English). The value is expected to match the language used in the text provided by the theme (such a \"next\" and \"previous\" links) and should be used as the value of the <html> tag's lang attribute. See Supporting theme localization/ translation for more information. Note that during configuration validation, the provided string is converted to a Locale object. The object contains Locale.language and Locale.territory attributes and will resolve as a string from within a template. Therefore, the following will work fine: <html lang=\"{ config.theme.locale }\"> If the locale was set to fr_CA (Canadian French), then the above template would render as: <html lang=\"fr_CA\"> If you did not want the territory attribute to be included, then reference the language attribute directly: <html lang=\"{ config.theme.locale.language }\"> That would render as: <html lang=\"fr\"> static_templates \u00b6 This option mirrors the theme config option of the same name and allows some defaults to be set by the theme. Note that while the user can add templates to this list, the user cannot remove templates included in the theme's config. extends \u00b6 Defines a parent theme that this theme inherits from. The value should be the string name of the parent theme. Normal Jinja inheritance rules apply. Plugins may also define some options which allow the theme to inform a plugin about which set of plugin options it expects. See the documentation for any plugins you may wish to support in your theme. \u5206\u53d1\u4e3b\u9898 \u00b6 With the above changes, your theme should now be ready to install. This can be done with pip, using pip install . if you are still in the same directory as the setup.py. Most Python packages, including MkDocs, are distributed on PyPI. To do this, you should run the following command. python setup.py register If you don't have an account setup, you should be prompted to create one. For a much more detailed guide, see the official Python packaging documentation for Packaging and Distributing Projects . \u652f\u6301\u4e3b\u9898\u672c\u5730\u5316/\u7ffb\u8bd1 \u00b6 While the built-in themes provide support for localization/translation of templates, custom themes and third-party themes may choose not to. Regardless, the locale setting of the theme configuration option is always present and is relied upon by other parts of the system. Therefore, it is recommended that all third-party themes use the same setting for designating a language regardless of the system they use for translation. In that way, users will experience consistent behavior regardless of the theme they may choose. The method for managing translations is up to the developers of a theme. However, if a theme developer chooses to use the same mechanisms used by the built-in themes, the sections below outline how to enable and make use of the same commands utilized by MkDocs. \u4f7f\u7528\u672c\u5730\u5316/\u7ffb\u8bd1\u547d\u4ee4 \u00b6 Warning As pybabel is not installed by default and most users will not have pybabel installed, theme developers and/or translators should make sure to have installed the necessary dependencies (using pip install mkdocs[i18n] ) in order for the commands to be available for use. The translation commands should be called from the root of your theme's working tree. For an overview of the workflow used by MkDocs to translate the built-in themes, see the appropriate section of the Contributing Guide and the Translation Guide . \u793a\u4f8b\u81ea\u5b9a\u4e49\u4e3b\u9898\u672c\u5730\u5316/\u7ffb\u8bd1\u5de5\u4f5c\u6d41\u7a0b \u00b6 Note If your theme inherits from an existing theme which already provides translation catalogs, your theme's translations will be merged with the parent theme's translations during a MkDocs build. This means that you only need to concentrate on the added translations. Yet, you will still benefit from the translations of the parent theme. At the same time, you may override any of parent theme's translations! Let's suppose that you're working on your own fork of the mkdocs-basic-theme and want to add translations to it. Edit the templates by wrapping text in your HTML sources with {% trans %} and {% endtrans %} as follows: --- a/basic_theme/base.html +++ b/basic_theme/base.html @@ -88,7 +88,7 @@ <body> - <h1>This is an example theme for MkDocs.</h1> + <h1>{% trans %}This is an example theme for MkDocs.{% endtrans %}</h1> <p> It is designed to be read by looking at the theme HTML which is heavily Then you would follow the Translation Guide as usual to get your translations running. \u5e26\u6709\u4e3b\u9898\u7684\u5305\u88c5\u7ffb\u8bd1 \u00b6 While the Portable Object Template ( pot ) file created by the extract_messages command and the Portable Object ( po ) files created by the init_catalog and update_catalog commands are useful for creating and editing translations, they are not used by MkDocs directly and do not need to be included in a packaged release of a theme. When MkDocs builds a site with translations, it only makes use of the binary mo files(s) for the specified locale. Therefore, when [packaging a theme], make sure to include it in the \"wheels\", using a MANIFEST.in file or otherwise. Then, before building your Python package, you will want to ensure that the binary mo file for each locale is up-to-date by running the compile_catalog command for each locale. MkDocs expects the binary mo files to be located at locales/<locale>/LC_MESSAGES/messages.mo , which the compile_catalog command automatically does for you. See [Testing theme translations] for details. Note As outlined in our Translation Guide , the MkDocs project has chosen to include the pot and po files in our code repository, but not the mo files. This requires us to always run compile_catalog before packaging a new release regardless of whether any changes were made to a translation or not. However, you may chose an alternate workflow for your theme. At a minimum, you need to ensure that up-to-date mo files are included at the correct location in each release. However, you may use a different process for generating those mo files if you chose to do so.","title":"\u4e3b\u9898"},{"location":"dev-guide/themes/#_1","text":"\u521b\u5efa\u548c\u5206\u53d1\u81ea\u5b9a\u4e49\u4e3b\u9898\u7684\u6307\u5357\u3002 Note \u5982\u679c\u60a8\u6b63\u5728\u5bfb\u627e\u73b0\u6709\u7684\u7b2c\u4e09\u65b9\u4e3b\u9898\uff0c\u5b83\u4eec\u5728MkDocs \u793e\u533a wiki \u4e2d\u5217\u51fa\u3002 \u5982\u679c\u4f60\u60f3\u5206\u4eab\u4f60\u521b\u5efa\u7684\u4e3b\u9898\uff0c\u4f60\u5e94\u8be5\u5728\u7ef4\u57fa\u4e0a\u5217\u51fa\u5b83\u3002 When creating a new theme, you can either follow the steps in this guide to create one from scratch or you can download the mkdocs-basic-theme as a basic, yet complete, theme with all the boilerplate required. You can find this base theme on GitHub . It contains detailed comments in the code to describe the different features and their usage.","title":"\u5f00\u53d1\u4e3b\u9898"},{"location":"dev-guide/themes/#_2","text":"The bare minimum required for a custom theme is a main.html Jinja2 template file which is placed in a directory that is not a child of the docs_dir . Within mkdocs.yml , set the theme.custom_dir option to the path of the directory containing main.html . The path should be relative to the configuration file. For example, given this example project layout: mkdocs.yml docs/ index.md about.md custom_theme/ main.html ... ... you would include the following settings in mkdocs.yml to use the custom theme directory: theme: name: null custom_dir: 'custom_theme/' Note Generally, when building your own custom theme, the theme. name configuration setting would be set to null . However, if the theme. custom_dir configuration value is used in combination with an existing theme, the theme. custom_dir can be used to replace only specific parts of a built-in theme. For example, with the above layout and if you set name: \"mkdocs\" then the main.html file in the theme. custom_dir would replace the file of the same name in the mkdocs theme but otherwise the mkdocs theme would remain unchanged. This is useful if you want to make small adjustments to an existing theme. For more specific information, see Customizing Your Theme . Warning A theme's configuration defined in a mkdocs_theme.yml file is not loaded from theme.custom_dir . When an entire theme exists in theme.custom_dir and theme.name is set to null , then the entire theme configuration must be defined in the theme configuration option in the mkdocs.yml file. However, when a theme is packaged up for distribution, and loaded using the theme.name configuration option, then a mkdocs_theme.yml file is required for the theme.","title":"\u521b\u5efa\u81ea\u5b9a\u4e49\u4e3b\u9898"},{"location":"dev-guide/themes/#_3","text":"The simplest main.html file is the following: <!DOCTYPE html> <html> <head> <title>{% if page.title %}{{ page.title }} - {% endif %}{{ config.site_name }}</title> </head> <body> {{ page.content }} </body> </html> The body content from each page specified in mkdocs.yml is inserted using the {{ page.content }} tag. Style-sheets and scripts can be brought into this theme as with a normal HTML file. Navbars and tables of contents can also be generated and included automatically, through the nav and toc objects, respectively. If you wish to write your own theme, it is recommended to start with one of the built-in themes and modify it accordingly. Note As MkDocs uses Jinja as its template engine, you have access to all the power of Jinja, including template inheritance . You may notice that the themes included with MkDocs make extensive use of template inheritance and blocks, allowing users to easily override small bits and pieces of the templates from the theme custom_dir . Therefore, the built-in themes are implemented in a base.html file, which main.html extends. Although not required, third party template authors are encouraged to follow a similar pattern and may want to define the same blocks as are used in the built-in themes for consistency.","title":"\u57fa\u672c\u4e3b\u9898"},{"location":"dev-guide/themes/#_4","text":"There are various files which a theme treats special in some way. Any other files are simply copied from the theme directory to the same path in the site_dir when the site it built. For example image and CSS files have no special significance and are copied as-is. Note, however, that if the user provides a file with the same path in their docs_dir , then the user's file will replace the theme file.","title":"\u4e3b\u9898\u6587\u4ef6"},{"location":"dev-guide/themes/#_5","text":"Any files with the .html extension are considered to be template files and are not copied from the theme directory or any subdirectories. Also, any files listed in static_templates are treated as templates regardless of their file extension.","title":"\u6a21\u677f\u6587\u4ef6"},{"location":"dev-guide/themes/#_6","text":"The various files required for packaging a theme are also ignored. Specifically, the mkdocs_theme.yml configuration file and any Python files.","title":"\u4e3b\u9898\u5143\u6587\u4ef6"},{"location":"dev-guide/themes/#_7","text":"Theme authors can explicitly force MkDocs to ignore files by starting a file or directory name with a dot. Any of the following files would be ignored: .ignored.txt .ignored/file.txt foo/.ignored.txt foo/.ignored/file.txt","title":"\u70b9\u6587\u4ef6"},{"location":"dev-guide/themes/#_8","text":"All documentation files are ignored. Specifically, any Markdown files (using any of the file extensions supported by MKDocs). Additionally, any README files which may exist in the theme directories are ignored.","title":"\u6587\u6863\u6587\u4ef6"},{"location":"dev-guide/themes/#_9","text":"Each template in a theme is built with a template context. These are the variables that are available to themes. The context varies depending on the template that is being built. At the moment templates are either built with the global context or with a page specific context. The global context is used for HTML pages that don't represent an individual Markdown document, for example a 404.html page or search.html.","title":"\u6a21\u677f\u53d8\u91cf"},{"location":"dev-guide/themes/#_10","text":"The following variables are available globally on any template.","title":"\u5168\u5c40\u73af\u5883"},{"location":"dev-guide/themes/#config","text":"The config variable is an instance of MkDocs' config object generated from the mkdocs.yml config file. While you can use any config option, some commonly used options include: config.site_name config.site_url config.site_author config.site_description config.theme.locale (See also Theme Configuration below) config.extra_javascript config.extra_css config.repo_url config.repo_name config.copyright config.google_analytics","title":"config"},{"location":"dev-guide/themes/#nav","text":"The nav variable is used to create the navigation for the documentation. The nav object is an iterable of navigation objects as defined by the nav configuration setting. In addition to the iterable of navigation objects , the nav object contains the following attributes:","title":"nav"},{"location":"dev-guide/themes/#mkdocs.structure.nav.Navigation.homepage","text":"The page object for the homepage of the site.","title":"homepage"},{"location":"dev-guide/themes/#mkdocs.structure.nav.Navigation.pages","text":"A flat list of all page objects contained in the navigation. This list is not necessarily a complete list of all site pages as it does not contain pages which are not included in the navigation. This list does match the list and order of pages used for all \"next page\" and \"previous page\" links. For a list of all pages, use the pages template variable.","title":"pages"},{"location":"dev-guide/themes/#_11","text":"Following is a basic usage example which outputs the first and second level navigation as a nested list. {% if nav|length>1 %} <ul> {% for nav_item in nav %} {% if nav_item.children %} <li>{{ nav_item.title }} <ul> {% for nav_item in nav_item.children %} <li class=\"{% if nav_item.active %}current{% endif %}\"> <a href=\"{{ nav_item.url|url }}\">{{ nav_item.title }}</a> </li> {% endfor %} </ul> </li> {% else %} <li class=\"{% if nav_item.active %}current{% endif %}\"> <a href=\"{{ nav_item.url|url }}\">{{ nav_item.title }}</a> </li> {% endif %} {% endfor %} </ul> {% endif %}","title":"\u5bfc\u822a\u793a\u4f8b"},{"location":"dev-guide/themes/#base_url","text":"The base_url provides a relative path to the root of the MkDocs project. While this can be used directly by prepending it to a local relative URL, it is best to use the url template filter, which is smarter about how it applies base_url .","title":"base_url"},{"location":"dev-guide/themes/#mkdocs_version","text":"Contains the current MkDocs version.","title":"mkdocs_version"},{"location":"dev-guide/themes/#build_date_utc","text":"A Python datetime object that represents the date and time the documentation was built in UTC. This is useful for showing how recently the documentation was updated.","title":"build_date_utc"},{"location":"dev-guide/themes/#pages","text":"A flat list of File objects for all pages in the project. This list can contain pages not included in the global navigation and may not match the order of pages within that navigation. The page object for each File can be accessed from file.page .","title":"pages"},{"location":"dev-guide/themes/#page","text":"In templates which are not rendered from a Markdown source file, the page variable is None . In templates which are rendered from a Markdown source file, the page variable contains a page object. The same page objects are used as page navigation objects in the global navigation and in the pages template variable. All page objects contain the following attributes:","title":"page"},{"location":"dev-guide/themes/#mkdocs.structure.pages.Page.title","text":"Contains the Title for the current page.","title":"title"},{"location":"dev-guide/themes/#mkdocs.structure.pages.Page.content","text":"The rendered Markdown as HTML, this is the contents of the documentation.","title":"content"},{"location":"dev-guide/themes/#mkdocs.structure.pages.Page.toc","text":"An iterable object representing the Table of contents for a page. Each item in the toc is an AnchorLink . The following example would display the top two levels of the Table of Contents for a page. <ul> {% for toc_item in page.toc %} <li><a href=\"{{ toc_item.url }}\">{{ toc_item.title }}</a></li> {% for toc_item in toc_item.children %} <li><a href=\"{{ toc_item.url }}\">{{ toc_item.title }}</a></li> {% endfor %} {% endfor %} </ul>","title":"toc"},{"location":"dev-guide/themes/#mkdocs.structure.pages.Page.meta","text":"A mapping of the metadata included at the top of the markdown page. In this example we define a source property above the page title: source: generics.py mixins.py # Page title Content... A template can access this metadata for the page with the meta.source variable. This could then be used to link to source files related to the documentation page. {% for filename in page.meta.source %} <a class=\"github\" href=\"https://github.com/.../{{ filename }}\"> <span class=\"label label-info\">{{ filename }}</span> </a> {% endfor %}","title":"meta"},{"location":"dev-guide/themes/#mkdocs.structure.pages.Page.url","text":"The URL of the page relative to the MkDocs site_dir . It is expected that this be used with the url filter to ensure the URL is relative to the current page. <a href=\"{{ page.url|url }}\">{{ page.title }}</a>","title":"url"},{"location":"dev-guide/themes/#mkdocs.structure.pages.Page.file","text":"The documentation File that the page is being rendered from.","title":"file"},{"location":"dev-guide/themes/#mkdocs.structure.pages.Page.abs_url","text":"The absolute URL of the page from the server root as determined by the value assigned to the site_url configuration setting. The value includes any subdirectory included in the site_url , but not the domain. base_url should not be used with this variable. For example, if site_url: https://example.com/ , then the value of page.abs_url for the page foo.md would be /foo/ . However, if site_url: https://example.com/bar/ , then the value of page.abs_url for the page foo.md would be /bar/foo/ .","title":"abs_url"},{"location":"dev-guide/themes/#mkdocs.structure.pages.Page.canonical_url","text":"The full, canonical URL to the current page as determined by the value assigned to the site_url configuration setting. The value includes the domain and any subdirectory included in the site_url . base_url should not be used with this variable.","title":"canonical_url"},{"location":"dev-guide/themes/#mkdocs.structure.pages.Page.edit_url","text":"The full URL to the source page in the source repository. Typically used to provide a link to edit the source page. base_url should not be used with this variable.","title":"edit_url"},{"location":"dev-guide/themes/#mkdocs.structure.pages.Page.is_homepage","text":"Evaluates to True for the homepage of the site and False for all other pages. This can be used in conjunction with other attributes of the page object to alter the behavior. For example, to display a different title on the homepage: {% if not page.is_homepage %}{{ page.title }} - {% endif %}{{ site_name }}","title":"is_homepage"},{"location":"dev-guide/themes/#mkdocs.structure.pages.Page.previous_page","text":"The page object for the previous page or None . The value will be None if the current page is the first item in the site navigation or if the current page is not included in the navigation at all.","title":"previous_page"},{"location":"dev-guide/themes/#mkdocs.structure.pages.Page.next_page","text":"The page object for the next page or None . The value will be None if the current page is the last item in the site navigation or if the current page is not included in the navigation at all.","title":"next_page"},{"location":"dev-guide/themes/#mkdocs.structure.pages.Page.parent","text":"The immediate parent of the page in the site navigation. None if the page is at the top level.","title":"parent"},{"location":"dev-guide/themes/#mkdocs.structure.pages.Page.children","text":"Pages do not contain children and the attribute is always None .","title":"children"},{"location":"dev-guide/themes/#mkdocs.structure.pages.Page.active","text":"When True , indicates that this page is the currently viewed page. Defaults to False .","title":"active"},{"location":"dev-guide/themes/#mkdocs.structure.pages.Page.is_section","text":"Indicates that the navigation object is a \"section\" object. Always False for page objects.","title":"is_section"},{"location":"dev-guide/themes/#mkdocs.structure.pages.Page.is_page","text":"Indicates that the navigation object is a \"page\" object. Always True for page objects.","title":"is_page"},{"location":"dev-guide/themes/#mkdocs.structure.pages.Page.is_link","text":"Indicates that the navigation object is a \"link\" object. Always False for page objects.","title":"is_link"},{"location":"dev-guide/themes/#anchorlink","text":"A single entry in the table of contents.","title":"AnchorLink"},{"location":"dev-guide/themes/#mkdocs.structure.toc.AnchorLink.title","text":"The text of the item.","title":"title"},{"location":"dev-guide/themes/#mkdocs.structure.toc.AnchorLink.url","text":"The hash fragment of a URL pointing to the item.","title":"url"},{"location":"dev-guide/themes/#mkdocs.structure.toc.AnchorLink.level","text":"The zero-based level of the item.","title":"level"},{"location":"dev-guide/themes/#mkdocs.structure.toc.AnchorLink.children","text":"An iterable of any child items.","title":"children"},{"location":"dev-guide/themes/#_12","text":"Navigation objects contained in the nav template variable may be one of section objects, page objects, and link objects. While section objects may contain nested navigation objects, pages and links do not. Page objects are the full page object as used for the current page with all of the same attributes available. Section and Link objects contain a subset of those attributes as defined below:","title":"\u5bfc\u822a\u5bf9\u8c61"},{"location":"dev-guide/themes/#section","text":"A section navigation object defines a named section in the navigation and contains a list of child navigation objects. Note that sections do not contain URLs and are not links of any kind. However, by default, MkDocs sorts index pages to the top and the first child might be used as the URL for a section if a theme chooses to do so. The following attributes are available on section objects:","title":"Section"},{"location":"dev-guide/themes/#mkdocs.structure.nav.Section.title","text":"The title of the section.","title":"title"},{"location":"dev-guide/themes/#mkdocs.structure.nav.Section.parent","text":"The immediate parent of the section or None if the section is at the top level.","title":"parent"},{"location":"dev-guide/themes/#mkdocs.structure.nav.Section.children","text":"An iterable of all child navigation objects. Children may include nested sections, pages and links.","title":"children"},{"location":"dev-guide/themes/#mkdocs.structure.nav.Section.active","text":"When True , indicates that a child page of this section is the current page and can be used to highlight the section as the currently viewed section. Defaults to False .","title":"active"},{"location":"dev-guide/themes/#mkdocs.structure.nav.Section.is_section","text":"Indicates that the navigation object is a \"section\" object. Always True for section objects.","title":"is_section"},{"location":"dev-guide/themes/#mkdocs.structure.nav.Section.is_page","text":"Indicates that the navigation object is a \"page\" object. Always False for section objects.","title":"is_page"},{"location":"dev-guide/themes/#mkdocs.structure.nav.Section.is_link","text":"Indicates that the navigation object is a \"link\" object. Always False for section objects.","title":"is_link"},{"location":"dev-guide/themes/#link","text":"A link navigation object contains a link which does not point to an internal MkDocs page. The following attributes are available on link objects:","title":"Link"},{"location":"dev-guide/themes/#mkdocs.structure.nav.Link.title","text":"The title of the link. This would generally be used as the label of the link.","title":"title"},{"location":"dev-guide/themes/#mkdocs.structure.nav.Link.url","text":"The URL that the link points to. The URL should always be an absolute URLs and should not need to have base_url prepended.","title":"url"},{"location":"dev-guide/themes/#mkdocs.structure.nav.Link.parent","text":"The immediate parent of the link. None if the link is at the top level.","title":"parent"},{"location":"dev-guide/themes/#mkdocs.structure.nav.Link.children","text":"Links do not contain children and the attribute is always None .","title":"children"},{"location":"dev-guide/themes/#mkdocs.structure.nav.Link.active","text":"External links cannot be \"active\" and the attribute is always False .","title":"active"},{"location":"dev-guide/themes/#mkdocs.structure.nav.Link.is_section","text":"Indicates that the navigation object is a \"section\" object. Always False for link objects.","title":"is_section"},{"location":"dev-guide/themes/#mkdocs.structure.nav.Link.is_page","text":"Indicates that the navigation object is a \"page\" object. Always False for link objects.","title":"is_page"},{"location":"dev-guide/themes/#mkdocs.structure.nav.Link.is_link","text":"Indicates that the navigation object is a \"link\" object. Always True for link objects.","title":"is_link"},{"location":"dev-guide/themes/#_13","text":"Additional variables can be passed to the template with the extra configuration option. This is a set of key value pairs that can make custom templates far more flexible. For example, this could be used to include the project version of all pages and a list of links related to the project. This can be achieved with the following extra configuration: extra: version: 0.13.0 links: - https://github.com/mkdocs - https://docs.readthedocs.org/en/latest/builds.html#mkdocs - https://www.mkdocs.org/ And then displayed with this HTML in the custom theme. {{ config.extra.version }} {% if config.extra.links %} <ul> {% for link in config.extra.links %} <li>{{ link }}</li> {% endfor %} </ul> {% endif %}","title":"\u989d\u5916\u7684\u4e0a\u4e0b\u6587"},{"location":"dev-guide/themes/#_14","text":"In addition to Jinja's default filters , the following custom filters are available to use in MkDocs templates:","title":"\u6a21\u677f\u8fc7\u6ee4\u5668"},{"location":"dev-guide/themes/#url","text":"Normalizes a URL. Absolute URLs are passed through unaltered. If the URL is relative and the template context includes a page object, then the URL is returned relative to the page object. Otherwise, the URL is returned with base_url prepended. <a href=\"{{ page.url|url }}\">{{ page.title }}</a>","title":"url"},{"location":"dev-guide/themes/#tojson","text":"Safety convert a Python object to a value in a JavaScript script. <script> var mkdocs_page_name = {{ page.title|tojson|safe }}; </script>","title":"tojson"},{"location":"dev-guide/themes/#_15","text":"As of MkDocs version 0.17 client side search support has been added to MkDocs via the search plugin. A theme needs to provide a few things for the plugin to work with the theme. While the search plugin is activated by default, users can disable the plugin and themes should account for this. It is recommended that theme templates wrap search specific markup with a check for the plugin: {% if 'search' in config['plugins'] %} search stuff here... {% endif %} At its most basic functionality, the search plugin will simply provide an index file which is no more than a JSON file containing the content of all pages. The theme would need to implement its own search functionality client-side. However, with a few settings and the necessary templates, the plugin can provide a complete functioning client-side search tool based on lunr.js . The following HTML needs to be added to the theme so that the provided JavaScript is able to properly load the search scripts and make relative links to the search results from the current page. <script>var base_url = '{{ base_url }}';</script> With properly configured settings, the following HTML in a template will add a full search implementation to your theme. <h1 id=\"search\">Search Results</h1> <form action=\"search.html\"> <input name=\"q\" id=\"mkdocs-search-query\" type=\"text\" > </form> <div id=\"mkdocs-search-results\"> Sorry, page not found. </div> The JavaScript in the plugin works by looking for the specific ID's used in the above HTML. The form input for the user to type the search query must be identified with id=\"mkdocs-search-query\" and the div where the results will be placed must be identified with id=\"mkdocs-search-results\" . The plugin supports the following options being set in the theme's configuration file , mkdocs_theme.yml :","title":"\u641c\u7d22\u548c\u4e3b\u9898"},{"location":"dev-guide/themes/#include_search_page","text":"Determines whether the search plugin expects the theme to provide a dedicated search page via a template located at search/search.html . When include_search_page is set to true , the search template will be built and available at search/search.html . This method is used by the readthedocs theme. When include_search_page is set to false or not defined, it is expected that the theme provide some other mechanisms for displaying search results. For example, the mkdocs theme displays results on any page via a modal.","title":"include_search_page"},{"location":"dev-guide/themes/#search_index_only","text":"Determines whether the search plugin should only generate a search index or a complete search solution. When search_index_only is set to false , then the search plugin modifies the Jinja environment by adding its own templates directory (with a lower precedence than the theme) and adds its scripts to the extra_javascript config setting. When search_index_only is set to true or not defined, the search plugin makes no modifications to the Jinja environment. A complete solution using the provided index file is the responsibility of the theme. The search index is written to a JSON file at search/search_index.json in the site_dir . The JSON object contained within the file may contain up to three objects. { config: {...}, docs: [...], index: {...} } If present, the config object contains the key/value pairs of config options defined for the plugin in the user's mkdocs.yml config file under plugings.search . The config object was new in MkDocs version 1.0 . The docs object contains a list of document objects. Each document object is made up of a location (URL), a title , and text which can be used to create a search index and/or display search results. If present, the index object contains a pre-built index which offers performance improvements for larger sites. Note that the pre-built index is only created if the user explicitly enables the prebuild_index config option. Themes should expect the index to not be present, but can choose to use the index when it is available. The index object was new in MkDocs version 1.0 .","title":"search_index_only"},{"location":"dev-guide/themes/#_16","text":"MkDocs makes use of Python packaging to distribute themes. This comes with a few requirements. To see an example of a package containing one theme, see the MkDocs Bootstrap theme and to see a package that contains many themes, see the MkDocs Bootswatch theme . Note It is not strictly necessary to package a theme, as the entire theme can be contained in the custom_dir . If you have created a \"one-off theme,\" that should be sufficient. However, if you intend to distribute your theme for others to use, packaging the theme has some advantages. By packaging your theme, your users can more easily install it, they can rely on a default configuration being defined, and they can then take advantage of the custom_dir to make tweaks to your theme to better suit their needs.","title":"\u5305\u88c5\u4e3b\u9898"},{"location":"dev-guide/themes/#_17","text":"The following layout is recommended for themes. Two files at the top level directory called MANIFEST.in and setup.py beside the theme directory which contains an empty __init__.py file, a theme configuration file ( mkdocs_theme.yml ), and your template and media files. . |-- MANIFEST.in |-- theme_name | |-- __init__.py | |-- mkdocs_theme.yml | |-- main.html | |-- styles.css `-- setup.py The MANIFEST.in file should contain the following contents but with theme_name updated and any extra file extensions added to the include. recursive-include theme_name *.ico *.js *.css *.png *.html *.eot *.svg *.ttf *.woff recursive-exclude * __pycache__ recursive-exclude * *.py[co] The setup.py should include the following text with the modifications described below. from setuptools import setup, find_packages VERSION = '0.0.1' setup( name=\"mkdocs-themename\", version=VERSION, url='', license='', description='', author='', author_email='', packages=find_packages(), include_package_data=True, entry_points={ 'mkdocs.themes': [ 'themename = theme_name', ] }, zip_safe=False ) Fill in the URL, license, description, author and author email address. The name should follow the convention mkdocs-themename (like mkdocs-bootstrap and mkdocs-bootswatch ), starting with MkDocs, using hyphens to separate words and including the name of your theme. Most of the rest of the file can be left unedited. The last section we need to change is the entry_points. This is how MkDocs finds the theme(s) you are including in the package. The name on the left is the one that users will use in their mkdocs.yml and the one on the right is the directory containing your theme files. The directory you created at the start of this section with the main.html file should contain all of the other theme files. The minimum requirement is that it includes a main.html for the theme. It must also include a __init__.py file which should be empty, this file tells Python that the directory is a package.","title":"\u5305\u88c5\u5e03\u5c40"},{"location":"dev-guide/themes/#_18","text":"A packaged theme is required to include a configuration file named mkdocs_theme.yml which is placed in the root of your template files. The file should contain default configuration options for the theme. However, if the theme offers no configuration options, the file is still required and can be left blank. A theme which is not packaged does not need a mkdocs_theme.yml file as that file is not loaded from theme.custom_dir . The theme author is free to define any arbitrary options deemed necessary and those options will be made available in the templates to control behavior. For example, a theme might want to make a sidebar optional and include the following in the mkdocs_theme.yml file: show_sidebar: true Then in a template, that config option could be referenced: {% if config.theme.show_sidebar %} <div id=\"sidebar\">...</div> {% endif %} And the user could override the default in their project's mkdocs.yml config file: theme: name: themename show_sidebar: false In addition to arbitrary options defined by the theme, MkDocs defines a few special options which alters its behavior: Block","title":"\u4e3b\u9898\u914d\u7f6e"},{"location":"dev-guide/themes/#locale","text":"This option mirrors the theme config option of the same name. If this value is not defined in the mkdocs_theme.yml file and the user does not set it in mkdocs.yml then it will default to en (English). The value is expected to match the language used in the text provided by the theme (such a \"next\" and \"previous\" links) and should be used as the value of the <html> tag's lang attribute. See Supporting theme localization/ translation for more information. Note that during configuration validation, the provided string is converted to a Locale object. The object contains Locale.language and Locale.territory attributes and will resolve as a string from within a template. Therefore, the following will work fine: <html lang=\"{ config.theme.locale }\"> If the locale was set to fr_CA (Canadian French), then the above template would render as: <html lang=\"fr_CA\"> If you did not want the territory attribute to be included, then reference the language attribute directly: <html lang=\"{ config.theme.locale.language }\"> That would render as: <html lang=\"fr\">","title":"locale"},{"location":"dev-guide/themes/#static_templates","text":"This option mirrors the theme config option of the same name and allows some defaults to be set by the theme. Note that while the user can add templates to this list, the user cannot remove templates included in the theme's config.","title":"static_templates"},{"location":"dev-guide/themes/#extends","text":"Defines a parent theme that this theme inherits from. The value should be the string name of the parent theme. Normal Jinja inheritance rules apply. Plugins may also define some options which allow the theme to inform a plugin about which set of plugin options it expects. See the documentation for any plugins you may wish to support in your theme.","title":"extends"},{"location":"dev-guide/themes/#_19","text":"With the above changes, your theme should now be ready to install. This can be done with pip, using pip install . if you are still in the same directory as the setup.py. Most Python packages, including MkDocs, are distributed on PyPI. To do this, you should run the following command. python setup.py register If you don't have an account setup, you should be prompted to create one. For a much more detailed guide, see the official Python packaging documentation for Packaging and Distributing Projects .","title":"\u5206\u53d1\u4e3b\u9898"},{"location":"dev-guide/themes/#_20","text":"While the built-in themes provide support for localization/translation of templates, custom themes and third-party themes may choose not to. Regardless, the locale setting of the theme configuration option is always present and is relied upon by other parts of the system. Therefore, it is recommended that all third-party themes use the same setting for designating a language regardless of the system they use for translation. In that way, users will experience consistent behavior regardless of the theme they may choose. The method for managing translations is up to the developers of a theme. However, if a theme developer chooses to use the same mechanisms used by the built-in themes, the sections below outline how to enable and make use of the same commands utilized by MkDocs.","title":"\u652f\u6301\u4e3b\u9898\u672c\u5730\u5316/\u7ffb\u8bd1"},{"location":"dev-guide/themes/#_21","text":"Warning As pybabel is not installed by default and most users will not have pybabel installed, theme developers and/or translators should make sure to have installed the necessary dependencies (using pip install mkdocs[i18n] ) in order for the commands to be available for use. The translation commands should be called from the root of your theme's working tree. For an overview of the workflow used by MkDocs to translate the built-in themes, see the appropriate section of the Contributing Guide and the Translation Guide .","title":"\u4f7f\u7528\u672c\u5730\u5316/\u7ffb\u8bd1\u547d\u4ee4"},{"location":"dev-guide/themes/#_22","text":"Note If your theme inherits from an existing theme which already provides translation catalogs, your theme's translations will be merged with the parent theme's translations during a MkDocs build. This means that you only need to concentrate on the added translations. Yet, you will still benefit from the translations of the parent theme. At the same time, you may override any of parent theme's translations! Let's suppose that you're working on your own fork of the mkdocs-basic-theme and want to add translations to it. Edit the templates by wrapping text in your HTML sources with {% trans %} and {% endtrans %} as follows: --- a/basic_theme/base.html +++ b/basic_theme/base.html @@ -88,7 +88,7 @@ <body> - <h1>This is an example theme for MkDocs.</h1> + <h1>{% trans %}This is an example theme for MkDocs.{% endtrans %}</h1> <p> It is designed to be read by looking at the theme HTML which is heavily Then you would follow the Translation Guide as usual to get your translations running.","title":"\u793a\u4f8b\u81ea\u5b9a\u4e49\u4e3b\u9898\u672c\u5730\u5316/\u7ffb\u8bd1\u5de5\u4f5c\u6d41\u7a0b"},{"location":"dev-guide/themes/#_23","text":"While the Portable Object Template ( pot ) file created by the extract_messages command and the Portable Object ( po ) files created by the init_catalog and update_catalog commands are useful for creating and editing translations, they are not used by MkDocs directly and do not need to be included in a packaged release of a theme. When MkDocs builds a site with translations, it only makes use of the binary mo files(s) for the specified locale. Therefore, when [packaging a theme], make sure to include it in the \"wheels\", using a MANIFEST.in file or otherwise. Then, before building your Python package, you will want to ensure that the binary mo file for each locale is up-to-date by running the compile_catalog command for each locale. MkDocs expects the binary mo files to be located at locales/<locale>/LC_MESSAGES/messages.mo , which the compile_catalog command automatically does for you. See [Testing theme translations] for details. Note As outlined in our Translation Guide , the MkDocs project has chosen to include the pot and po files in our code repository, but not the mo files. This requires us to always run compile_catalog before packaging a new release regardless of whether any changes were made to a translation or not. However, you may chose an alternate workflow for your theme. At a minimum, you need to ensure that up-to-date mo files are included at the correct location in each release. However, you may use a different process for generating those mo files if you chose to do so.","title":"\u5e26\u6709\u4e3b\u9898\u7684\u5305\u88c5\u7ffb\u8bd1"},{"location":"dev-guide/translations/","text":"\u7ffb\u8bd1 \u00b6 \u4e3b\u9898\u672c\u5730\u5316\u6307\u5357\u3002 MkDocs\u4e2d\u5305\u542b\u7684 \u5185\u7f6e\u4e3b\u9898 \u63d0\u4f9b\u4e86\u7ffb\u8bd1\u652f\u6301\u3002 \u8fd9\u662f\u4e00\u4e2a\u7ffb\u8bd1\u6307\u5357\uff0c\u5b83\u8bb0\u5f55\u4e86\u8d21\u732e\u65b0\u7ffb\u8bd1\u548c/\u6216\u66f4\u65b0\u73b0\u6709\u7ffb\u8bd1\u7684\u8fc7\u7a0b\u3002 \u6709\u5173\u4fee\u6539\u73b0\u6709\u4e3b\u9898\u7684\u6307\u5bfc\uff0c\u8bf7\u53c2\u9605 \u8d21\u732e\u6307\u5357 \u3002 \u8981\u542f\u7528\u7279\u5b9a\u7684\u7ffb\u8bd1\uff0c\u8bf7\u53c2\u9605 \u7528\u6237\u6307\u5357 \u4e2d\u5173\u4e8e\u60a8\u6b63\u5728\u4f7f\u7528\u7684\u7279\u5b9a\u4e3b\u9898\u7684\u6587\u6863\u3002 \u6709\u5173\u7b2c\u4e09\u65b9\u4e3b\u9898\u7684\u7ffb\u8bd1\uff0c\u8bf7\u53c2\u9605\u8fd9\u4e9b\u4e3b\u9898\u7684\u6587\u6863\u3002 \u7b2c\u4e09\u65b9\u4e3b\u9898\u8981\u60f3\u4f7f\u7528MkDocs\u7684\u7ffb\u8bd1\u5de5\u5177\u548c\u65b9\u6cd5\uff0c\u5fc5\u987b\u6b63\u786e\u914d\u7f6e\u8be5\u4e3b\u9898\u624d\u80fd\u4f7f\u7528\u8fd9\u4e9b\u5de5\u5177\u3002 Note \u7ffb\u8bd1\u4ec5\u9002\u7528\u4e8e\u4e3b\u9898\u6a21\u677f\u4e2d\u5305\u542b\u7684\u6587\u672c\uff0c\u4f8b\u5982 \"next\" \u548c \"previous\" \u94fe\u63a5\u3002 \u9875\u9762\u7684Markdown\u5185\u5bb9\u4e0d\u4f1a\u88ab\u7ffb\u8bd1\u3002 \u5982\u679c\u60a8\u5e0c\u671b\u521b\u5efa\u591a\u8bed\u8a00\u6587\u6863\uff0c\u5219\u9700\u8981\u5c06\u4e3b\u9898\u672c\u5730\u5316\u4e0e\u7b2c\u4e09\u65b9\u56fd\u9645\u5316/\u672c\u5730\u5316\u63d2\u4ef6\u7ed3\u5408\u8d77\u6765\u3002 \u672c\u5730\u5316\u5de5\u5177\u5148\u51b3\u6761\u4ef6 \u00b6 Theme localization makes use of the babel project for generation and compilation of localization files. You will need to be working from the git working tree on your local machine to make use of the translation commands. See the Contributing Guide for direction on how to Install for Development and Submit a Pull Request . The instructions in this document assume that you are working from a properly configured development environment. Make sure translation requirements are installed in your environment: pip install mkdocs[i18n] \u5c06\u8bed\u8a00\u7ffb\u8bd1\u6dfb\u52a0\u5230\u4e3b\u9898 \u00b6 If your favorite language locale is not yet supported on one (or both) of the built-in themes ( mkdocs and readthedocs ), you can easily contribute a translation by following the steps below. Here is a quick summary of what you'll need to do: Initialize new localization catalogs for your language (if a translation for your locale already exists, follow the instructions for updating theme localization files instead). Add a translation for every text placeholder in the localized catalogs. Locally serve and test the translated themes for your language. Update the documentation about supported translations for each translated theme. Contribute your translation through a Pull Request. Note Translation locales are usually identified using the ISO-639-1 (2-letter) language codes. While territory/region/county codes are also supported, location specific translations should only be added after the general language translation has been completed and the regional dialect requires use of a term which differs from the general language translation. \u521d\u59cb\u5316\u672c\u5730\u5316\u76ee\u5f55 \u00b6 The templates for each theme contain text placeholders that have been extracted into a Portable Object Template ( messages.pot ) file, which is present in each theme's folder. Initializing a catalog consists of running a command which will create a directory structure for your desired language and prepare a Portable Object ( messages.po ) file derived from the pot file of the theme. Use the init_catalog command on each theme's directory and provide the appropriate language code ( -l <language> ). For example, to add a translation for the Spanish es language to the mkdocs theme, run the following command: pybabel init --input-file mkdocs/themes/mkdocs/messages.pot --output-dir mkdocs/themes/mkdocs/locales --locale es The above command will create the following file structure: mkdocs/themes/mkdocs/locales \u251c\u2500\u2500 es \u2502 \u2514\u2500\u2500 LC_MESSAGES \u2502 \u2514\u2500\u2500 messages.po You can now move on to the next step and add a translation for every text placeholder in the localized catalog. \u66f4\u65b0\u4e3b\u9898\u7ffb\u8bd1 \u00b6 If a theme's messages.pot template file has been updated since the messages.po was last updated for your locale, follow the steps below to update the theme's messages.po file: Update the theme's translation catalog to refresh the translatable text placeholders of each theme. Translate the newly added translatable text placeholders on every messages.po catalog file language you can. Locally serve and test the translated themes for your language. Contribute your translation through a Pull Request. Updating the translation catalogs \u00b6 This step should be completed after a theme template have been updated for each language that you are comfortable contributing a translation for. To update the fr translation catalog of the mkdocs theme, use the following command: pybabel update --ignore-obsolete --update-header-comment --input-file mkdocs/themes/mkdocs/messages.pot --output-dir mkdocs/themes/mkdocs/locales --locale fr You can now move on to the next step and add a translation for every updated text placeholder in the localized catalog. Translating the MkDocs themes \u00b6 Now that your localized messages.po files are ready, all you need to do is add a translation in each msgstr item for each msgid item in the file. msgid \"Next\" msgstr \"Siguiente\" Warning Do not modify the msgid as it is common to all translations. Just add its translation in the msgstr item. Once you have finished translating all of the terms listed in the po file, you'll want to test your localized theme . Testing theme translations \u00b6 To test a theme with translations, you need to first compile the messages.po files of your theme into messages.mo files. The following command will compile the es translation for the mkdocs theme. pybabel compile --statistics --directory mkdocs/themes/mkdocs/locales --locale es The above command results in the following file structure: mkdocs/themes/mkdocs/locales \u251c\u2500\u2500 es \u2502 \u2514\u2500\u2500 LC_MESSAGES \u2502 \u251c\u2500\u2500 messages.mo \u2502 \u2514\u2500\u2500 messages.po Note that the compiled messages.mo file was generated based on the messages.po file that you just edited. Then modify the mkdocs.yml file at the root of the project to test the new and/or updated locale: theme: name: mkdocs locale: es Finally, run mkdocs serve to check out your new localized version of the theme. Note The build and release process takes care of compiling and distributing all locales to end users so you only have to worry about contributing the actual text translation messages.po files (the rest is ignored by git). After you have finished testing your work, be sure to undo the change to the locale setting in the mkdocs.yml file before submitting your changes. \u66f4\u65b0\u4e3b\u9898\u6587\u6863 \u00b6 Update the lists of supported translations for each translated theme located at Choosing your theme ( docs/user-guide/choosing-your-theme.md ), in their locale options. \u8d21\u732e\u7ffb\u8bd1 \u00b6 It is now time for you to contribute your nice work to the project. Thank you!","title":"\u7ffb\u8bd1"},{"location":"dev-guide/translations/#_1","text":"\u4e3b\u9898\u672c\u5730\u5316\u6307\u5357\u3002 MkDocs\u4e2d\u5305\u542b\u7684 \u5185\u7f6e\u4e3b\u9898 \u63d0\u4f9b\u4e86\u7ffb\u8bd1\u652f\u6301\u3002 \u8fd9\u662f\u4e00\u4e2a\u7ffb\u8bd1\u6307\u5357\uff0c\u5b83\u8bb0\u5f55\u4e86\u8d21\u732e\u65b0\u7ffb\u8bd1\u548c/\u6216\u66f4\u65b0\u73b0\u6709\u7ffb\u8bd1\u7684\u8fc7\u7a0b\u3002 \u6709\u5173\u4fee\u6539\u73b0\u6709\u4e3b\u9898\u7684\u6307\u5bfc\uff0c\u8bf7\u53c2\u9605 \u8d21\u732e\u6307\u5357 \u3002 \u8981\u542f\u7528\u7279\u5b9a\u7684\u7ffb\u8bd1\uff0c\u8bf7\u53c2\u9605 \u7528\u6237\u6307\u5357 \u4e2d\u5173\u4e8e\u60a8\u6b63\u5728\u4f7f\u7528\u7684\u7279\u5b9a\u4e3b\u9898\u7684\u6587\u6863\u3002 \u6709\u5173\u7b2c\u4e09\u65b9\u4e3b\u9898\u7684\u7ffb\u8bd1\uff0c\u8bf7\u53c2\u9605\u8fd9\u4e9b\u4e3b\u9898\u7684\u6587\u6863\u3002 \u7b2c\u4e09\u65b9\u4e3b\u9898\u8981\u60f3\u4f7f\u7528MkDocs\u7684\u7ffb\u8bd1\u5de5\u5177\u548c\u65b9\u6cd5\uff0c\u5fc5\u987b\u6b63\u786e\u914d\u7f6e\u8be5\u4e3b\u9898\u624d\u80fd\u4f7f\u7528\u8fd9\u4e9b\u5de5\u5177\u3002 Note \u7ffb\u8bd1\u4ec5\u9002\u7528\u4e8e\u4e3b\u9898\u6a21\u677f\u4e2d\u5305\u542b\u7684\u6587\u672c\uff0c\u4f8b\u5982 \"next\" \u548c \"previous\" \u94fe\u63a5\u3002 \u9875\u9762\u7684Markdown\u5185\u5bb9\u4e0d\u4f1a\u88ab\u7ffb\u8bd1\u3002 \u5982\u679c\u60a8\u5e0c\u671b\u521b\u5efa\u591a\u8bed\u8a00\u6587\u6863\uff0c\u5219\u9700\u8981\u5c06\u4e3b\u9898\u672c\u5730\u5316\u4e0e\u7b2c\u4e09\u65b9\u56fd\u9645\u5316/\u672c\u5730\u5316\u63d2\u4ef6\u7ed3\u5408\u8d77\u6765\u3002","title":"\u7ffb\u8bd1"},{"location":"dev-guide/translations/#_2","text":"Theme localization makes use of the babel project for generation and compilation of localization files. You will need to be working from the git working tree on your local machine to make use of the translation commands. See the Contributing Guide for direction on how to Install for Development and Submit a Pull Request . The instructions in this document assume that you are working from a properly configured development environment. Make sure translation requirements are installed in your environment: pip install mkdocs[i18n]","title":"\u672c\u5730\u5316\u5de5\u5177\u5148\u51b3\u6761\u4ef6"},{"location":"dev-guide/translations/#_3","text":"If your favorite language locale is not yet supported on one (or both) of the built-in themes ( mkdocs and readthedocs ), you can easily contribute a translation by following the steps below. Here is a quick summary of what you'll need to do: Initialize new localization catalogs for your language (if a translation for your locale already exists, follow the instructions for updating theme localization files instead). Add a translation for every text placeholder in the localized catalogs. Locally serve and test the translated themes for your language. Update the documentation about supported translations for each translated theme. Contribute your translation through a Pull Request. Note Translation locales are usually identified using the ISO-639-1 (2-letter) language codes. While territory/region/county codes are also supported, location specific translations should only be added after the general language translation has been completed and the regional dialect requires use of a term which differs from the general language translation.","title":"\u5c06\u8bed\u8a00\u7ffb\u8bd1\u6dfb\u52a0\u5230\u4e3b\u9898"},{"location":"dev-guide/translations/#_4","text":"The templates for each theme contain text placeholders that have been extracted into a Portable Object Template ( messages.pot ) file, which is present in each theme's folder. Initializing a catalog consists of running a command which will create a directory structure for your desired language and prepare a Portable Object ( messages.po ) file derived from the pot file of the theme. Use the init_catalog command on each theme's directory and provide the appropriate language code ( -l <language> ). For example, to add a translation for the Spanish es language to the mkdocs theme, run the following command: pybabel init --input-file mkdocs/themes/mkdocs/messages.pot --output-dir mkdocs/themes/mkdocs/locales --locale es The above command will create the following file structure: mkdocs/themes/mkdocs/locales \u251c\u2500\u2500 es \u2502 \u2514\u2500\u2500 LC_MESSAGES \u2502 \u2514\u2500\u2500 messages.po You can now move on to the next step and add a translation for every text placeholder in the localized catalog.","title":"\u521d\u59cb\u5316\u672c\u5730\u5316\u76ee\u5f55"},{"location":"dev-guide/translations/#_5","text":"If a theme's messages.pot template file has been updated since the messages.po was last updated for your locale, follow the steps below to update the theme's messages.po file: Update the theme's translation catalog to refresh the translatable text placeholders of each theme. Translate the newly added translatable text placeholders on every messages.po catalog file language you can. Locally serve and test the translated themes for your language. Contribute your translation through a Pull Request.","title":"\u66f4\u65b0\u4e3b\u9898\u7ffb\u8bd1"},{"location":"dev-guide/translations/#updating-the-translation-catalogs","text":"This step should be completed after a theme template have been updated for each language that you are comfortable contributing a translation for. To update the fr translation catalog of the mkdocs theme, use the following command: pybabel update --ignore-obsolete --update-header-comment --input-file mkdocs/themes/mkdocs/messages.pot --output-dir mkdocs/themes/mkdocs/locales --locale fr You can now move on to the next step and add a translation for every updated text placeholder in the localized catalog.","title":"Updating the translation catalogs"},{"location":"dev-guide/translations/#translating-the-mkdocs-themes","text":"Now that your localized messages.po files are ready, all you need to do is add a translation in each msgstr item for each msgid item in the file. msgid \"Next\" msgstr \"Siguiente\" Warning Do not modify the msgid as it is common to all translations. Just add its translation in the msgstr item. Once you have finished translating all of the terms listed in the po file, you'll want to test your localized theme .","title":"Translating the MkDocs themes"},{"location":"dev-guide/translations/#testing-theme-translations","text":"To test a theme with translations, you need to first compile the messages.po files of your theme into messages.mo files. The following command will compile the es translation for the mkdocs theme. pybabel compile --statistics --directory mkdocs/themes/mkdocs/locales --locale es The above command results in the following file structure: mkdocs/themes/mkdocs/locales \u251c\u2500\u2500 es \u2502 \u2514\u2500\u2500 LC_MESSAGES \u2502 \u251c\u2500\u2500 messages.mo \u2502 \u2514\u2500\u2500 messages.po Note that the compiled messages.mo file was generated based on the messages.po file that you just edited. Then modify the mkdocs.yml file at the root of the project to test the new and/or updated locale: theme: name: mkdocs locale: es Finally, run mkdocs serve to check out your new localized version of the theme. Note The build and release process takes care of compiling and distributing all locales to end users so you only have to worry about contributing the actual text translation messages.po files (the rest is ignored by git). After you have finished testing your work, be sure to undo the change to the locale setting in the mkdocs.yml file before submitting your changes.","title":"Testing theme translations"},{"location":"dev-guide/translations/#_6","text":"Update the lists of supported translations for each translated theme located at Choosing your theme ( docs/user-guide/choosing-your-theme.md ), in their locale options.","title":"\u66f4\u65b0\u4e3b\u9898\u6587\u6863"},{"location":"dev-guide/translations/#_7","text":"It is now time for you to contribute your nice work to the project. Thank you!","title":"\u8d21\u732e\u7ffb\u8bd1"},{"location":"plugins/","text":"\u7b2c\u4e09\u65b9\u63d2\u4ef6 \u00b6 \u672c\u9875\u5305\u542b\u4e86\u4e00\u4e9b\u7b2c\u4e09\u65b9MkDocs\u63d2\u4ef6\u7684\u5217\u8868\uff0c\u6309\u4ee5\u4e0b\u7c7b\u522b\u7ec4\u7ec7: \u9605\u8bfb \u4f7f\u7528\u63d2\u4ef6 \u5982\u679c\u4f60\u53d1\u73b0\u4e00\u4e2a\u63d2\u4ef6\u6ca1\u6709\u5728\u8fd9\u91cc\u5217\u51fa\uff0c \u8d21\u732e\u5230\u8fd9\u4e2a\u9875\u9762 \u67e5\u770b \u9644\u52a0\u8d44\u6e90 \u67e5\u770b\u66f4\u591a\u63d2\u4ef6 \u8fd9\u4e2a\u5217\u8868\u4e5f\u53ef\u4ee5\u4f5c\u4e3a MkDocs\u7684\u6700\u4f73\u5217\u8868 \u2699\ufe0f \u7ad9\u70b9\u7ba1\u7406 \ud83d\udcac \u56fd\u9645\u5316\u548c\u672c\u5730\u5316 \ud83e\udded \u5bfc\u822a\u548c\u9875\u9762\u5efa\u8bbe \ud83d\udd0d \u641c\u7d22\u5185\u5bb9 \ud83d\udd17 \u94fe\u63a5\u548c\u53c2\u8003 \ud83d\udd8c\ufe0f HTML\u5904\u7406\u548cCSS\u6837\u5f0f \ud83d\udcdd \u4ee3\u7801\u6267\u884c\uff0c\u53d8\u91cf\u548c\u6a21\u677f \ud83d\udcc1 \u91cd\u590d\u4f7f\u7528\u5185\u5bb9\uff0c\u6458\u8981\u548c\u5305\u62ec Git\u5b58\u50a8\u5e93\u548c\u4fe1\u606f \ud83d\udcbb API\u6587\u6863\u6784\u5efa \ud83d\udcdc \u4f5c\u8005 \ud83d\udcc4 PDF & \u7ad9\u70b9\u8f6c\u6362 \ud83d\udcd6 \u5199\u535a\u5ba2 \ud83c\udf10 \u7f51\u9875\u670d\u52a1 \ud83d\udcda \u5f15\u6587\u4e0e\u4e66\u76ee \ud83d\uddbc\ufe0f \u56fe\u50cf\uff0c\u8868\u683c\uff0c\u56fe\u8868\u548c\u56fe\u5f62 \u2795 \u5176\u4ed6 \u2714\ufe0f \u793a\u4f8b\u548c\u81ea\u5b9a\u4e49\u63d2\u4ef6 \u989d\u5916\u7684\u8d44\u6e90 \u8d21\u732e\u8fd9\u4e00\u9875\u9762","title":"\u7b2c\u4e09\u65b9\u63d2\u4ef6"},{"location":"plugins/#_1","text":"\u672c\u9875\u5305\u542b\u4e86\u4e00\u4e9b\u7b2c\u4e09\u65b9MkDocs\u63d2\u4ef6\u7684\u5217\u8868\uff0c\u6309\u4ee5\u4e0b\u7c7b\u522b\u7ec4\u7ec7: \u9605\u8bfb \u4f7f\u7528\u63d2\u4ef6 \u5982\u679c\u4f60\u53d1\u73b0\u4e00\u4e2a\u63d2\u4ef6\u6ca1\u6709\u5728\u8fd9\u91cc\u5217\u51fa\uff0c \u8d21\u732e\u5230\u8fd9\u4e2a\u9875\u9762 \u67e5\u770b \u9644\u52a0\u8d44\u6e90 \u67e5\u770b\u66f4\u591a\u63d2\u4ef6 \u8fd9\u4e2a\u5217\u8868\u4e5f\u53ef\u4ee5\u4f5c\u4e3a MkDocs\u7684\u6700\u4f73\u5217\u8868 \u2699\ufe0f \u7ad9\u70b9\u7ba1\u7406 \ud83d\udcac \u56fd\u9645\u5316\u548c\u672c\u5730\u5316 \ud83e\udded \u5bfc\u822a\u548c\u9875\u9762\u5efa\u8bbe \ud83d\udd0d \u641c\u7d22\u5185\u5bb9 \ud83d\udd17 \u94fe\u63a5\u548c\u53c2\u8003 \ud83d\udd8c\ufe0f HTML\u5904\u7406\u548cCSS\u6837\u5f0f \ud83d\udcdd \u4ee3\u7801\u6267\u884c\uff0c\u53d8\u91cf\u548c\u6a21\u677f \ud83d\udcc1 \u91cd\u590d\u4f7f\u7528\u5185\u5bb9\uff0c\u6458\u8981\u548c\u5305\u62ec Git\u5b58\u50a8\u5e93\u548c\u4fe1\u606f \ud83d\udcbb API\u6587\u6863\u6784\u5efa \ud83d\udcdc \u4f5c\u8005 \ud83d\udcc4 PDF & \u7ad9\u70b9\u8f6c\u6362 \ud83d\udcd6 \u5199\u535a\u5ba2 \ud83c\udf10 \u7f51\u9875\u670d\u52a1 \ud83d\udcda \u5f15\u6587\u4e0e\u4e66\u76ee \ud83d\uddbc\ufe0f \u56fe\u50cf\uff0c\u8868\u683c\uff0c\u56fe\u8868\u548c\u56fe\u5f62 \u2795 \u5176\u4ed6 \u2714\ufe0f \u793a\u4f8b\u548c\u81ea\u5b9a\u4e49\u63d2\u4ef6 \u989d\u5916\u7684\u8d44\u6e90 \u8d21\u732e\u8fd9\u4e00\u9875\u9762","title":"\u7b2c\u4e09\u65b9\u63d2\u4ef6"},{"location":"plugins/additional-resources/","text":"Additional resources \u00b6 Find more MkDocs plugins on Wheelodex Find more MkDocs plugins on Github (If you discover an interesting plugin there that isn\u2019t listed here, please add it to this page.) More plugins (links only) \u00b6 This section contains only simple links to some plugin locations. Feel free to turn these links into proper entries on this page. https://github.com/Netflix/atlas-docs/blob/master/plugins/mkdocs-atlas-formatting-plugin/README.md","title":"\u989d\u5916\u7684\u8d44\u6e90"},{"location":"plugins/additional-resources/#additional-resources","text":"Find more MkDocs plugins on Wheelodex Find more MkDocs plugins on Github (If you discover an interesting plugin there that isn\u2019t listed here, please add it to this page.)","title":"Additional resources"},{"location":"plugins/additional-resources/#more-plugins-links-only","text":"This section contains only simple links to some plugin locations. Feel free to turn these links into proper entries on this page. https://github.com/Netflix/atlas-docs/blob/master/plugins/mkdocs-atlas-formatting-plugin/README.md","title":"More plugins (links only)"},{"location":"plugins/api-documentation-building/","text":"API documentation building \u00b6 automacdoc \u00b6 Automatically generates API docs from your Python 3 project. author: Alexandre Kempf AlexandreKempf links: Github | Docs installation: pip install git+https://github.com/AlexandreKempf/automacdoc/ mkdocstrings \u00b6 Automatic documentation from sources, for MkDocs. Features Language agnostic: mkdocstrings is written in Python but is language-agnostic. It means you can use it for any language, as long as you implement a handler for it. Currently, we have a Python handler and a Crystal handler . Multiple themes support: each handler can offer multiple themes. Currently, we support the Material theme and offer basic support for the mkdocs and readthedocs themes. Cross-references to other objects: mkdocstrings makes it possible to reference other headings from your Markdown files with the classic Markdown syntax: [identifier][] or [title][identifier] . See autorefs . Inline injection in Markdown: instead of generating Markdown files, mkdocstrings allows you to inject documentation anywhere in your Markdown contents. The syntax is simple: identifier followed by a 4-spaces indented YAML configuration block. ...and more! author: Timoth\u00e9e Mazzucotelli pawamoy links: Pypi | Github | Docs installation: pip install mkdocstrings MkAutoDoc \u00b6 A Markdown extension which adds autodoc style support, for use with MkDocs. author: Tom Christie tomchristie links: PyPI GitHub installation: pip install mkautodoc doxygen \u00b6 Allows to generate Doxygen documentation as part of the build process. Doxygen is run (post-build) for each entry in the packages configuration entry (a list of mappings) and the html output moved to a subdirectory of site_dir , with the same name as the entry\u2019s key. author: Pieter David pieterdavid links: Github | Docs installation: pip install git+https://github.com/pieterdavid/mkdocs-doxygen-plugin dodoc \u00b6 An low-effort attempt to create autodocumentation of class and function definitions/docstrings. author: Mark Connelly plasmatech8 links: Github | Docs installation: pip install git+https://github.com/plasmatech8/Python-Mkdocs-Autodoc-Plugin inari \u00b6 Write docstrings in Markdown. author: T.Kameyama tkamenoko links: Pypi | Github | Docs installation: pip install inari mktheapidocs \u00b6 Generate markdown API documentation from Numpydoc docstrings. author: Jonathan Gray greenape links: Pypi | Github | Docs installation: pip install mktheapidocs MkApi \u00b6 Generate API documentation from Markdown docstrings. MkApi supports two styles of docstrings: Google and NumPy . Features of MkApi are: Section syntax : Supported sections are Args , Arguments , Attributes , Example[s] , Note[s] , Parameters , Raises , Returns , References , Todo , Warning[s] , Warns , and Yields . Type annotation : If you write your function such as def func(x: int) -> str: , you don't need write type(s) in Args , Parameters , Returns , or Yields section again. You can overwrite the type annotation in the corresponding docstring. Object type inspection : MkApi plugin creates CLASS , DATACLASS , FUNCTION , GENERATOR , or METHOD prefix for each object. Attribute inspection : If you write attributes with description as comment in __init__() , Attributes section is automatically created. Docstring inheritance : Docstring of a subclass can inherit parameters and attributes description from its superclasses. Page mode : Comprehensive API documentation for your project, in which objects are linked to each other by type annotation. author: Daizu daizutabi links: PyPI | Github | Docs installation: pip install mkapi","title":"\ud83d\udcbb API\u6587\u6863\u6784\u5efa"},{"location":"plugins/api-documentation-building/#api-documentation-building","text":"","title":"API documentation building"},{"location":"plugins/api-documentation-building/#automacdoc","text":"Automatically generates API docs from your Python 3 project. author: Alexandre Kempf AlexandreKempf links: Github | Docs installation: pip install git+https://github.com/AlexandreKempf/automacdoc/","title":"automacdoc"},{"location":"plugins/api-documentation-building/#mkdocstrings","text":"Automatic documentation from sources, for MkDocs. Features Language agnostic: mkdocstrings is written in Python but is language-agnostic. It means you can use it for any language, as long as you implement a handler for it. Currently, we have a Python handler and a Crystal handler . Multiple themes support: each handler can offer multiple themes. Currently, we support the Material theme and offer basic support for the mkdocs and readthedocs themes. Cross-references to other objects: mkdocstrings makes it possible to reference other headings from your Markdown files with the classic Markdown syntax: [identifier][] or [title][identifier] . See autorefs . Inline injection in Markdown: instead of generating Markdown files, mkdocstrings allows you to inject documentation anywhere in your Markdown contents. The syntax is simple: identifier followed by a 4-spaces indented YAML configuration block. ...and more! author: Timoth\u00e9e Mazzucotelli pawamoy links: Pypi | Github | Docs installation: pip install mkdocstrings","title":"mkdocstrings"},{"location":"plugins/api-documentation-building/#mkautodoc","text":"A Markdown extension which adds autodoc style support, for use with MkDocs. author: Tom Christie tomchristie links: PyPI GitHub installation: pip install mkautodoc","title":"MkAutoDoc"},{"location":"plugins/api-documentation-building/#doxygen","text":"Allows to generate Doxygen documentation as part of the build process. Doxygen is run (post-build) for each entry in the packages configuration entry (a list of mappings) and the html output moved to a subdirectory of site_dir , with the same name as the entry\u2019s key. author: Pieter David pieterdavid links: Github | Docs installation: pip install git+https://github.com/pieterdavid/mkdocs-doxygen-plugin","title":"doxygen"},{"location":"plugins/api-documentation-building/#dodoc","text":"An low-effort attempt to create autodocumentation of class and function definitions/docstrings. author: Mark Connelly plasmatech8 links: Github | Docs installation: pip install git+https://github.com/plasmatech8/Python-Mkdocs-Autodoc-Plugin","title":"dodoc"},{"location":"plugins/api-documentation-building/#inari","text":"Write docstrings in Markdown. author: T.Kameyama tkamenoko links: Pypi | Github | Docs installation: pip install inari","title":"inari"},{"location":"plugins/api-documentation-building/#mktheapidocs","text":"Generate markdown API documentation from Numpydoc docstrings. author: Jonathan Gray greenape links: Pypi | Github | Docs installation: pip install mktheapidocs","title":"mktheapidocs"},{"location":"plugins/api-documentation-building/#mkapi","text":"Generate API documentation from Markdown docstrings. MkApi supports two styles of docstrings: Google and NumPy . Features of MkApi are: Section syntax : Supported sections are Args , Arguments , Attributes , Example[s] , Note[s] , Parameters , Raises , Returns , References , Todo , Warning[s] , Warns , and Yields . Type annotation : If you write your function such as def func(x: int) -> str: , you don't need write type(s) in Args , Parameters , Returns , or Yields section again. You can overwrite the type annotation in the corresponding docstring. Object type inspection : MkApi plugin creates CLASS , DATACLASS , FUNCTION , GENERATOR , or METHOD prefix for each object. Attribute inspection : If you write attributes with description as comment in __init__() , Attributes section is automatically created. Docstring inheritance : Docstring of a subclass can inherit parameters and attributes description from its superclasses. Page mode : Comprehensive API documentation for your project, in which objects are linked to each other by type annotation. author: Daizu daizutabi links: PyPI | Github | Docs installation: pip install mkapi","title":"MkApi"},{"location":"plugins/authoring/","text":"Authoring \u00b6 edit_url (paulrbr) \u00b6 Adds the ability to use a edit_url: meta field in your markdown pages. Meaning you can override the default edit_url value built by MkDocs (from the edit_uri configuration option ). This is particularly useful if some of your documentation pages are taken from another source (another repository, a external wiki such as github/gitlab\u2026). author: paulrbr links: Gitlab | Docs installation: pip install git+https://gitlab.com/paulrbr/mkdocs-edit-url/ edit_url (dhis2) \u00b6 Read a page\u2019s metadata to search for a field called edit_url and forces to use that value when generating the docs as the edit_url (behind the edit button). author: DHIS2 dhis2 links: Github | Docs vim-md-tags \u00b6 Creates a vim tag file of all markdown files for autocompleting and navigating through markdown pages in vim . author: Zach Hannum midnightprioriem links: Pypi | Github | Docs installation: pip install mkdocs-vim-md-tags-plugin","title":"\ud83d\udcdc \u4f5c\u8005"},{"location":"plugins/authoring/#authoring","text":"","title":"Authoring"},{"location":"plugins/authoring/#edit_url-paulrbr","text":"Adds the ability to use a edit_url: meta field in your markdown pages. Meaning you can override the default edit_url value built by MkDocs (from the edit_uri configuration option ). This is particularly useful if some of your documentation pages are taken from another source (another repository, a external wiki such as github/gitlab\u2026). author: paulrbr links: Gitlab | Docs installation: pip install git+https://gitlab.com/paulrbr/mkdocs-edit-url/","title":"edit_url (paulrbr)"},{"location":"plugins/authoring/#edit_url-dhis2","text":"Read a page\u2019s metadata to search for a field called edit_url and forces to use that value when generating the docs as the edit_url (behind the edit button). author: DHIS2 dhis2 links: Github | Docs","title":"edit_url (dhis2)"},{"location":"plugins/authoring/#vim-md-tags","text":"Creates a vim tag file of all markdown files for autocompleting and navigating through markdown pages in vim . author: Zach Hannum midnightprioriem links: Pypi | Github | Docs installation: pip install mkdocs-vim-md-tags-plugin","title":"vim-md-tags"},{"location":"plugins/blogging/","text":"Mkdocs Blog \u00b6 \u5141\u8bb8 mkdocs \u4f5c\u4e3a\u4e00\u4e2a\u7b80\u5355\u7684\u535a\u5ba2\u4f7f\u7528\u3002 \u5047\u8bbe\u535a\u5ba2\u5185\u5bb9\u4ee5\u6570\u5b57\u5e74\u548c\u6708\u7684\u6807\u51c6\u5316\u683c\u5f0f\u5e03\u5c40: docs/<year>/<month>/page.md . \u5728\u4e00\u4e2a\u6708\u5185\uff0c\u6587\u4ef6\u4fee\u6539\u65f6\u95f4\u7528\u4e8e\u63d0\u4f9b\u65f6\u95f4\u987a\u5e8f\u3002 \u542f\u7528 jinja2 \u6a21\u677f\u3002 \u4e3a\u6700\u8fd1\u7684\u5185\u5bb9\u751f\u6210\u4e00\u4e2a\u7b80\u5355\u7684 RSS \u63d0\u8981\u3002 author: Andy Oakley andyoakley links: Github | Docs installation: pip install git+https://github.com/andyoakley/mkdocs-blog Blogs for MkDocs \u00b6 \u8fd9\u4e2a MkDocs \u63d2\u4ef6\u5141\u8bb8\u4f60\u5728\u6587\u6863\u7ad9\u70b9\u4e2d\u4fdd\u7559\u4e00\u4e2a\u975e\u5e38\u7b80\u5355\u7684\u535a\u5ba2\u90e8\u5206\u3002 author: Francesco Maida fmaida links: Github | Docs installation: pip install git+https://github.com/fmaida/mkdocs-blog-plugin RSS feeds \u00b6 \u4f7f\u7528 Git \u65e5\u5fd7\u751f\u6210 RSS 2.0 \u63d0\u8981(\u6700\u65b0\u521b\u5efa\u548c\u66f4\u65b0\u7684\u9875\u9762)\u3002 author: Guts links: Pypi | Github | Documentation installation: pip install mkdocs-rss-plugin mkdocs-newsletter \u00b6 \u521b\u5efa\u6bcf\u65e5\uff0c\u6bcf\u5468\uff0c\u6bcf\u6708\u548c\u6bcf\u5e74\u4e30\u5bcc\u7684\u901a\u8baf\u6587\u7ae0\u4e0e\u6bcf\u4e2a\u65f6\u671f\u7684\u53d8\u5316\u3002 \u8fd9\u4e9b\u9875\u9762\u5b58\u50a8\u5728\u201c\u65f6\u4e8b\u901a\u8baf\u201d\u90e8\u5206\u4e0b\uff0c\u5145\u6ee1\u4e86\u4ece git \u5386\u53f2\u7684\u63d0\u4ea4\u6d88\u606f\u4e2d\u63d0\u53d6\u7684\u66f4\u6539\u3002 \u66f4\u6539\u6309\u7c7b\u522b\u3001\u5b50\u7c7b\u522b\u5206\u7ec4\uff0c\u7136\u540e\u6309\u6587\u4ef6\u4f7f\u7528\u7f51\u7ad9\u5bfc\u822a\u7ed3\u6784\u7684\u987a\u5e8f\u5206\u7ec4\u3002 RSS \u63d0\u8981\u4e5f\u4e3a\u6bcf\u79cd\u901a\u8baf\u7c7b\u578b\u521b\u5efa\uff0c\u6240\u4ee5\u4eba\u4eec\u5f88\u5bb9\u6613\u8ddf\u4e0a\u7f51\u7ad9\u7684\u53d1\u5c55\u3002 author: Lyz links: PyPI | Github | Docs installation: pip install mkdocs-newsletter mkdocs-blogging-plugin \u00b6 \u751f\u6210\u4e00\u4e2a\u6309\u65f6\u95f4\u5217\u51fa\u6240\u9009\u9875\u9762\u7684\u535a\u5ba2\u9875\u9762\uff0c\u5177\u6709\u81ea\u5b9a\u4e49\u652f\u6301\u3002 author: Liang Yesheng liang2kl links: PyPI | Github installation: pip install mkdocs-blogging-plugin Social cards (for mkdocs-material ) \u00b6 \u793e\u4ea4\u5361\uff0c\u4e5f\u88ab\u79f0\u4e3a\u793e\u4ea4\u9884\u89c8\uff0c\u662f\u5728\u793e\u4ea4\u5a92\u4f53\u4e0a\u5206\u4eab\u9879\u76ee\u6587\u6863\u94fe\u63a5\u65f6\u663e\u793a\u7684\u56fe\u50cf\u3002 Material for MkDocs \u53ef\u4ee5\u81ea\u52a8\u751f\u6210\u6f02\u4eae\u7684\u793e\u4ea4\u5361\u7247\uff0c\u4f7f\u7528 mkdocs.yml \u4e2d\u5b9a\u4e49\u7684\u989c\u8272\u3001\u5b57\u4f53\u548c\u6807\u5fd7\u3002 author: squidfunk links: GitHub installation: see documentation","title":"\ud83d\udcd6 \u5199\u535a\u5ba2"},{"location":"plugins/blogging/#mkdocs-blog","text":"\u5141\u8bb8 mkdocs \u4f5c\u4e3a\u4e00\u4e2a\u7b80\u5355\u7684\u535a\u5ba2\u4f7f\u7528\u3002 \u5047\u8bbe\u535a\u5ba2\u5185\u5bb9\u4ee5\u6570\u5b57\u5e74\u548c\u6708\u7684\u6807\u51c6\u5316\u683c\u5f0f\u5e03\u5c40: docs/<year>/<month>/page.md . \u5728\u4e00\u4e2a\u6708\u5185\uff0c\u6587\u4ef6\u4fee\u6539\u65f6\u95f4\u7528\u4e8e\u63d0\u4f9b\u65f6\u95f4\u987a\u5e8f\u3002 \u542f\u7528 jinja2 \u6a21\u677f\u3002 \u4e3a\u6700\u8fd1\u7684\u5185\u5bb9\u751f\u6210\u4e00\u4e2a\u7b80\u5355\u7684 RSS \u63d0\u8981\u3002 author: Andy Oakley andyoakley links: Github | Docs installation: pip install git+https://github.com/andyoakley/mkdocs-blog","title":"Mkdocs Blog"},{"location":"plugins/blogging/#blogs-for-mkdocs","text":"\u8fd9\u4e2a MkDocs \u63d2\u4ef6\u5141\u8bb8\u4f60\u5728\u6587\u6863\u7ad9\u70b9\u4e2d\u4fdd\u7559\u4e00\u4e2a\u975e\u5e38\u7b80\u5355\u7684\u535a\u5ba2\u90e8\u5206\u3002 author: Francesco Maida fmaida links: Github | Docs installation: pip install git+https://github.com/fmaida/mkdocs-blog-plugin","title":"Blogs for MkDocs"},{"location":"plugins/blogging/#rss-feeds","text":"\u4f7f\u7528 Git \u65e5\u5fd7\u751f\u6210 RSS 2.0 \u63d0\u8981(\u6700\u65b0\u521b\u5efa\u548c\u66f4\u65b0\u7684\u9875\u9762)\u3002 author: Guts links: Pypi | Github | Documentation installation: pip install mkdocs-rss-plugin","title":"RSS feeds"},{"location":"plugins/blogging/#mkdocs-newsletter","text":"\u521b\u5efa\u6bcf\u65e5\uff0c\u6bcf\u5468\uff0c\u6bcf\u6708\u548c\u6bcf\u5e74\u4e30\u5bcc\u7684\u901a\u8baf\u6587\u7ae0\u4e0e\u6bcf\u4e2a\u65f6\u671f\u7684\u53d8\u5316\u3002 \u8fd9\u4e9b\u9875\u9762\u5b58\u50a8\u5728\u201c\u65f6\u4e8b\u901a\u8baf\u201d\u90e8\u5206\u4e0b\uff0c\u5145\u6ee1\u4e86\u4ece git \u5386\u53f2\u7684\u63d0\u4ea4\u6d88\u606f\u4e2d\u63d0\u53d6\u7684\u66f4\u6539\u3002 \u66f4\u6539\u6309\u7c7b\u522b\u3001\u5b50\u7c7b\u522b\u5206\u7ec4\uff0c\u7136\u540e\u6309\u6587\u4ef6\u4f7f\u7528\u7f51\u7ad9\u5bfc\u822a\u7ed3\u6784\u7684\u987a\u5e8f\u5206\u7ec4\u3002 RSS \u63d0\u8981\u4e5f\u4e3a\u6bcf\u79cd\u901a\u8baf\u7c7b\u578b\u521b\u5efa\uff0c\u6240\u4ee5\u4eba\u4eec\u5f88\u5bb9\u6613\u8ddf\u4e0a\u7f51\u7ad9\u7684\u53d1\u5c55\u3002 author: Lyz links: PyPI | Github | Docs installation: pip install mkdocs-newsletter","title":"mkdocs-newsletter"},{"location":"plugins/blogging/#mkdocs-blogging-plugin","text":"\u751f\u6210\u4e00\u4e2a\u6309\u65f6\u95f4\u5217\u51fa\u6240\u9009\u9875\u9762\u7684\u535a\u5ba2\u9875\u9762\uff0c\u5177\u6709\u81ea\u5b9a\u4e49\u652f\u6301\u3002 author: Liang Yesheng liang2kl links: PyPI | Github installation: pip install mkdocs-blogging-plugin","title":"mkdocs-blogging-plugin"},{"location":"plugins/blogging/#social-cards-for-mkdocs-material","text":"\u793e\u4ea4\u5361\uff0c\u4e5f\u88ab\u79f0\u4e3a\u793e\u4ea4\u9884\u89c8\uff0c\u662f\u5728\u793e\u4ea4\u5a92\u4f53\u4e0a\u5206\u4eab\u9879\u76ee\u6587\u6863\u94fe\u63a5\u65f6\u663e\u793a\u7684\u56fe\u50cf\u3002 Material for MkDocs \u53ef\u4ee5\u81ea\u52a8\u751f\u6210\u6f02\u4eae\u7684\u793e\u4ea4\u5361\u7247\uff0c\u4f7f\u7528 mkdocs.yml \u4e2d\u5b9a\u4e49\u7684\u989c\u8272\u3001\u5b57\u4f53\u548c\u6807\u5fd7\u3002 author: squidfunk links: GitHub installation: see documentation","title":"Social cards (for mkdocs-material)"},{"location":"plugins/citations--bibliography/","text":"Citations & bibliography \u00b6 bibtex \u00b6 Citation management using bibtex. author: Materials Project materialsproject links: Github | Docs installation: pip install mkdocs-bibtex","title":"\ud83d\udcda \u5f15\u6587\u4e0e\u4e66\u76ee"},{"location":"plugins/citations--bibliography/#citations-bibliography","text":"","title":"Citations &amp; bibliography"},{"location":"plugins/citations--bibliography/#bibtex","text":"Citation management using bibtex. author: Materials Project materialsproject links: Github | Docs installation: pip install mkdocs-bibtex","title":"bibtex"},{"location":"plugins/code-execution-variables--templating/","text":"Code execution, variables & templating \u00b6 pheasant \u00b6 Auto Python code execution and insertion to the original Markdown source. Any Python codes in a fenced code block of original Markdown source are executed. This process is performed by a Jupyter client. In addition to this code execution, Pheasant can automatically number headers, figures, tables, etc. See the Pheasant official site at Pheasant Home author: daizutabi links: Pypi | Github | Docs installation: pip install pheasant macros \u00b6 A mini-framework (\"Swiss Army knife\" of plugins): brings the power of jinja2 to the markdown pages of a MkDocs website. author: Laurent Franceschetti fralau links: Pypi | Github | Docs installation: pip install mkdocs-macros-plugin markdownextradata \u00b6 Injects mkdocs.yml->extra: * variables into your markdown documents. Very powerful for things like {{ client.name }} or <a href=\"{{ client.website }}\"><img alt=\"{{ client.logo.alt }}\" src=\"{{ client.logo.src }}\" /></a> in your markdown and not in the theme template.html files. author: Ross Crawford-d\u2019Heureuse rosscdh links: Pypi | Github | Docs installation: pip install mkdocs-markdownextradata-plugin jinja2sandbox \u00b6 Enables the Jinja2-sandbox in the MkDocs-templates. author: Roland Koebler rkoe links Github | Docs installation: pip install git+https://github.com/rkoe/mkdocs-jinja2sandbox jinja2 \u00b6 Allows the use of Jinja2 templates inside Markdown content. It can be useful, for example, to enumerate pages or use the configuration or site navigation data structures from within content. Templates should render to HTML. Example: {% for year in ['2018', '2017'] %} <h3>{{ year }}</h3> {% for page in pages|sort(attribute='url', reverse=True) %} {{ page.title }} <br /> {% endfor %} {% endfor %} author: Andy Oakley andyoakley links: Github | Docs installation: pip install git+https://github.com/andyoakley/mkdocs-jinja2 gen-files \u00b6 Generate documentation pages virtually during the build, using a Python scripting API. No more hacky Bash scripts that you forget to re-run! author: Oleh Prypin oprypin links: PyPI | GitHub | Docs installation: pip install mkdocs-gen-files mkdocs-markmap \u00b6 Introduce mindmaps to your documents by either inline markdown conversion or separate file inclusion. author: neatc0der links: PyPI | GitHub installation: pip install mkdocs-markmap nbconvert (tanbro) \u00b6 Source parser for *.ipynb Jupyter Notebook files author: liu xue yan tanbro links: Pypi | Github | Docs installation: pip install https://pypi.org/project/mkdocs-nbconvert/ nbconvert (andyoakley) \u00b6 This mkdocs plugin uses nbconvert to convert Jupyter notebooks into Markdown as they are loaded. author: Andy Oakley andyoakley links: Github | Docs installation: pip install git+https://github.com/andyoakley/mkdocs-nbconvert/ mknotebooks \u00b6 Includes Jupyter notebooks in your project documentation. author: Jonathan Gray greenape links: Pypi | Github | Docs installation: pip install mknotebooks mkdocs-jupyter \u00b6 Add Jupyter Notebooks directly to the mkdocs navigation. author: Daniel Rodriguez danielfrg links: Pypi | Github | Docs installation: pip install mkdocs-jupyter codeyaml \u00b6 Injects the mkdocs.yml extra variables PLUS extra YML files into the markdown template. author: textile.io textileio links: Github | Docs installation: pip install git+https://github.com/textileio/mkdocs-codeyaml-plugin markdown-filter \u00b6 Adds a markdown filter to the Jinja templating engine in mkdocs. author: Byrne Reese byrnereese links: Pypi | Github | Docs installation: pip install mkdocs-markdown-filter theme-jinja2-filters \u00b6 Lets you use Jinja2 filters. author: Benedikt Reiser burnedikt links: Github | Docs installation: pip install git+https://github.com/burnedikt/mkdocs-jinja2-filters-plugin mathy \u00b6 Renders mathy -specific elements in a mkdocs page by template substitution. Mathy is a A modern computer algebra system and reinforcement learning environments platform for interpretable symbolic mathematics. author Justin DuJardin justindujardin links: Plugin on Github | Mathy on Github | Site user-defined-values \u00b6 Allows pages to have user-defined input values. author: Rahul Trikha rahult links: Pypi | Github | Docs installation: pip install mkdocs-user-defined-values mkdocs_protobuf \u00b6 Insert protobuf messages directly into documetnation author: Ryan Murray rymurr links: PyPI | Github | Docs installation: pip install mkdocs_protobuf mkjsfiddle \u00b6 Enhance code fences with an \"Edit in JSFiddle\" button. author: Stadia Maps stadiamaps links: PyPI | Github installation: pip install mkjsfiddle","title":"\ud83d\udcdd \u4ee3\u7801\u6267\u884c\uff0c\u53d8\u91cf\u548c\u6a21\u677f"},{"location":"plugins/code-execution-variables--templating/#code-execution-variables-templating","text":"","title":"Code execution, variables &amp; templating"},{"location":"plugins/code-execution-variables--templating/#pheasant","text":"Auto Python code execution and insertion to the original Markdown source. Any Python codes in a fenced code block of original Markdown source are executed. This process is performed by a Jupyter client. In addition to this code execution, Pheasant can automatically number headers, figures, tables, etc. See the Pheasant official site at Pheasant Home author: daizutabi links: Pypi | Github | Docs installation: pip install pheasant","title":"pheasant"},{"location":"plugins/code-execution-variables--templating/#macros","text":"A mini-framework (\"Swiss Army knife\" of plugins): brings the power of jinja2 to the markdown pages of a MkDocs website. author: Laurent Franceschetti fralau links: Pypi | Github | Docs installation: pip install mkdocs-macros-plugin","title":"macros"},{"location":"plugins/code-execution-variables--templating/#markdownextradata","text":"Injects mkdocs.yml->extra: * variables into your markdown documents. Very powerful for things like {{ client.name }} or <a href=\"{{ client.website }}\"><img alt=\"{{ client.logo.alt }}\" src=\"{{ client.logo.src }}\" /></a> in your markdown and not in the theme template.html files. author: Ross Crawford-d\u2019Heureuse rosscdh links: Pypi | Github | Docs installation: pip install mkdocs-markdownextradata-plugin","title":"markdownextradata"},{"location":"plugins/code-execution-variables--templating/#jinja2sandbox","text":"Enables the Jinja2-sandbox in the MkDocs-templates. author: Roland Koebler rkoe links Github | Docs installation: pip install git+https://github.com/rkoe/mkdocs-jinja2sandbox","title":"jinja2sandbox"},{"location":"plugins/code-execution-variables--templating/#jinja2","text":"Allows the use of Jinja2 templates inside Markdown content. It can be useful, for example, to enumerate pages or use the configuration or site navigation data structures from within content. Templates should render to HTML. Example: {% for year in ['2018', '2017'] %} <h3>{{ year }}</h3> {% for page in pages|sort(attribute='url', reverse=True) %} {{ page.title }} <br /> {% endfor %} {% endfor %} author: Andy Oakley andyoakley links: Github | Docs installation: pip install git+https://github.com/andyoakley/mkdocs-jinja2","title":"jinja2"},{"location":"plugins/code-execution-variables--templating/#gen-files","text":"Generate documentation pages virtually during the build, using a Python scripting API. No more hacky Bash scripts that you forget to re-run! author: Oleh Prypin oprypin links: PyPI | GitHub | Docs installation: pip install mkdocs-gen-files","title":"gen-files"},{"location":"plugins/code-execution-variables--templating/#mkdocs-markmap","text":"Introduce mindmaps to your documents by either inline markdown conversion or separate file inclusion. author: neatc0der links: PyPI | GitHub installation: pip install mkdocs-markmap","title":"mkdocs-markmap"},{"location":"plugins/code-execution-variables--templating/#nbconvert-tanbro","text":"Source parser for *.ipynb Jupyter Notebook files author: liu xue yan tanbro links: Pypi | Github | Docs installation: pip install https://pypi.org/project/mkdocs-nbconvert/","title":"nbconvert (tanbro)"},{"location":"plugins/code-execution-variables--templating/#nbconvert-andyoakley","text":"This mkdocs plugin uses nbconvert to convert Jupyter notebooks into Markdown as they are loaded. author: Andy Oakley andyoakley links: Github | Docs installation: pip install git+https://github.com/andyoakley/mkdocs-nbconvert/","title":"nbconvert (andyoakley)"},{"location":"plugins/code-execution-variables--templating/#mknotebooks","text":"Includes Jupyter notebooks in your project documentation. author: Jonathan Gray greenape links: Pypi | Github | Docs installation: pip install mknotebooks","title":"mknotebooks"},{"location":"plugins/code-execution-variables--templating/#mkdocs-jupyter","text":"Add Jupyter Notebooks directly to the mkdocs navigation. author: Daniel Rodriguez danielfrg links: Pypi | Github | Docs installation: pip install mkdocs-jupyter","title":"mkdocs-jupyter"},{"location":"plugins/code-execution-variables--templating/#codeyaml","text":"Injects the mkdocs.yml extra variables PLUS extra YML files into the markdown template. author: textile.io textileio links: Github | Docs installation: pip install git+https://github.com/textileio/mkdocs-codeyaml-plugin","title":"codeyaml"},{"location":"plugins/code-execution-variables--templating/#markdown-filter","text":"Adds a markdown filter to the Jinja templating engine in mkdocs. author: Byrne Reese byrnereese links: Pypi | Github | Docs installation: pip install mkdocs-markdown-filter","title":"markdown-filter"},{"location":"plugins/code-execution-variables--templating/#theme-jinja2-filters","text":"Lets you use Jinja2 filters. author: Benedikt Reiser burnedikt links: Github | Docs installation: pip install git+https://github.com/burnedikt/mkdocs-jinja2-filters-plugin","title":"theme-jinja2-filters"},{"location":"plugins/code-execution-variables--templating/#mathy","text":"Renders mathy -specific elements in a mkdocs page by template substitution. Mathy is a A modern computer algebra system and reinforcement learning environments platform for interpretable symbolic mathematics. author Justin DuJardin justindujardin links: Plugin on Github | Mathy on Github | Site","title":"mathy"},{"location":"plugins/code-execution-variables--templating/#user-defined-values","text":"Allows pages to have user-defined input values. author: Rahul Trikha rahult links: Pypi | Github | Docs installation: pip install mkdocs-user-defined-values","title":"user-defined-values"},{"location":"plugins/code-execution-variables--templating/#mkdocs_protobuf","text":"Insert protobuf messages directly into documetnation author: Ryan Murray rymurr links: PyPI | Github | Docs installation: pip install mkdocs_protobuf","title":"mkdocs_protobuf"},{"location":"plugins/code-execution-variables--templating/#mkjsfiddle","text":"Enhance code fences with an \"Edit in JSFiddle\" button. author: Stadia Maps stadiamaps links: PyPI | Github installation: pip install mkjsfiddle","title":"mkjsfiddle"},{"location":"plugins/contributing-to-this-page/","text":"Contributing to this page \u00b6 If you add info about a new plugin, you may use the following template. The plugins are categorized in some broad categories. Place the info about the plugin into the most appropriate category. If you\u2019re unsure, place it into the \u201cOther\u201d category, or \u2014 if it makes sense \u2014 add a new category (then also add it in the top list of categories, with a link). ### [name-of-plugin](source-to-obtain-plugin) (optional-variant) <img alt=\"PyPI - Downloads\" src=\"https://img.shields.io/pypi/dm/<NAME OF YOUR PACKAGE>\"> Does this or that. Concise description of what the plugin does, one paragraph or a few. No need to write \u201cAn MkDocs plugin that...\u201d, just start the sentence with the verb, such as \u201cAdds more headings\u201d or \u201cLets you merge\u201d etc. - author: name-of-author [handle-of-author](url-to-author) - links: [PyPI](https://pypi.org/project/link-to-plugin-on-pypi/) | [Github](https://github.com/plugin-url) | [Docs](link-to-docs-page-or-readme) - installation: `pip install plugin-location` As name-of-plugin on this page, please use the mkdocs.plugins entry point name in setup.py (see below), linked to the \u201cbest\u201d location where more info about the plugin can be found. If multiple plugins with the same name exist, add an optional-variant in parantheses after the linked name-of-plugin , for example (handle-of-author) . entry_points={ 'mkdocs.plugins': [ 'name-of-plugin = name_of_module...', ] }, If the plugin is on Pypi, add a [Pypi](https://pypi.org/project/link-to-plugin-on-pypi/) link in the links line. Follow with additional links, separating them with | . Use a short link descriptor such as Github , Gitlab , Site , Docs , Demo etc. If the plugin is on PyPI, the plugin-location in the installation line should be the Pypi package name. If it\u2019s only available as a publicly hosted git repo, the plugin-location should be git+https://url-to-the-public-repo .","title":"\u8d21\u732e\u8fd9\u4e00\u9875\u9762"},{"location":"plugins/contributing-to-this-page/#contributing-to-this-page","text":"If you add info about a new plugin, you may use the following template. The plugins are categorized in some broad categories. Place the info about the plugin into the most appropriate category. If you\u2019re unsure, place it into the \u201cOther\u201d category, or \u2014 if it makes sense \u2014 add a new category (then also add it in the top list of categories, with a link). ### [name-of-plugin](source-to-obtain-plugin) (optional-variant) <img alt=\"PyPI - Downloads\" src=\"https://img.shields.io/pypi/dm/<NAME OF YOUR PACKAGE>\"> Does this or that. Concise description of what the plugin does, one paragraph or a few. No need to write \u201cAn MkDocs plugin that...\u201d, just start the sentence with the verb, such as \u201cAdds more headings\u201d or \u201cLets you merge\u201d etc. - author: name-of-author [handle-of-author](url-to-author) - links: [PyPI](https://pypi.org/project/link-to-plugin-on-pypi/) | [Github](https://github.com/plugin-url) | [Docs](link-to-docs-page-or-readme) - installation: `pip install plugin-location` As name-of-plugin on this page, please use the mkdocs.plugins entry point name in setup.py (see below), linked to the \u201cbest\u201d location where more info about the plugin can be found. If multiple plugins with the same name exist, add an optional-variant in parantheses after the linked name-of-plugin , for example (handle-of-author) . entry_points={ 'mkdocs.plugins': [ 'name-of-plugin = name_of_module...', ] }, If the plugin is on Pypi, add a [Pypi](https://pypi.org/project/link-to-plugin-on-pypi/) link in the links line. Follow with additional links, separating them with | . Use a short link descriptor such as Github , Gitlab , Site , Docs , Demo etc. If the plugin is on PyPI, the plugin-location in the installation line should be the Pypi package name. If it\u2019s only available as a publicly hosted git repo, the plugin-location should be git+https://url-to-the-public-repo .","title":"Contributing to this page"},{"location":"plugins/example--custom-plugins/","text":"Example & custom plugins \u00b6 These plugins don\u2019t offer obvious out-of-the-box functionality but may contain useful code that can be adapted for your purposes. your-plugin \u00b6 This is a template for a MkDocs plugin. author: Byrne Reese byrnereese links: GitHub hello-dolly \u00b6 A very basic MkDocs plugin which substitutes every occurrence of {{dolly}} in your documents with random lyrics from the song \u201cHello Dolly!\u201d. author: Francesco Maida fmaida links: GitHub | Docs installation: pip install git+https://github.com/fmaida/hello-dolly-mkdocs-plugin tiexport \u00b6 Example renaming plugin. author: Tim VanZant t-vnznt links: GitHub mkrename \u00b6 Example renaming plugin. author: Tim VanZant t-vnznt links: Github","title":"\u2714\ufe0f \u793a\u4f8b\u548c\u81ea\u5b9a\u4e49\u63d2\u4ef6"},{"location":"plugins/example--custom-plugins/#example-custom-plugins","text":"These plugins don\u2019t offer obvious out-of-the-box functionality but may contain useful code that can be adapted for your purposes.","title":"Example &amp; custom plugins"},{"location":"plugins/example--custom-plugins/#your-plugin","text":"This is a template for a MkDocs plugin. author: Byrne Reese byrnereese links: GitHub","title":"your-plugin"},{"location":"plugins/example--custom-plugins/#hello-dolly","text":"A very basic MkDocs plugin which substitutes every occurrence of {{dolly}} in your documents with random lyrics from the song \u201cHello Dolly!\u201d. author: Francesco Maida fmaida links: GitHub | Docs installation: pip install git+https://github.com/fmaida/hello-dolly-mkdocs-plugin","title":"hello-dolly"},{"location":"plugins/example--custom-plugins/#tiexport","text":"Example renaming plugin. author: Tim VanZant t-vnznt links: GitHub","title":"tiexport"},{"location":"plugins/example--custom-plugins/#mkrename","text":"Example renaming plugin. author: Tim VanZant t-vnznt links: Github","title":"mkrename"},{"location":"plugins/git-repos--info/","text":"Git repos & info \u00b6 branchcustomization \u00b6 Update or override configuration entries based on the current Git branch. Compatible with ReadTheDocs. author: Chris Markiewicz effigies links: Github | Docs installation: pip install git+https://github.com/effigies/mkdocs-branchcustomization-plugin git-revision-date-localized \u00b6 Uses git to fetch the last revision date per markdown file and display it in a localized way (f.e. \u201c9 December 2019\u201d or '5 days ago\u2019) author: Tim Vink timvink links: Pypi | Github | Docs installation: pip install mkdocs-git-revision-date-localized-plugin git-revision-date \u00b6 Uses git to fetch the last revision date per markdown file. author: Terry Zhao zhaoterryy links: Pypi | Github | Docs installation: pip install mkdocs-git-revision-date-plugin git-authors \u00b6 Displays the git authors of a file, for example: 'written by: Jane Doe , John Doe ' author: Tim Vink timvink links: Pypi | Github | Docs installation: pip install mkdocs-git-authors-plugin git-committers (ojacques) \u00b6 Displays a list of committers associated with a file, as well as the last time the file was edited. This is a plugin which is a fork from the original mkdocs-git-committers-plugin by @byrnereese . author: Olivier Jacques ojacques links: Pypi | Github | Docs installation: pip install mkdocs-git-committers-plugin-2 git-committers (byrnereese) \u00b6 Displays a list of committers associated with a file, as well as the last time the file was edited. author: Byrne Reese byrnereese links: Pypi | Github | Docs installation: pip install mkdocs-git-committers-plugin git-latest-tag \u00b6 Displays the latest version based on git tags. Replaces {{ git_latest_version }} and {{ git_revision_date }} with Git-based latest version and revision date info. author: Andrew Garner agarthetiger links: Pypi | Github | Docs installation: pip install mkdocs-latest-release-plugin macros \u00b6 A \"Swiss Army knife\" of plugins, which brings the power of jinja2 to the markdown pages of a MkDocs website. If the site is under a git repository, this plugin also provides a wealth of git data in pages, through the git object. author: Laurent Franceschetti fralau links: Pypi | Github | Docs installation: pip install mkdocs-macros-plugin","title":":simple-github: Git\u5b58\u50a8\u5e93\u548c\u4fe1\u606f"},{"location":"plugins/git-repos--info/#git-repos-info","text":"","title":"Git repos &amp; info"},{"location":"plugins/git-repos--info/#branchcustomization","text":"Update or override configuration entries based on the current Git branch. Compatible with ReadTheDocs. author: Chris Markiewicz effigies links: Github | Docs installation: pip install git+https://github.com/effigies/mkdocs-branchcustomization-plugin","title":"branchcustomization"},{"location":"plugins/git-repos--info/#git-revision-date-localized","text":"Uses git to fetch the last revision date per markdown file and display it in a localized way (f.e. \u201c9 December 2019\u201d or '5 days ago\u2019) author: Tim Vink timvink links: Pypi | Github | Docs installation: pip install mkdocs-git-revision-date-localized-plugin","title":"git-revision-date-localized"},{"location":"plugins/git-repos--info/#git-revision-date","text":"Uses git to fetch the last revision date per markdown file. author: Terry Zhao zhaoterryy links: Pypi | Github | Docs installation: pip install mkdocs-git-revision-date-plugin","title":"git-revision-date"},{"location":"plugins/git-repos--info/#git-authors","text":"Displays the git authors of a file, for example: 'written by: Jane Doe , John Doe ' author: Tim Vink timvink links: Pypi | Github | Docs installation: pip install mkdocs-git-authors-plugin","title":"git-authors"},{"location":"plugins/git-repos--info/#git-committers-ojacques","text":"Displays a list of committers associated with a file, as well as the last time the file was edited. This is a plugin which is a fork from the original mkdocs-git-committers-plugin by @byrnereese . author: Olivier Jacques ojacques links: Pypi | Github | Docs installation: pip install mkdocs-git-committers-plugin-2","title":"git-committers (ojacques)"},{"location":"plugins/git-repos--info/#git-committers-byrnereese","text":"Displays a list of committers associated with a file, as well as the last time the file was edited. author: Byrne Reese byrnereese links: Pypi | Github | Docs installation: pip install mkdocs-git-committers-plugin","title":"git-committers (byrnereese)"},{"location":"plugins/git-repos--info/#git-latest-tag","text":"Displays the latest version based on git tags. Replaces {{ git_latest_version }} and {{ git_revision_date }} with Git-based latest version and revision date info. author: Andrew Garner agarthetiger links: Pypi | Github | Docs installation: pip install mkdocs-latest-release-plugin","title":"git-latest-tag"},{"location":"plugins/git-repos--info/#macros","text":"A \"Swiss Army knife\" of plugins, which brings the power of jinja2 to the markdown pages of a MkDocs website. If the site is under a git repository, this plugin also provides a wealth of git data in pages, through the git object. author: Laurent Franceschetti fralau links: Pypi | Github | Docs installation: pip install mkdocs-macros-plugin","title":"macros"},{"location":"plugins/html-processing--css-styling/","text":"HTML processing & CSS styling \u00b6 docstyler \u00b6 Adds persistent, preferred and/or alternate stylesheet links to custom MkDocs themes. author: Heini Fagerlund hfagerlund links: Github | Docs installation: pip install git+https://github.com/hfagerlund/mkdocs-docstyler-plugin mkdocs-add-teaser \u00b6 Customizes the first paragraph of your pages and uses it as the page's meta description. This is useful if the first paragraph of your pages a) contains information that should stand out from the rest of the text, e.g., should be printed in bold (\"teaser\" text), b) should appear as the page description in search engines (for SEO). author: Lars Wilhelmer wilhelmer links: Github installation: pip install mkdocs-add-teaser mkdocs_safe_text \u00b6 Filter HTML tags from Markdown sources. Only allows raw HTML tags specified in the plugin\u2019s whitelist. author: raimon raimon49 links: Pypi | Github | Docs installation: pip install mkdocs-safe-text-plugin minify \u00b6 Minifies the HTML of the page just prior to being written to disk. author: Byrne Reese byrnereese links: Pypi | Github | Docs installation: pip install mkdocs-minify-plugin bootstrap-tables \u00b6 Adds Bootstrap classes to plain/naked tables generated by Markdown. This improves styling of tables if you are using the Bootstrap CSS framework. It should have no effect for all other tables. author: Byrne Reese byrnereese links: Github | Docs installation: pip install mkdocs-bootstrap-tables-plugin add-number \u00b6 Automatically numbers the title (h1~h6) of each page you have. This only affects your HTML rendering results and does not affect the Markdown files. author: ignorantshr links: Github | Docs installation: pip install git+https://github.com/ignorantshr/mkdocs-add-number-plugin enumerate-headings \u00b6 MkDocs Plugin to enumerate the headings (h1-h6) across site pages author: Tim Vink timvink links: Pypi | Github | Docs installation: pip install mkdocs-enumerate-headings-plugin","title":"\ud83d\udd8c\ufe0f HTML\u5904\u7406\u548cCSS\u6837\u5f0f"},{"location":"plugins/html-processing--css-styling/#html-processing-css-styling","text":"","title":"HTML processing &amp; CSS styling"},{"location":"plugins/html-processing--css-styling/#docstyler","text":"Adds persistent, preferred and/or alternate stylesheet links to custom MkDocs themes. author: Heini Fagerlund hfagerlund links: Github | Docs installation: pip install git+https://github.com/hfagerlund/mkdocs-docstyler-plugin","title":"docstyler"},{"location":"plugins/html-processing--css-styling/#mkdocs-add-teaser","text":"Customizes the first paragraph of your pages and uses it as the page's meta description. This is useful if the first paragraph of your pages a) contains information that should stand out from the rest of the text, e.g., should be printed in bold (\"teaser\" text), b) should appear as the page description in search engines (for SEO). author: Lars Wilhelmer wilhelmer links: Github installation: pip install mkdocs-add-teaser","title":"mkdocs-add-teaser"},{"location":"plugins/html-processing--css-styling/#mkdocs_safe_text","text":"Filter HTML tags from Markdown sources. Only allows raw HTML tags specified in the plugin\u2019s whitelist. author: raimon raimon49 links: Pypi | Github | Docs installation: pip install mkdocs-safe-text-plugin","title":"mkdocs_safe_text"},{"location":"plugins/html-processing--css-styling/#minify","text":"Minifies the HTML of the page just prior to being written to disk. author: Byrne Reese byrnereese links: Pypi | Github | Docs installation: pip install mkdocs-minify-plugin","title":"minify"},{"location":"plugins/html-processing--css-styling/#bootstrap-tables","text":"Adds Bootstrap classes to plain/naked tables generated by Markdown. This improves styling of tables if you are using the Bootstrap CSS framework. It should have no effect for all other tables. author: Byrne Reese byrnereese links: Github | Docs installation: pip install mkdocs-bootstrap-tables-plugin","title":"bootstrap-tables"},{"location":"plugins/html-processing--css-styling/#add-number","text":"Automatically numbers the title (h1~h6) of each page you have. This only affects your HTML rendering results and does not affect the Markdown files. author: ignorantshr links: Github | Docs installation: pip install git+https://github.com/ignorantshr/mkdocs-add-number-plugin","title":"add-number"},{"location":"plugins/html-processing--css-styling/#enumerate-headings","text":"MkDocs Plugin to enumerate the headings (h1-h6) across site pages author: Tim Vink timvink links: Pypi | Github | Docs installation: pip install mkdocs-enumerate-headings-plugin","title":"enumerate-headings"},{"location":"plugins/images-tables-charts--graphs/","text":"Images, Tables, Charts & Graphs \u00b6 img2fig \u00b6 Converts markdown encoded images like ![An image caption](\\assets\\images\\my-image.png) into <figure class=\"figure-image\"> <img src=\"\\assets\\images\\my-image.png\" alt=\"An image caption\" /> <figcaption>An image caption</figcaption> </figure> author: St\u00fcber Systems stuebersystems links: Github | Docs installation: pip install git+https://github.com/stuebersystems/mkdocs-img2fig-plugin table-reader \u00b6 Adds a {{ read_csv('table.csv') }} markdown tag to directly insert CSV files in a page. author: Tim Vink timvink links: PyPi | Github | Docs installation: pip install mkdocs-table-reader-plugin charts \u00b6 Mkdocs plugin to add charts to your pages. author: Tim Vink timvink links: PyPi | Github | Docs installation: pip install mkdocs-charts-plugin drawio-exporter \u00b6 Exports your Draw.io diagrams at build time for easier embedding into your documentation. Just embed them like any other image. author: Luke Carrier LukeCarrier links: Pypi | Github | Docs installation: pip install mkdocs-drawio-exporter markdownmermaid \u00b6 This is a mkdocs plugin that could enable the mermaid graph in the markdown file. author: PuGong pugong links: Pypi | Github | Docs installation: pip install mkdocs-mermaid-plugin mermaid2 \u00b6 An expanded mkdocs plugin (based on the excellent markdownmermaid ) for rendering mermaid graphs. It features improved documentation and it is now possible to define arguments that will be passed to the mermaid.initialize(...) sequence. author: Laurent Franceschetti fralau links: Pypi | Github | Docs installation: pip install mkdocs-mermaid2-plugin markdownwavedrom \u00b6 Renders waveform charts in the wavedrom style. author: Shimoda dragon kuri65536 links: Pypi | Github | Docs installation: pip install mkdocs-wavedrom-plugin build_plantuml \u00b6 Helps building plantuml images. author: Christoph Galler christo-ph links: Pypi | Github | Docs installation: pip install mkdocs-build-plantuml-plugin sequence-js \u00b6 Renders js-sequence-diagrams blocks. author: Francesco Saverio Cannizzaro fcannizzaro links: Github | Docs installation pip install git+https://github.com/fcannizzaro/mkdocs-sequence-js-plugin kroki \u00b6 Renders Kroki-diagram blocks. Kroki provides a unified API with support for BlockDiag (BlockDiag, SeqDiag, ActDiag, NwDiag, PacketDiag, RackDiag), BPMN, Bytefield, C4 (with PlantUML), Ditaa, Erd, Excalidraw, GraphViz, Mermaid, Nomnoml, Pikchr, PlantUML, SvgBob, UMLet, Vega, Vega-Lite, WaveDrom... and more to come! author: Benjamin Bittner b-bittner links: Kroko | Pypi | Github | Docs installation pip install mkdocs-kroki-plugin MkDocs GLightbox \u00b6 Support image lightbox with GLightbox . GLightbox is pure Javascript lightbox library with mobile support. author: Blueswen Liu blueswen links: PyPI | Github | Demo installation: pip install mkdocs-glightbox","title":"\ud83d\uddbc\ufe0f \u56fe\u50cf\uff0c\u8868\u683c\uff0c\u56fe\u8868\u548c\u56fe\u5f62"},{"location":"plugins/images-tables-charts--graphs/#images-tables-charts-graphs","text":"","title":"Images, Tables, Charts &amp; Graphs"},{"location":"plugins/images-tables-charts--graphs/#img2fig","text":"Converts markdown encoded images like ![An image caption](\\assets\\images\\my-image.png) into <figure class=\"figure-image\"> <img src=\"\\assets\\images\\my-image.png\" alt=\"An image caption\" /> <figcaption>An image caption</figcaption> </figure> author: St\u00fcber Systems stuebersystems links: Github | Docs installation: pip install git+https://github.com/stuebersystems/mkdocs-img2fig-plugin","title":"img2fig"},{"location":"plugins/images-tables-charts--graphs/#table-reader","text":"Adds a {{ read_csv('table.csv') }} markdown tag to directly insert CSV files in a page. author: Tim Vink timvink links: PyPi | Github | Docs installation: pip install mkdocs-table-reader-plugin","title":"table-reader"},{"location":"plugins/images-tables-charts--graphs/#charts","text":"Mkdocs plugin to add charts to your pages. author: Tim Vink timvink links: PyPi | Github | Docs installation: pip install mkdocs-charts-plugin","title":"charts"},{"location":"plugins/images-tables-charts--graphs/#drawio-exporter","text":"Exports your Draw.io diagrams at build time for easier embedding into your documentation. Just embed them like any other image. author: Luke Carrier LukeCarrier links: Pypi | Github | Docs installation: pip install mkdocs-drawio-exporter","title":"drawio-exporter"},{"location":"plugins/images-tables-charts--graphs/#markdownmermaid","text":"This is a mkdocs plugin that could enable the mermaid graph in the markdown file. author: PuGong pugong links: Pypi | Github | Docs installation: pip install mkdocs-mermaid-plugin","title":"markdownmermaid"},{"location":"plugins/images-tables-charts--graphs/#mermaid2","text":"An expanded mkdocs plugin (based on the excellent markdownmermaid ) for rendering mermaid graphs. It features improved documentation and it is now possible to define arguments that will be passed to the mermaid.initialize(...) sequence. author: Laurent Franceschetti fralau links: Pypi | Github | Docs installation: pip install mkdocs-mermaid2-plugin","title":"mermaid2"},{"location":"plugins/images-tables-charts--graphs/#markdownwavedrom","text":"Renders waveform charts in the wavedrom style. author: Shimoda dragon kuri65536 links: Pypi | Github | Docs installation: pip install mkdocs-wavedrom-plugin","title":"markdownwavedrom"},{"location":"plugins/images-tables-charts--graphs/#build_plantuml","text":"Helps building plantuml images. author: Christoph Galler christo-ph links: Pypi | Github | Docs installation: pip install mkdocs-build-plantuml-plugin","title":"build_plantuml"},{"location":"plugins/images-tables-charts--graphs/#sequence-js","text":"Renders js-sequence-diagrams blocks. author: Francesco Saverio Cannizzaro fcannizzaro links: Github | Docs installation pip install git+https://github.com/fcannizzaro/mkdocs-sequence-js-plugin","title":"sequence-js"},{"location":"plugins/images-tables-charts--graphs/#kroki","text":"Renders Kroki-diagram blocks. Kroki provides a unified API with support for BlockDiag (BlockDiag, SeqDiag, ActDiag, NwDiag, PacketDiag, RackDiag), BPMN, Bytefield, C4 (with PlantUML), Ditaa, Erd, Excalidraw, GraphViz, Mermaid, Nomnoml, Pikchr, PlantUML, SvgBob, UMLet, Vega, Vega-Lite, WaveDrom... and more to come! author: Benjamin Bittner b-bittner links: Kroko | Pypi | Github | Docs installation pip install mkdocs-kroki-plugin","title":"kroki"},{"location":"plugins/images-tables-charts--graphs/#mkdocs-glightbox","text":"Support image lightbox with GLightbox . GLightbox is pure Javascript lightbox library with mobile support. author: Blueswen Liu blueswen links: PyPI | Github | Demo installation: pip install mkdocs-glightbox","title":"MkDocs GLightbox"},{"location":"plugins/internationalization--localization/","text":"Internationalization & localization \u00b6 multilang \u00b6 Serving locale-dependent pages. No documentation at this point . author: Avente LLC links: PyPI installation: pip install mkdocs-multilang image-localization \u00b6 Serving locale-dependent images. No documentation at this point . author: Avente LLC links: PyPI installation: pip install mkdocs-image-localization i18n \u00b6 It adds links to translated pages for each page. It also hides other languages page links of navigation menu if there is a translation for current page language. links: PyPI | GitLab | Demo installation: pip install mkdocs-i18n static-i18n \u00b6 An MkDocs plugin that helps you support multiple language versions of your site / documentation. This plugin is made to be as simple as possible and will generate a default version of your website + one per configured language on the <language>/ path. the default version will use any .md documentation file first and fallback to any .<default_language>.md file found the /<language> language versions will use any .<language>.md documentation file first and fallback to any .<default_language>.md file before fallbacking to any default .md file found Since demonstrations are better than words, check the demo link below! author: ultrabug links: PyPI | Github | Demo installation: pip install mkdocs-static-i18n mkdocs-mdpo \u00b6 An MkDocs plugin for translate your site to multiple language versions using PO files. This plugin is build in top of mdpo , allowing to parse a lot range of extensions texts updating PO files directly. Has compatibility with mkdocs-material and supports a lot of options to configure the process. You can even translate codeblocks , check the demo link below! author: mondeja links: PyPI | Github | Demo installation: pip install mkdocs-mdpo-plugin","title":"\ud83d\udcac \u56fd\u9645\u5316\u548c\u672c\u5730\u5316"},{"location":"plugins/internationalization--localization/#internationalization-localization","text":"","title":"Internationalization &amp; localization"},{"location":"plugins/internationalization--localization/#multilang","text":"Serving locale-dependent pages. No documentation at this point . author: Avente LLC links: PyPI installation: pip install mkdocs-multilang","title":"multilang"},{"location":"plugins/internationalization--localization/#image-localization","text":"Serving locale-dependent images. No documentation at this point . author: Avente LLC links: PyPI installation: pip install mkdocs-image-localization","title":"image-localization"},{"location":"plugins/internationalization--localization/#i18n","text":"It adds links to translated pages for each page. It also hides other languages page links of navigation menu if there is a translation for current page language. links: PyPI | GitLab | Demo installation: pip install mkdocs-i18n","title":"i18n"},{"location":"plugins/internationalization--localization/#static-i18n","text":"An MkDocs plugin that helps you support multiple language versions of your site / documentation. This plugin is made to be as simple as possible and will generate a default version of your website + one per configured language on the <language>/ path. the default version will use any .md documentation file first and fallback to any .<default_language>.md file found the /<language> language versions will use any .<language>.md documentation file first and fallback to any .<default_language>.md file before fallbacking to any default .md file found Since demonstrations are better than words, check the demo link below! author: ultrabug links: PyPI | Github | Demo installation: pip install mkdocs-static-i18n","title":"static-i18n"},{"location":"plugins/internationalization--localization/#mkdocs-mdpo","text":"An MkDocs plugin for translate your site to multiple language versions using PO files. This plugin is build in top of mdpo , allowing to parse a lot range of extensions texts updating PO files directly. Has compatibility with mkdocs-material and supports a lot of options to configure the process. You can even translate codeblocks , check the demo link below! author: mondeja links: PyPI | Github | Demo installation: pip install mkdocs-mdpo-plugin","title":"mkdocs-mdpo"},{"location":"plugins/links--references/","text":"Links & references \u00b6 Autolink References \u00b6 Looks for the presence of a reference to tickets from issues trackers like Jira, Linear, etc and automatically convert them to links that point to respective platforms. author: Saurabh Kumar theskumar links: Github | PyPI installation: pip install autolink-references-mkdocs-plugin plugins: - autolink_references: autolinks: - reference_prefix: AF- target_url: https://linear.com/AF-<num> - reference_prefix: PROJ- target_url: https://jiracloud.com/PROJ-<num> autorefs \u00b6 Automatically link across pages in MkDocs. Why another \"automatic cross linking\" plugin? Because none of the other implementations were meeting our requirements for mkdocstrings . mkdocs-autorefs is actually performant (no HTML re-parsing), compatible with other plugins, and provides an easy-to-use syntax. authors: @oprypin and @pawamoy links: PyPI | GitHub | Docs installation: pip install mkdocs-autorefs ezlinks \u00b6 Plugin for mkdocs which enables easier linking between pages. This plugin was written in order to provide an up-to-date and feature complete plugin for easily referencing documents with a variety of features: - File name linking (e.g. `[Text](file)`) - Absolute paths (e.g. `[Text](/link/to/file.md)`) - WikiLinks support (e.g. `[[Link]]`) author: Mick Orbik orbikm links: Github installation: pip install mkdocs-ezlinks-plugin unused-files \u00b6 Find unused (orphaned) files in your project. This is useful, e.g., if your project contains a lot of image files and you lost track which images are still in use. A file is considered \"used\" when it is referenced in at least one Markdown file of your project, either as an image or as a hyperlink reference. author: wilhelmer links: PyPI | GitHub | Docs installation: pip install mkdocs-unused-files gitlab \u00b6 Transform handles such as #1234 , %56 , !789 , &12 or $34 into links to a gitlab repository, given by the gitlab_url configuration option. author: Mathieu Giraud links: PyPI | Gitlab installation: pip install mkdocs-gitlab-plugin autoreflinks \u00b6 Automatically links heading references in the form [My heading] , similar to Pandoc\u2019s implicit_header_references extension . author: Paul Ouellette pauloue links: Github installation: pip install git+https://github.com/pauloue/mkdocs-autoreflinks-plugin autolinks \u00b6 Simplifies relative linking between documents. Allows you to link to pages and images within your MkDocs site without providing the entire relative path to the file in your document structure. author: Zach Hannum midnightprioriem links: Github | Docs installation: pip install mkdocs-autolinks-plugin roamlinks \u00b6 Inherit from autolinks, support [[mdfile]] -> [mdfile](path-to-file) , also implicit heading [[#A Title]] -> [#A Title](#a-title) author: jackiexiao jackiexiao links: PyPI | Github | Docs installation: pip install mkdocs-roamlinks-plugin abs-to-rel \u00b6 Mkdocs absolute to relative link converter. Mkdocs officially only supports relative links. While this makes sense there are situation where it is useful to make use of absolute links. For example when creating a document with absolute links to an image folder. If that file is to be moved later on, links are kept intact. author: Sander sander76 links: Github | Docs installation: pip install mkdocs-abs-rel-plugin webcontext \u00b6 Converting absolute image/link paths to webcontext aware paths. Use when you are not going to upload your MkDocs to the site root but rather a sub folder on an existing site. You will then be able to use the same absolute path (staring with \"/\") for development and after deploy. Examples of site urls before and after using the webcontext plugin: | Site Url | Context | Image before | Image after | | ---------------------- | ------- | ---------------- | -------------------- | | http://example.com/foo | /foo | /images/img1.jpg | /foo/images/img1.jpg | author: Darrel Kleynhans Darrelk links: PyPI | Github | Docs installation: pip install mkdocs_webcontext_plugin emailprotect \u00b6 Obscures email addresses from address-harvesting spam bots. author: Roland Freikamp rkoe links Github | Docs installation: pip install git+https://github.com/rkoe/mkdocs-emailprotect linkpatcher-plugin \u00b6 Extends the Markdown syntax by providing an alternative : header prefix, and provides special autolinking functionality for such headers. author: sekikawattt links: Github | Docs installation: pip install git+https://github.com/sekikawattt/mkdocs-linkpatcher-plugin redirects \u00b6 Makes it easy to create dynamic page redirects, so you can move docs around and prevent broken links. Instead of using the meta \u201credirect:\u201d support (which requires you to have extraneous Markdown files cluttering up your docs folder), this plugin dynamically generates the meta redirect HTML pages in the site_dir based on configuration in mkdocs.yml mapping old paths to new page locations. author: datarobot links: Pypi | Github | Docs installation: pip install mkdocs-redirects htmlproofer \u00b6 Validates URLs in rendered HTML files. author: Manu Zhang manuzhang links: Pypi | Github | Docs installation: pip install mkdocs-htmlproofer-plugin tooltipster-links \u00b6 Not functional with current release of Mkdocs Adds tooltips to preview the content of page links using tooltipster. author: Zach Hannum midnightprioriem links: Pypi | Github | Docs installation: pip install mkdocs-tooltipster-links-plugin alternate-link \u00b6 Simplifies internal links. Very simple mkdocs plugin using John Gruber's relative path link as an alternate syntax for internal links, removing the need to add the .md suffix for the target page. author: Cristi Mitrana cmitu links: Github | Docs installation: pip install git+https://github.com/cmitu/mkdocs-altlink-plugin/ mkdocs-alias-plugin \u00b6 Allows linking to your pages using a custom alias, such as [[my-alias]] . The syntax of the alias is reminiscent of MediaWiki links, while aliases themselves are defined in the meta section of the Markdown document. This allows for a decoupling of the wiki page from the file system in case you make frequent changes to filenames or your directory structure without having to fix broken links. author: Eddy Luten EddyLuten links: PyPI | Github installation: pip install mkdocs-alias-plugin","title":"\ud83d\udd17 \u94fe\u63a5\u548c\u53c2\u8003"},{"location":"plugins/links--references/#links-references","text":"","title":"Links &amp; references"},{"location":"plugins/links--references/#autolink-references","text":"Looks for the presence of a reference to tickets from issues trackers like Jira, Linear, etc and automatically convert them to links that point to respective platforms. author: Saurabh Kumar theskumar links: Github | PyPI installation: pip install autolink-references-mkdocs-plugin plugins: - autolink_references: autolinks: - reference_prefix: AF- target_url: https://linear.com/AF-<num> - reference_prefix: PROJ- target_url: https://jiracloud.com/PROJ-<num>","title":"Autolink References"},{"location":"plugins/links--references/#autorefs","text":"Automatically link across pages in MkDocs. Why another \"automatic cross linking\" plugin? Because none of the other implementations were meeting our requirements for mkdocstrings . mkdocs-autorefs is actually performant (no HTML re-parsing), compatible with other plugins, and provides an easy-to-use syntax. authors: @oprypin and @pawamoy links: PyPI | GitHub | Docs installation: pip install mkdocs-autorefs","title":"autorefs"},{"location":"plugins/links--references/#ezlinks","text":"Plugin for mkdocs which enables easier linking between pages. This plugin was written in order to provide an up-to-date and feature complete plugin for easily referencing documents with a variety of features: - File name linking (e.g. `[Text](file)`) - Absolute paths (e.g. `[Text](/link/to/file.md)`) - WikiLinks support (e.g. `[[Link]]`) author: Mick Orbik orbikm links: Github installation: pip install mkdocs-ezlinks-plugin","title":"ezlinks"},{"location":"plugins/links--references/#unused-files","text":"Find unused (orphaned) files in your project. This is useful, e.g., if your project contains a lot of image files and you lost track which images are still in use. A file is considered \"used\" when it is referenced in at least one Markdown file of your project, either as an image or as a hyperlink reference. author: wilhelmer links: PyPI | GitHub | Docs installation: pip install mkdocs-unused-files","title":"unused-files"},{"location":"plugins/links--references/#gitlab","text":"Transform handles such as #1234 , %56 , !789 , &12 or $34 into links to a gitlab repository, given by the gitlab_url configuration option. author: Mathieu Giraud links: PyPI | Gitlab installation: pip install mkdocs-gitlab-plugin","title":"gitlab"},{"location":"plugins/links--references/#autoreflinks","text":"Automatically links heading references in the form [My heading] , similar to Pandoc\u2019s implicit_header_references extension . author: Paul Ouellette pauloue links: Github installation: pip install git+https://github.com/pauloue/mkdocs-autoreflinks-plugin","title":"autoreflinks"},{"location":"plugins/links--references/#autolinks","text":"Simplifies relative linking between documents. Allows you to link to pages and images within your MkDocs site without providing the entire relative path to the file in your document structure. author: Zach Hannum midnightprioriem links: Github | Docs installation: pip install mkdocs-autolinks-plugin","title":"autolinks"},{"location":"plugins/links--references/#roamlinks","text":"Inherit from autolinks, support [[mdfile]] -> [mdfile](path-to-file) , also implicit heading [[#A Title]] -> [#A Title](#a-title) author: jackiexiao jackiexiao links: PyPI | Github | Docs installation: pip install mkdocs-roamlinks-plugin","title":"roamlinks"},{"location":"plugins/links--references/#abs-to-rel","text":"Mkdocs absolute to relative link converter. Mkdocs officially only supports relative links. While this makes sense there are situation where it is useful to make use of absolute links. For example when creating a document with absolute links to an image folder. If that file is to be moved later on, links are kept intact. author: Sander sander76 links: Github | Docs installation: pip install mkdocs-abs-rel-plugin","title":"abs-to-rel"},{"location":"plugins/links--references/#webcontext","text":"Converting absolute image/link paths to webcontext aware paths. Use when you are not going to upload your MkDocs to the site root but rather a sub folder on an existing site. You will then be able to use the same absolute path (staring with \"/\") for development and after deploy. Examples of site urls before and after using the webcontext plugin: | Site Url | Context | Image before | Image after | | ---------------------- | ------- | ---------------- | -------------------- | | http://example.com/foo | /foo | /images/img1.jpg | /foo/images/img1.jpg | author: Darrel Kleynhans Darrelk links: PyPI | Github | Docs installation: pip install mkdocs_webcontext_plugin","title":"webcontext"},{"location":"plugins/links--references/#emailprotect","text":"Obscures email addresses from address-harvesting spam bots. author: Roland Freikamp rkoe links Github | Docs installation: pip install git+https://github.com/rkoe/mkdocs-emailprotect","title":"emailprotect"},{"location":"plugins/links--references/#linkpatcher-plugin","text":"Extends the Markdown syntax by providing an alternative : header prefix, and provides special autolinking functionality for such headers. author: sekikawattt links: Github | Docs installation: pip install git+https://github.com/sekikawattt/mkdocs-linkpatcher-plugin","title":"linkpatcher-plugin"},{"location":"plugins/links--references/#redirects","text":"Makes it easy to create dynamic page redirects, so you can move docs around and prevent broken links. Instead of using the meta \u201credirect:\u201d support (which requires you to have extraneous Markdown files cluttering up your docs folder), this plugin dynamically generates the meta redirect HTML pages in the site_dir based on configuration in mkdocs.yml mapping old paths to new page locations. author: datarobot links: Pypi | Github | Docs installation: pip install mkdocs-redirects","title":"redirects"},{"location":"plugins/links--references/#htmlproofer","text":"Validates URLs in rendered HTML files. author: Manu Zhang manuzhang links: Pypi | Github | Docs installation: pip install mkdocs-htmlproofer-plugin","title":"htmlproofer"},{"location":"plugins/links--references/#tooltipster-links","text":"Not functional with current release of Mkdocs Adds tooltips to preview the content of page links using tooltipster. author: Zach Hannum midnightprioriem links: Pypi | Github | Docs installation: pip install mkdocs-tooltipster-links-plugin","title":"tooltipster-links"},{"location":"plugins/links--references/#alternate-link","text":"Simplifies internal links. Very simple mkdocs plugin using John Gruber's relative path link as an alternate syntax for internal links, removing the need to add the .md suffix for the target page. author: Cristi Mitrana cmitu links: Github | Docs installation: pip install git+https://github.com/cmitu/mkdocs-altlink-plugin/","title":"alternate-link"},{"location":"plugins/links--references/#mkdocs-alias-plugin","text":"Allows linking to your pages using a custom alias, such as [[my-alias]] . The syntax of the alias is reminiscent of MediaWiki links, while aliases themselves are defined in the meta section of the Markdown document. This allows for a decoupling of the wiki page from the file system in case you make frequent changes to filenames or your directory structure without having to fix broken links. author: Eddy Luten EddyLuten links: PyPI | Github installation: pip install mkdocs-alias-plugin","title":"mkdocs-alias-plugin"},{"location":"plugins/navigation--page-building/","text":"Navigation & page building \u00b6 exclude \u00b6 Lets you exclude arbitrary file paths and patterns from the input. Normally, mkdocs will include every file in the docs directory in the output, which is not always what you want. author: apenwarr links: GitHub | Docs installation: pip install mkdocs-exclude select-files \u00b6 Filters out files (pages) using a parametrized regular expression. author: Jacques Supcik supcik links: PyPI | Github | Docs installation: pip install mkdocs-select-files awesome-pages \u00b6 Simplifies configuring page titles and their order. Allows you to customize how your pages show up the navigation of your MkDocs without having to configure the full structure in your mkdocs.yml . It gives you detailed control using a small configuration file directly placed in the relevant directory of your documentation. Note: This plugin works best without a nav or pages entry in your mkdocs.yml . Having a nav entry is supported, but you might not get the results you expect, especially if your nav structure doesn\u2019t match the file structure. author: Lukas Geiter lukasgeiter links: PyPI | Github | Docs installation: pip install mkdocs-awesome-pages-plugin mkdocs-nav-enhancements \u00b6 Enhances the nav. Supports more types of Markdown titles, including level 1\u20136 atx-style headers and Setext-style headers. Collapses folders with only one file in, to help keep the nav clean. author: Ryan Conway rylon links: PyPI installation: pip install mkdocs-nav-enhancements navtitles \u00b6 Ensures that all entries in the site navigation are shown with their best title. By default, if titles are not specified in the configuration yaml, the file name is used in their place which may not always be aesthetically pleasing. The plugin will add some build overhead as it effectively loads all pages twice. author: Andy Oakley andyoakley links: GitHub | Docs installation: pip install git+https://github.com/andyoakley/mkdocs-navtitles section-index \u00b6 Makes nav section headings clickable, leading to a section index page. nav: ( mkdocs.yml ) Nav before Nav after - Borgs: - borgs/index.md - Foo: borgs/foo.md - Bar: borgs/bar.md * Borgs * [Index](#) * [Foo](#) * [Bar](#) * [Borgs](#) * [Foo](#) * [Bar](#) author: Oleh Prypin oprypin links: PyPI | GitHub | Docs | Demo installation: pip install mkdocs-section-index literate-nav \u00b6 Replaces the nav: section of the mkdocs.yml configuration with a simple Markdown file, or can infer (portions of) it from the documentation's directory structure. An alternative to awesome-pages . Assists with migration from GitBook . author: Oleh Prypin oprypin links: PyPI | GitHub | Docs installation: pip install mkdocs-literate-nav encryptcontent \u00b6 Allows you to have password protected articles and pages in MkDocs. The content is encrypted with AES-256 in Python using PyCrypto, and decrypted in the browser with Crypto-JS. It has been tested in Python 2.7 and Python 3.5. author: CoinK0in links: GitHub | Docs installation: pip install mkdocs-encryptcontent-plugin awesome-list \u00b6 Injects social media cards for each entry in an awesome-list. author: Carlos Pereira Atencio carlosperate links: Github | Docs installation: pip install git+https://github.com/carlosperate/mkdocs-awesome-list-plugin toc-sidebar \u00b6 Allows users to add additional content to the ToC sidebar using the Material theme. author: Zach Hannum midnightprioriem links: PyPI | GitHub | Docs installation: pip install mkdocs-toc-sidebar-plugin mkdocs-simple-hooks \u00b6 Define your own hooks for mkdocs, without having to create a new package. author: Andrzej Klajnert aklajnert links: PyPI | GitHub installation: pip install mkdocs-simple-hooks schema-reader \u00b6 Converts JSON Schema files into readable documentation. author: Tom Robinson magicaljellybeans links: PyPI | Github installation: pip install mkdocs-schema-reader pagenav-generator \u00b6 Plugin to quickly create a ToC like list of all pages within a directory, based on the directory's .pages file. This requires awesome-pages to work properly. Just add a {nav} where you want the list to show up. author: Lukas Geiter lukasgeiter (Distributed by Andre_601 Andre601 links: GitHub installation: pip install git+https://github.com/Andre601/mkdocs-pagenav-generator mkdocs-categories-plugin \u00b6 This plugin allows you to categorize the pages in your wiki. It allows for multiple categories per page and will generate a category index page with links to each page within the category. The title of your page will be used as the link text. It's easy to configure via the meta section of your pages: --- categories: - Novels - Fiction --- author: Eddy Luten EddyLuten links: PyPI | Github installation: pip install mkdocs-categories-plugin","title":"\ud83e\udded \u5bfc\u822a\u548c\u9875\u9762\u5efa\u8bbe"},{"location":"plugins/navigation--page-building/#navigation-page-building","text":"","title":"Navigation &amp; page building"},{"location":"plugins/navigation--page-building/#exclude","text":"Lets you exclude arbitrary file paths and patterns from the input. Normally, mkdocs will include every file in the docs directory in the output, which is not always what you want. author: apenwarr links: GitHub | Docs installation: pip install mkdocs-exclude","title":"exclude"},{"location":"plugins/navigation--page-building/#select-files","text":"Filters out files (pages) using a parametrized regular expression. author: Jacques Supcik supcik links: PyPI | Github | Docs installation: pip install mkdocs-select-files","title":"select-files"},{"location":"plugins/navigation--page-building/#awesome-pages","text":"Simplifies configuring page titles and their order. Allows you to customize how your pages show up the navigation of your MkDocs without having to configure the full structure in your mkdocs.yml . It gives you detailed control using a small configuration file directly placed in the relevant directory of your documentation. Note: This plugin works best without a nav or pages entry in your mkdocs.yml . Having a nav entry is supported, but you might not get the results you expect, especially if your nav structure doesn\u2019t match the file structure. author: Lukas Geiter lukasgeiter links: PyPI | Github | Docs installation: pip install mkdocs-awesome-pages-plugin","title":"awesome-pages"},{"location":"plugins/navigation--page-building/#mkdocs-nav-enhancements","text":"Enhances the nav. Supports more types of Markdown titles, including level 1\u20136 atx-style headers and Setext-style headers. Collapses folders with only one file in, to help keep the nav clean. author: Ryan Conway rylon links: PyPI installation: pip install mkdocs-nav-enhancements","title":"mkdocs-nav-enhancements"},{"location":"plugins/navigation--page-building/#navtitles","text":"Ensures that all entries in the site navigation are shown with their best title. By default, if titles are not specified in the configuration yaml, the file name is used in their place which may not always be aesthetically pleasing. The plugin will add some build overhead as it effectively loads all pages twice. author: Andy Oakley andyoakley links: GitHub | Docs installation: pip install git+https://github.com/andyoakley/mkdocs-navtitles","title":"navtitles"},{"location":"plugins/navigation--page-building/#section-index","text":"Makes nav section headings clickable, leading to a section index page. nav: ( mkdocs.yml ) Nav before Nav after - Borgs: - borgs/index.md - Foo: borgs/foo.md - Bar: borgs/bar.md * Borgs * [Index](#) * [Foo](#) * [Bar](#) * [Borgs](#) * [Foo](#) * [Bar](#) author: Oleh Prypin oprypin links: PyPI | GitHub | Docs | Demo installation: pip install mkdocs-section-index","title":"section-index"},{"location":"plugins/navigation--page-building/#literate-nav","text":"Replaces the nav: section of the mkdocs.yml configuration with a simple Markdown file, or can infer (portions of) it from the documentation's directory structure. An alternative to awesome-pages . Assists with migration from GitBook . author: Oleh Prypin oprypin links: PyPI | GitHub | Docs installation: pip install mkdocs-literate-nav","title":"literate-nav"},{"location":"plugins/navigation--page-building/#encryptcontent","text":"Allows you to have password protected articles and pages in MkDocs. The content is encrypted with AES-256 in Python using PyCrypto, and decrypted in the browser with Crypto-JS. It has been tested in Python 2.7 and Python 3.5. author: CoinK0in links: GitHub | Docs installation: pip install mkdocs-encryptcontent-plugin","title":"encryptcontent"},{"location":"plugins/navigation--page-building/#awesome-list","text":"Injects social media cards for each entry in an awesome-list. author: Carlos Pereira Atencio carlosperate links: Github | Docs installation: pip install git+https://github.com/carlosperate/mkdocs-awesome-list-plugin","title":"awesome-list"},{"location":"plugins/navigation--page-building/#toc-sidebar","text":"Allows users to add additional content to the ToC sidebar using the Material theme. author: Zach Hannum midnightprioriem links: PyPI | GitHub | Docs installation: pip install mkdocs-toc-sidebar-plugin","title":"toc-sidebar"},{"location":"plugins/navigation--page-building/#mkdocs-simple-hooks","text":"Define your own hooks for mkdocs, without having to create a new package. author: Andrzej Klajnert aklajnert links: PyPI | GitHub installation: pip install mkdocs-simple-hooks","title":"mkdocs-simple-hooks"},{"location":"plugins/navigation--page-building/#schema-reader","text":"Converts JSON Schema files into readable documentation. author: Tom Robinson magicaljellybeans links: PyPI | Github installation: pip install mkdocs-schema-reader","title":"schema-reader"},{"location":"plugins/navigation--page-building/#pagenav-generator","text":"Plugin to quickly create a ToC like list of all pages within a directory, based on the directory's .pages file. This requires awesome-pages to work properly. Just add a {nav} where you want the list to show up. author: Lukas Geiter lukasgeiter (Distributed by Andre_601 Andre601 links: GitHub installation: pip install git+https://github.com/Andre601/mkdocs-pagenav-generator","title":"pagenav-generator"},{"location":"plugins/navigation--page-building/#mkdocs-categories-plugin","text":"This plugin allows you to categorize the pages in your wiki. It allows for multiple categories per page and will generate a category index page with links to each page within the category. The title of your page will be used as the link text. It's easy to configure via the meta section of your pages: --- categories: - Novels - Fiction --- author: Eddy Luten EddyLuten links: PyPI | Github installation: pip install mkdocs-categories-plugin","title":"mkdocs-categories-plugin"},{"location":"plugins/other/","text":"\u5176\u5b83\u63d2\u4ef6 \u00b6 mkdocs-tooltips \u00b6 \u5728 MKDOC \u4e2d\u6dfb\u52a0\u5e76\u81ea\u5b9a\u4e49\u5de5\u5177\u63d0\u793a\u3002 author: Nathana\u00ebl Jourdane @roipoussiere links: Documentation | GitLab installation: pip install mkdocs-tooltips mkdocs-coverage \u00b6 \u5c06\u60a8\u7684\u8986\u76d6\u8303\u56f4 HTML \u62a5\u544a\u96c6\u6210\u5230 MKDOCS \u7f51\u7ad9\u4e2d\u3002 author: Timoth\u00e9e Mazzucotelli @pawamoy links: Pypi | Github | Docs installation: pip install mkdocs-coverage mkdocs-spellcheck \u00b6 \u62fc\u5199\u68c0\u67e5\u60a8\u7684\u9875\u9762\u3002 author: Timoth\u00e9e Mazzucotelli pawamoy links: Pypi | Github | Docs installation: pip install mkdocs-spellcheck webmsx \u00b6 \u7528\u542f\u52a8 WebMSX \u6e38\u620f\u6a21\u62df\u5668\u7684 Web \u64ad\u653e\u5668\u4ee3\u66ff\u81ea\u5b9a\u4e49\u6807\u7b7e\u3002 author: Francesco Maida fmaida links: Github installation: pip install git+https://github.com/fmaida/webmsx-mkdocs-plugin pico-8 \u00b6 \u5728\u6bcf\u7bc7 MKDOCS \u6587\u7ae0\u4e2d\u67e5\u770b\u6b64\u7c7b\u6807\u7b7e\u7684\u5b58\u5728 {{ pico-8: 12345 }} . \u7136\u540e\uff0c\u5b83\u5c06\u7528\u7f51\u7edc\u64ad\u653e\u5668\u66ff\u6362\u5b83\uff0c\u8be5\u7f51\u7edc\u64ad\u653e\u5668\u5c06\u5141\u8bb8\u9875\u9762\u7684\u8bfb\u8005\u901a\u8fc7\u9875\u9762\u6b23\u8d4f Pico-8 \u6e38\u620f\u3002 author: Francesco Maida fmaida links: PyPI | Github | Docs installation: pip install pico8-mkdocs-plugin file-selector \u00b6 No description at this point. author: Avente LLC links: PyPI installation: pip install mkdocs-file-selector same-dir \u00b6 Allows placing mkdocs.yml into the same directory as documentation sources ( docs/ ). author: Oleh Prypin oprypin links: PyPI | GitHub | Docs | Example installation: pip install mkdocs-same-dir ThumbnailMaker \u00b6 Provides a mechanism to indicate, in Markdown, the desire for PDF files and YouTube links to have a thumbnail image, automatically generated/downloaded. author: Norman Lorrain normanlorrain links: PyPI | Github | Docs installation: pip install mkdocs-thumbnails badges \u00b6 Add badges to your pages. author: six-two links: PyPI | Github | Docs installation: pip install mkdocs-badges placeholder \u00b6 Add placeholders to your pages, that can dynamically be replaced with values supplied by the site's visitors. author: six-two links: PyPI | Github | Docs installation: pip install mkdocs-placeholder-plugin callouts \u00b6 \u6ce8\u91ca\u72c2\u4f18\u5316","title":"\u2795 \u5176\u4ed6"},{"location":"plugins/other/#_1","text":"","title":"\u5176\u5b83\u63d2\u4ef6"},{"location":"plugins/other/#mkdocs-tooltips","text":"\u5728 MKDOC \u4e2d\u6dfb\u52a0\u5e76\u81ea\u5b9a\u4e49\u5de5\u5177\u63d0\u793a\u3002 author: Nathana\u00ebl Jourdane @roipoussiere links: Documentation | GitLab installation: pip install mkdocs-tooltips","title":"mkdocs-tooltips"},{"location":"plugins/other/#mkdocs-coverage","text":"\u5c06\u60a8\u7684\u8986\u76d6\u8303\u56f4 HTML \u62a5\u544a\u96c6\u6210\u5230 MKDOCS \u7f51\u7ad9\u4e2d\u3002 author: Timoth\u00e9e Mazzucotelli @pawamoy links: Pypi | Github | Docs installation: pip install mkdocs-coverage","title":"mkdocs-coverage"},{"location":"plugins/other/#mkdocs-spellcheck","text":"\u62fc\u5199\u68c0\u67e5\u60a8\u7684\u9875\u9762\u3002 author: Timoth\u00e9e Mazzucotelli pawamoy links: Pypi | Github | Docs installation: pip install mkdocs-spellcheck","title":"mkdocs-spellcheck"},{"location":"plugins/other/#webmsx","text":"\u7528\u542f\u52a8 WebMSX \u6e38\u620f\u6a21\u62df\u5668\u7684 Web \u64ad\u653e\u5668\u4ee3\u66ff\u81ea\u5b9a\u4e49\u6807\u7b7e\u3002 author: Francesco Maida fmaida links: Github installation: pip install git+https://github.com/fmaida/webmsx-mkdocs-plugin","title":"webmsx"},{"location":"plugins/other/#pico-8","text":"\u5728\u6bcf\u7bc7 MKDOCS \u6587\u7ae0\u4e2d\u67e5\u770b\u6b64\u7c7b\u6807\u7b7e\u7684\u5b58\u5728 {{ pico-8: 12345 }} . \u7136\u540e\uff0c\u5b83\u5c06\u7528\u7f51\u7edc\u64ad\u653e\u5668\u66ff\u6362\u5b83\uff0c\u8be5\u7f51\u7edc\u64ad\u653e\u5668\u5c06\u5141\u8bb8\u9875\u9762\u7684\u8bfb\u8005\u901a\u8fc7\u9875\u9762\u6b23\u8d4f Pico-8 \u6e38\u620f\u3002 author: Francesco Maida fmaida links: PyPI | Github | Docs installation: pip install pico8-mkdocs-plugin","title":"pico-8"},{"location":"plugins/other/#file-selector","text":"No description at this point. author: Avente LLC links: PyPI installation: pip install mkdocs-file-selector","title":"file-selector"},{"location":"plugins/other/#same-dir","text":"Allows placing mkdocs.yml into the same directory as documentation sources ( docs/ ). author: Oleh Prypin oprypin links: PyPI | GitHub | Docs | Example installation: pip install mkdocs-same-dir","title":"same-dir"},{"location":"plugins/other/#thumbnailmaker","text":"Provides a mechanism to indicate, in Markdown, the desire for PDF files and YouTube links to have a thumbnail image, automatically generated/downloaded. author: Norman Lorrain normanlorrain links: PyPI | Github | Docs installation: pip install mkdocs-thumbnails","title":"ThumbnailMaker"},{"location":"plugins/other/#badges","text":"Add badges to your pages. author: six-two links: PyPI | Github | Docs installation: pip install mkdocs-badges","title":"badges"},{"location":"plugins/other/#placeholder","text":"Add placeholders to your pages, that can dynamically be replaced with values supplied by the site's visitors. author: six-two links: PyPI | Github | Docs installation: pip install mkdocs-placeholder-plugin","title":"placeholder"},{"location":"plugins/other/#callouts","text":"\u6ce8\u91ca\u72c2\u4f18\u5316","title":"callouts"},{"location":"plugins/pdf--site-conversion/","text":"PDF & site conversion \u00b6 mkdocs-with-pdf \u00b6 This plugin will generate a single PDF file from your MkDocs repository. author: orzih links: Pypi | Github installation: pip install mkdocs-with-pdf mkpdfs \u00b6 Generate nice documentation PDFs. What makes this plugin different to other MkDocs pdf generator plugins, is that it\u2019s not dependent to a given plugin and may work with absolutely any MkDocs theme. depends on WeasyPrint which depends on cairo, Pango and GDK-PixBuf. They need to be installed separately. author: Gerry Ntabuhashe comwes links: Pypi | Github | Docs installation: pip install mkpdfs-mkdocs pdf-export \u00b6 Exports content pages as PDF files. The pdf-export plugin will export all markdown pages in your MkDocs repository as PDF files using WeasyPrint . The exported documents support many advanced features missing in most other PDF exports, such as a PDF Index and support for CSS paged media module . author: Terry Zhao zhaoterryy links: Pypi | Github | Docs installation: pip install mkdocs-pdf-export-plugin print-site \u00b6 Adds an additional page that combines all pages, allowing easy exports to PDF and standalone HTML. author: Tim Vink timvink links: Pypi | Github | Docs installation: pip install mkdocs-print-site-plugin mk2pdf-export \u00b6 The plugin will export all markdown pages in your MkDocs repository as PDF files using pandoc. The exported documents support many advanced features missing in most other PDF exports, such as PDF navigation, PDF pagenum. author: Liu, Hao HaoLiuHust links: Pypi | Github | Docs installation: pip install mkdocs-mk2pdf-plugin pdf-with-js \u00b6 Lets you export your documentation as PDF with rendered JavaScript content. This is very useful if you want to have your mermaid diagrams in your pdf documents as well. A download link will be added to the top of your documentation. author: Stefan Brandstaetter smaXtecStefan links: PyPI | Github | Docs installation: pip install mkdocs-pdf-with-js-plugin cordova \u00b6 Deploys documentation to any mobile device via Apache Cordova . Apache Cordova (formerly PhoneGap) is a mobile application development framework that enables software programmers to build applications for mobile devices using CSS3, HTML5, and JavaScript instead of relying on platform-specific APIs like those in Android, iOS, or Windows Phone. This plugin is under development, but it is tested and it should probably work for you. author: Lucas Ramage lramage links: Gitlab | Docs installation: pip install git+https://gitlab.com/lramage/mkdocs-cordova-plugin helm-repo \u00b6 Turns docs website into Helm repository author: M00nF1sh links: Pypi | Github installation: pip install mkdocs-helm","title":"\ud83d\udcc4 PDF & \u7ad9\u70b9\u8f6c\u6362"},{"location":"plugins/pdf--site-conversion/#pdf-site-conversion","text":"","title":"PDF &amp; site conversion"},{"location":"plugins/pdf--site-conversion/#mkdocs-with-pdf","text":"This plugin will generate a single PDF file from your MkDocs repository. author: orzih links: Pypi | Github installation: pip install mkdocs-with-pdf","title":"mkdocs-with-pdf"},{"location":"plugins/pdf--site-conversion/#mkpdfs","text":"Generate nice documentation PDFs. What makes this plugin different to other MkDocs pdf generator plugins, is that it\u2019s not dependent to a given plugin and may work with absolutely any MkDocs theme. depends on WeasyPrint which depends on cairo, Pango and GDK-PixBuf. They need to be installed separately. author: Gerry Ntabuhashe comwes links: Pypi | Github | Docs installation: pip install mkpdfs-mkdocs","title":"mkpdfs"},{"location":"plugins/pdf--site-conversion/#pdf-export","text":"Exports content pages as PDF files. The pdf-export plugin will export all markdown pages in your MkDocs repository as PDF files using WeasyPrint . The exported documents support many advanced features missing in most other PDF exports, such as a PDF Index and support for CSS paged media module . author: Terry Zhao zhaoterryy links: Pypi | Github | Docs installation: pip install mkdocs-pdf-export-plugin","title":"pdf-export"},{"location":"plugins/pdf--site-conversion/#print-site","text":"Adds an additional page that combines all pages, allowing easy exports to PDF and standalone HTML. author: Tim Vink timvink links: Pypi | Github | Docs installation: pip install mkdocs-print-site-plugin","title":"print-site"},{"location":"plugins/pdf--site-conversion/#mk2pdf-export","text":"The plugin will export all markdown pages in your MkDocs repository as PDF files using pandoc. The exported documents support many advanced features missing in most other PDF exports, such as PDF navigation, PDF pagenum. author: Liu, Hao HaoLiuHust links: Pypi | Github | Docs installation: pip install mkdocs-mk2pdf-plugin","title":"mk2pdf-export"},{"location":"plugins/pdf--site-conversion/#pdf-with-js","text":"Lets you export your documentation as PDF with rendered JavaScript content. This is very useful if you want to have your mermaid diagrams in your pdf documents as well. A download link will be added to the top of your documentation. author: Stefan Brandstaetter smaXtecStefan links: PyPI | Github | Docs installation: pip install mkdocs-pdf-with-js-plugin","title":"pdf-with-js"},{"location":"plugins/pdf--site-conversion/#cordova","text":"Deploys documentation to any mobile device via Apache Cordova . Apache Cordova (formerly PhoneGap) is a mobile application development framework that enables software programmers to build applications for mobile devices using CSS3, HTML5, and JavaScript instead of relying on platform-specific APIs like those in Android, iOS, or Windows Phone. This plugin is under development, but it is tested and it should probably work for you. author: Lucas Ramage lramage links: Gitlab | Docs installation: pip install git+https://gitlab.com/lramage/mkdocs-cordova-plugin","title":"cordova"},{"location":"plugins/pdf--site-conversion/#helm-repo","text":"Turns docs website into Helm repository author: M00nF1sh links: Pypi | Github installation: pip install mkdocs-helm","title":"helm-repo"},{"location":"plugins/reusing-content-snippets--includes/","text":"Reusing content, snippets & includes \u00b6 mkdocs-embed-external-markdown \u00b6 Allow to inject section or all full markdown content from a given url. The goal is to show different markdown from different sources inside your MkDocs project. author: Stas Yakobov fire1ce links: PyPI | Github | Docs installation: pip install mkdocs-embed-external-markdown codeinclude \u00b6 Allows some advanced 'includes\u2019 functionality to be used for embedded code blocks. This is effectively an extended Markdown format, but is intended to degrade gracefully when rendered with a different renderer. author: Richard North rnorth links: Github | Docs installation: pip install git+https://github.com/rnorth/mkdocs-codeinclude-plugin replace \u00b6 The markdown-include plugin provides a way to \u201cembed\u201d the contents of one file in another markdown file. The replace plugin allows in reusing the repeating portions of the documentation, instead of rewriting them everywhere. author: Sivagiri Visakan SivagiriVisakan links: Github | Docs installation: pip install git+https://github.com/SivagiriVisakan/mkdocs-replace-plugin snippet \u00b6 Injects snippets from a file in a git repository. author: Michael Privat mprivat links: Pypi | Github | Docs installation: pip install mkdocs-snippet-plugin git snippet \u00b6 Inject snippet or all markdown content from a given remote git repository author: Samuel Comino SamazoOo links: Pypi | Github | Docs installation: pip install mkdocs-gitsnippet-plugin include-markdown \u00b6 Include Markdown content from files author: Joe Rickerby joerick links: Pypi | Github | Docs installation: pip install mkdocs-include-markdown-plugin meta-descriptions \u00b6 Generate meta descriptions for your pages using the first paragraph of each page. This is useful if you start each page with a short introduction or summary that can be reused as the meta description. author: Paulo Ribeiro links: PyPI | GitHub | Docs | Demo installation: pip install mkdocs-meta-descriptions-plugin mkdocs-version-annotations \u00b6 A few simple macros to make it quicker and easier to add self-consistent annotations to your documentation about differences between project versions. author: Glenn Matthews glennmatthews links: PyPI | Github | Docs installation: pip install mkdocs-version-annotations","title":"\ud83d\udcc1 \u91cd\u590d\u4f7f\u7528\u5185\u5bb9\uff0c\u6458\u8981\u548c\u5305\u62ec"},{"location":"plugins/reusing-content-snippets--includes/#reusing-content-snippets-includes","text":"","title":"Reusing content, snippets &amp; includes"},{"location":"plugins/reusing-content-snippets--includes/#mkdocs-embed-external-markdown","text":"Allow to inject section or all full markdown content from a given url. The goal is to show different markdown from different sources inside your MkDocs project. author: Stas Yakobov fire1ce links: PyPI | Github | Docs installation: pip install mkdocs-embed-external-markdown","title":"mkdocs-embed-external-markdown"},{"location":"plugins/reusing-content-snippets--includes/#codeinclude","text":"Allows some advanced 'includes\u2019 functionality to be used for embedded code blocks. This is effectively an extended Markdown format, but is intended to degrade gracefully when rendered with a different renderer. author: Richard North rnorth links: Github | Docs installation: pip install git+https://github.com/rnorth/mkdocs-codeinclude-plugin","title":"codeinclude"},{"location":"plugins/reusing-content-snippets--includes/#replace","text":"The markdown-include plugin provides a way to \u201cembed\u201d the contents of one file in another markdown file. The replace plugin allows in reusing the repeating portions of the documentation, instead of rewriting them everywhere. author: Sivagiri Visakan SivagiriVisakan links: Github | Docs installation: pip install git+https://github.com/SivagiriVisakan/mkdocs-replace-plugin","title":"replace"},{"location":"plugins/reusing-content-snippets--includes/#snippet","text":"Injects snippets from a file in a git repository. author: Michael Privat mprivat links: Pypi | Github | Docs installation: pip install mkdocs-snippet-plugin","title":"snippet"},{"location":"plugins/reusing-content-snippets--includes/#git-snippet","text":"Inject snippet or all markdown content from a given remote git repository author: Samuel Comino SamazoOo links: Pypi | Github | Docs installation: pip install mkdocs-gitsnippet-plugin","title":"git snippet"},{"location":"plugins/reusing-content-snippets--includes/#include-markdown","text":"Include Markdown content from files author: Joe Rickerby joerick links: Pypi | Github | Docs installation: pip install mkdocs-include-markdown-plugin","title":"include-markdown"},{"location":"plugins/reusing-content-snippets--includes/#meta-descriptions","text":"Generate meta descriptions for your pages using the first paragraph of each page. This is useful if you start each page with a short introduction or summary that can be reused as the meta description. author: Paulo Ribeiro links: PyPI | GitHub | Docs | Demo installation: pip install mkdocs-meta-descriptions-plugin","title":"meta-descriptions"},{"location":"plugins/reusing-content-snippets--includes/#mkdocs-version-annotations","text":"A few simple macros to make it quicker and easier to add self-consistent annotations to your documentation about differences between project versions. author: Glenn Matthews glennmatthews links: PyPI | Github | Docs installation: pip install mkdocs-version-annotations","title":"mkdocs-version-annotations"},{"location":"plugins/search--tables-of-content/","text":"Search & tables of content \u00b6 search \u00b6 Built-in MkDocs search plugin. fastsearch \u00b6 Fork of the built-in search plugin that excludes code blocks and tables, which becomes necessary when hosting notebooks and other large content. author: Andy Oakley andyoakley links: GitHub | Docs installation: pip install git+https://github.com/andyoakley/mkdocs-fastsearch localsearch \u00b6 A MkDocs plugin to replace the native \u201csearch\u201d plugin with a search plugin that also works locally (file:// protocol). This plugin currently only works with the Material for MkDocs theme. author: wilhelmer links: PyPI | GitHub | Docs installation pip install mkdocs-localsearch exclude-search \u00b6 Lets you exclude selected files or sections from the search index, results will not show up in the search. author: chrieke links: GitHub | PyPI installation: pip install mkdocs-exclude-search tags \u00b6 Support for tags in the yaml-metadata in the header of markdown files. Extracts this metadata and creates a \u201cTags\u201d page which lists all tags and all pages for each tag. The metadata has to be enclosed in --- lines, and must include a title: property (otherwise the page will appear as \u201cuntitled\u201d in the tags page). --- title: Welcome tags: - testing - unimportant --- # Welcome to MkDocs author: jldiaz links: Github | Docs installation: pip install git+https://github.com/jldiaz/mkdocs-plugin-tags mdoctag \u00b6 This plugin just make a json file that contains meta data \u201ctags\u201d. To display aggregation of tag, you need to make pages referencing the json file. author: srymh links: Github | Docs | Demo installation: pip install git+https://github.com/srymh/MkdocsTagPlugin autotag \u00b6 Automatically add tags to certain pages based on their path or filename. You will still need to use another tag plugin (such as mkdocs-material ) for actually managing/displaying the tags. author: six-two links: PyPI | Github | Docs installation: pip install mkdocs-auto-tag-plugin Search (for mkdocs-material ) \u00b6 Material for MkDocs provides its own search plugin, which provides rich search previews (rendering text and code blocks in search), advanced separator support with lookahead and allows for the exclusion of whole pages, sections, and blocks . author: squidfunk links: GitHub installation: see documentation Tags (for mkdocs-material ) \u00b6 Material for MkDocs adds first-class support for categorizing pages with tags, which adds the possibility to group related pages and make them discoverable via search and a dedicated tags index. If your documentation is large, tags can help to discover relevant information faster. author: squidfunk links: GitHub installation: see documentation","title":"\ud83d\udd0d \u641c\u7d22\u5185\u5bb9"},{"location":"plugins/search--tables-of-content/#search-tables-of-content","text":"","title":"Search &amp; tables of content"},{"location":"plugins/search--tables-of-content/#search","text":"Built-in MkDocs search plugin.","title":"search"},{"location":"plugins/search--tables-of-content/#fastsearch","text":"Fork of the built-in search plugin that excludes code blocks and tables, which becomes necessary when hosting notebooks and other large content. author: Andy Oakley andyoakley links: GitHub | Docs installation: pip install git+https://github.com/andyoakley/mkdocs-fastsearch","title":"fastsearch"},{"location":"plugins/search--tables-of-content/#localsearch","text":"A MkDocs plugin to replace the native \u201csearch\u201d plugin with a search plugin that also works locally (file:// protocol). This plugin currently only works with the Material for MkDocs theme. author: wilhelmer links: PyPI | GitHub | Docs installation pip install mkdocs-localsearch","title":"localsearch"},{"location":"plugins/search--tables-of-content/#exclude-search","text":"Lets you exclude selected files or sections from the search index, results will not show up in the search. author: chrieke links: GitHub | PyPI installation: pip install mkdocs-exclude-search","title":"exclude-search"},{"location":"plugins/search--tables-of-content/#tags","text":"Support for tags in the yaml-metadata in the header of markdown files. Extracts this metadata and creates a \u201cTags\u201d page which lists all tags and all pages for each tag. The metadata has to be enclosed in --- lines, and must include a title: property (otherwise the page will appear as \u201cuntitled\u201d in the tags page). --- title: Welcome tags: - testing - unimportant --- # Welcome to MkDocs author: jldiaz links: Github | Docs installation: pip install git+https://github.com/jldiaz/mkdocs-plugin-tags","title":"tags"},{"location":"plugins/search--tables-of-content/#mdoctag","text":"This plugin just make a json file that contains meta data \u201ctags\u201d. To display aggregation of tag, you need to make pages referencing the json file. author: srymh links: Github | Docs | Demo installation: pip install git+https://github.com/srymh/MkdocsTagPlugin","title":"mdoctag"},{"location":"plugins/search--tables-of-content/#autotag","text":"Automatically add tags to certain pages based on their path or filename. You will still need to use another tag plugin (such as mkdocs-material ) for actually managing/displaying the tags. author: six-two links: PyPI | Github | Docs installation: pip install mkdocs-auto-tag-plugin","title":"autotag"},{"location":"plugins/search--tables-of-content/#search-for-mkdocs-material","text":"Material for MkDocs provides its own search plugin, which provides rich search previews (rendering text and code blocks in search), advanced separator support with lookahead and allows for the exclusion of whole pages, sections, and blocks . author: squidfunk links: GitHub installation: see documentation","title":"Search (for mkdocs-material)"},{"location":"plugins/search--tables-of-content/#tags-for-mkdocs-material","text":"Material for MkDocs adds first-class support for categorizing pages with tags, which adds the possibility to group related pages and make them discoverable via search and a dedicated tags index. If your documentation is large, tags can help to discover relevant information faster. author: squidfunk links: GitHub installation: see documentation","title":"Tags (for mkdocs-material)"},{"location":"plugins/site-management/","text":"Site management \u00b6 mkdocs-multirepo-plugin \u00b6 author: Joseph Doiron jdoiro3 links: PyPI | Github installation: pip install mkdocs-multirepo-plugin monorepo \u00b6 Build multiple documentation in a single Mkdocs. Designed for large codebases. This plugin enables you to build multiple sets of documentation in a single Mkdocs. It is designed to address writing documentation in Spotify\u2019s largest and most business-critical codebases (typically monoliths or monorepos). Support for multiple docs/ folders in Mkdocs. Having a single docs/ folder in a large codebase is hard to maintain. Who owns which documentation? What code is it associated with? Bringing docs closer to the associated code enables you to update them better, as well as leverage folder-based features such as [GitHub Codeowners]. Support for multiple navigations. In Spotify, large repositories typically are split up by multiple owners. These are split by folders. By introducing multiple mkdocs.yml files along with multiple docs/ folder, each team can take ownership of their own navigation. This plugin then intelligently merges of the documentation together into a single repository. Support across multiple repositories. Using Git Submodules it is possible to merge documentation across multiple repositories into a single codebase dynamically. The same great Mkdocs developer experience. It is possible to run mkdocs serve in the root to merge all of your documentation together, or in a subfolder to build specific documentation. Autoreload still works as usual. No more using symlinks ! Note: This plugin is in beta. Whilst it is not expected to significantly change in functionality, it may not yet be fully compatible with other Mkdocs configuration and thus may break with some advanced configurations. Once these have been resolved and all bugs have been ironed out, we will move this to a stable release. author: Spotify spotify links: PyPI | Github | Docs | Demo | Blog Post installation: pip install mkdocs-monorepo-plugin multirepo \u00b6 A bit like monorepo , but keeps MkDocs projects separate. This CLI tool allows you to build multiple MkDocs documentation projects and generate a landing page for them. Unlike monorepo, multirepo doesn't merge projects into one. Instead, multirepo adds the MkDocs projects as Git submodules, builds them individually, and generates an HTML landing page based on a template file. author: wilhelmer links: PyPI | GitHub | Docs | Demo installation: pip install mkdocs-multirepo mkdocs-yamp \u00b6 Yet Another Multirepo Plugin is another take on how to aggregate content from multiple source code repositories. Through mkdocs-yamp , users can define a list of repositories that are cloned into a local directory within the docs directory, allowing them to reference markdown files in arbitrary locations within the navigational page tree. author: Steven Terrana steven-terrana links: PyPI | Github installation: pip install mkdocs-yamp subsite \u00b6 Lets you integrate standalone MkDocs git submodules into a main repo. author: Jakub Z\u00e1rybnick\u00fd inuits links: GitHub | Docs installation: pip install git+https://github.com/inuits/mkdocs-subsite multiple \u00b6 Allows to merge mkdocs documentations dynamically author: experimaestro links: GitHub | Docs installation: pip install mkdocs-multiple simple (mkdocs-simple-plugin) \u00b6 Lets you build a doc site from markdown files and comments interspersed within your code. With this plugin, documentation files no longer need to be relegated to a dedicated docs folder. They can live alongside -- or within -- your source code. Support for navigation You can specify the navigation paths and titles for the documentation within your code, the same way you normally would with mkdocs. Simply consider the location of the mkdocs.yml file as the root of your site. Autoreload Auto-reload works on any file that was previously generated by this plugin. Auto-generate configuration Includes helper program mkdocs_simple_gen to automatically generate configuration file. Docker integration Create a local mkdocs site in any directory. author: Allison Thackston athackst links: PyPI | Github | Docs | Docker installation: pip install mkdocs-simple-plugin semiliterate (mkdocs-semiliterate) \u00b6 Extends Allison Thackston's simple with easy content inclusion from one file into another. With this addition and a couple of other tweaks, aims to provide a comfortable and reasonably complete environment for a \"semiliterate\" programming and documentation style. author: Glen Whitney links: PyPI | Source | Docs installation: pip install mkdocs-semiliterate mkdocs-versioning \u00b6 Lets you build different versions of documentation. For example, a newer versions of some software may work differently from an older version and it is important that users of an older version of the software reads the appropriate version of the documentation in order to ensure that the user has the correct information and uses the software appropriately. author: Zayd Patel zayd62 links: PyPI | Github | Docs installation: pip install mkdocs-versioning mike \u00b6 Although not technically a mkdocs plugin, it should be listed here. mike is a Python utility to easily deploy multiple versions of your MkDocs-powered docs to a Git branch, suitable for deploying to Github via gh-pages . Supported by mkdocs-material (see versioning ). author: Jim Porter jimporter links: PyPI | Github installation: pip install mike mkdocs-new-features-notifier \u00b6 Lets you notify users of new features in your product. It does this by identifying new documentation files, and having these listed under a blinking navigation entry. author: Kevin Obuya Obuya links: PyPI | Github | Docs installation: pip install mkdocs-new-features-notifier progress \u00b6 Outputs real-time updates from the build to the console. author: Reece Dunham links: GitHub | Docs installation: pip install mkdocs-plugin-progress","title":"\u2699\ufe0f \u7ad9\u70b9\u7ba1\u7406"},{"location":"plugins/site-management/#site-management","text":"","title":"Site management"},{"location":"plugins/site-management/#mkdocs-multirepo-plugin","text":"author: Joseph Doiron jdoiro3 links: PyPI | Github installation: pip install mkdocs-multirepo-plugin","title":"mkdocs-multirepo-plugin"},{"location":"plugins/site-management/#monorepo","text":"Build multiple documentation in a single Mkdocs. Designed for large codebases. This plugin enables you to build multiple sets of documentation in a single Mkdocs. It is designed to address writing documentation in Spotify\u2019s largest and most business-critical codebases (typically monoliths or monorepos). Support for multiple docs/ folders in Mkdocs. Having a single docs/ folder in a large codebase is hard to maintain. Who owns which documentation? What code is it associated with? Bringing docs closer to the associated code enables you to update them better, as well as leverage folder-based features such as [GitHub Codeowners]. Support for multiple navigations. In Spotify, large repositories typically are split up by multiple owners. These are split by folders. By introducing multiple mkdocs.yml files along with multiple docs/ folder, each team can take ownership of their own navigation. This plugin then intelligently merges of the documentation together into a single repository. Support across multiple repositories. Using Git Submodules it is possible to merge documentation across multiple repositories into a single codebase dynamically. The same great Mkdocs developer experience. It is possible to run mkdocs serve in the root to merge all of your documentation together, or in a subfolder to build specific documentation. Autoreload still works as usual. No more using symlinks ! Note: This plugin is in beta. Whilst it is not expected to significantly change in functionality, it may not yet be fully compatible with other Mkdocs configuration and thus may break with some advanced configurations. Once these have been resolved and all bugs have been ironed out, we will move this to a stable release. author: Spotify spotify links: PyPI | Github | Docs | Demo | Blog Post installation: pip install mkdocs-monorepo-plugin","title":"monorepo"},{"location":"plugins/site-management/#multirepo","text":"A bit like monorepo , but keeps MkDocs projects separate. This CLI tool allows you to build multiple MkDocs documentation projects and generate a landing page for them. Unlike monorepo, multirepo doesn't merge projects into one. Instead, multirepo adds the MkDocs projects as Git submodules, builds them individually, and generates an HTML landing page based on a template file. author: wilhelmer links: PyPI | GitHub | Docs | Demo installation: pip install mkdocs-multirepo","title":"multirepo"},{"location":"plugins/site-management/#mkdocs-yamp","text":"Yet Another Multirepo Plugin is another take on how to aggregate content from multiple source code repositories. Through mkdocs-yamp , users can define a list of repositories that are cloned into a local directory within the docs directory, allowing them to reference markdown files in arbitrary locations within the navigational page tree. author: Steven Terrana steven-terrana links: PyPI | Github installation: pip install mkdocs-yamp","title":"mkdocs-yamp"},{"location":"plugins/site-management/#subsite","text":"Lets you integrate standalone MkDocs git submodules into a main repo. author: Jakub Z\u00e1rybnick\u00fd inuits links: GitHub | Docs installation: pip install git+https://github.com/inuits/mkdocs-subsite","title":"subsite"},{"location":"plugins/site-management/#multiple","text":"Allows to merge mkdocs documentations dynamically author: experimaestro links: GitHub | Docs installation: pip install mkdocs-multiple","title":"multiple"},{"location":"plugins/site-management/#simple-mkdocs-simple-plugin","text":"Lets you build a doc site from markdown files and comments interspersed within your code. With this plugin, documentation files no longer need to be relegated to a dedicated docs folder. They can live alongside -- or within -- your source code. Support for navigation You can specify the navigation paths and titles for the documentation within your code, the same way you normally would with mkdocs. Simply consider the location of the mkdocs.yml file as the root of your site. Autoreload Auto-reload works on any file that was previously generated by this plugin. Auto-generate configuration Includes helper program mkdocs_simple_gen to automatically generate configuration file. Docker integration Create a local mkdocs site in any directory. author: Allison Thackston athackst links: PyPI | Github | Docs | Docker installation: pip install mkdocs-simple-plugin","title":"simple (mkdocs-simple-plugin)"},{"location":"plugins/site-management/#semiliterate-mkdocs-semiliterate","text":"Extends Allison Thackston's simple with easy content inclusion from one file into another. With this addition and a couple of other tweaks, aims to provide a comfortable and reasonably complete environment for a \"semiliterate\" programming and documentation style. author: Glen Whitney links: PyPI | Source | Docs installation: pip install mkdocs-semiliterate","title":"semiliterate (mkdocs-semiliterate)"},{"location":"plugins/site-management/#mkdocs-versioning","text":"Lets you build different versions of documentation. For example, a newer versions of some software may work differently from an older version and it is important that users of an older version of the software reads the appropriate version of the documentation in order to ensure that the user has the correct information and uses the software appropriately. author: Zayd Patel zayd62 links: PyPI | Github | Docs installation: pip install mkdocs-versioning","title":"mkdocs-versioning"},{"location":"plugins/site-management/#mike","text":"Although not technically a mkdocs plugin, it should be listed here. mike is a Python utility to easily deploy multiple versions of your MkDocs-powered docs to a Git branch, suitable for deploying to Github via gh-pages . Supported by mkdocs-material (see versioning ). author: Jim Porter jimporter links: PyPI | Github installation: pip install mike","title":"mike"},{"location":"plugins/site-management/#mkdocs-new-features-notifier","text":"Lets you notify users of new features in your product. It does this by identifying new documentation files, and having these listed under a blinking navigation entry. author: Kevin Obuya Obuya links: PyPI | Github | Docs installation: pip install mkdocs-new-features-notifier","title":"mkdocs-new-features-notifier"},{"location":"plugins/site-management/#progress","text":"Outputs real-time updates from the build to the console. author: Reece Dunham links: GitHub | Docs installation: pip install mkdocs-plugin-progress","title":"progress"},{"location":"plugins/web-services/","text":"Web services \u00b6 Swagger UI Tag \u00b6 Support for add Swagger UI in page. author: Blueswen Liu blueswen links: PyPI | Github | Demo installation: pip install mkdocs-swagger-ui-tag swagger \u00b6 Lets you create a form to invoke APIs from swagger definition easily. author: Tommaso Allevi allevo links: Github | Docs installation: pip install git+https://github.com/allevo/mkdocs-swagger-plugin factsheet \u00b6 Generates overviews from YAML descriptions, intended for micro-services and their deployments. author: Jakub Z\u00e1rybnick\u00fd inuits links: Github | Docs installation: pip install git+https://github.com/inuits/mkdocs-factsheet ko-fi-button \u00b6 Lets you add a Ko-fi button with configurable text and color. author: Tony Bergh berghton links: PyPI | GitLab | Docs installation: pip install mkdocs-ko-fi-button-plugin","title":"\ud83c\udf10 \u7f51\u9875\u670d\u52a1"},{"location":"plugins/web-services/#web-services","text":"","title":"Web services"},{"location":"plugins/web-services/#swagger-ui-tag","text":"Support for add Swagger UI in page. author: Blueswen Liu blueswen links: PyPI | Github | Demo installation: pip install mkdocs-swagger-ui-tag","title":"Swagger UI Tag"},{"location":"plugins/web-services/#swagger","text":"Lets you create a form to invoke APIs from swagger definition easily. author: Tommaso Allevi allevo links: Github | Docs installation: pip install git+https://github.com/allevo/mkdocs-swagger-plugin","title":"swagger"},{"location":"plugins/web-services/#factsheet","text":"Generates overviews from YAML descriptions, intended for micro-services and their deployments. author: Jakub Z\u00e1rybnick\u00fd inuits links: Github | Docs installation: pip install git+https://github.com/inuits/mkdocs-factsheet","title":"factsheet"},{"location":"plugins/web-services/#ko-fi-button","text":"Lets you add a Ko-fi button with configurable text and color. author: Tony Bergh berghton links: PyPI | GitLab | Docs installation: pip install mkdocs-ko-fi-button-plugin","title":"ko-fi-button"},{"location":"user-guide/","text":"\u7528\u6237\u6307\u5357 \u00b6 \u4f7f\u7528 MkDocs \u6784\u5efa\u6587\u6863 MkDocs \u5f00\u53d1\u8005\u6307\u5357\u4e3a MkDocs \u7528\u6237\u63d0\u4f9b\u6587\u6863\u3002 \u8bf7\u53c2\u9605 \u5165\u95e8 \u7684\u5165\u95e8\u6559\u7a0b\u3002 \u60a8\u53ef\u4ee5\u76f4\u63a5\u8df3\u8f6c\u5230\u4e0b\u9762\u5217\u51fa\u7684\u9875\u9762\uff0c\u6216\u8005\u4f7f\u7528\u9875\u9762\u9876\u90e8\u5bfc\u822a\u680f\u4e2d\u7684 next \u548c previous \u6309\u94ae\u6309\u987a\u5e8f\u6d4f\u89c8\u6587\u6863\u3002 \u5b89\u88c5 \u64b0\u5199\u6587\u6863 \u9009\u62e9\u4e3b\u9898 \u5b9a\u5236\u4e3b\u9898 \u7ffb\u8bd1\u4e3b\u9898 \u7b2c\u4e09\u65b9\u4e3b\u9898 \u914d\u7f6e\u9009\u9879 \u547d\u4ee4\u884c\u63a5\u53e3 \u90e8\u7f72\u6587\u6863","title":"\u7528\u6237\u6307\u5357"},{"location":"user-guide/#_1","text":"\u4f7f\u7528 MkDocs \u6784\u5efa\u6587\u6863 MkDocs \u5f00\u53d1\u8005\u6307\u5357\u4e3a MkDocs \u7528\u6237\u63d0\u4f9b\u6587\u6863\u3002 \u8bf7\u53c2\u9605 \u5165\u95e8 \u7684\u5165\u95e8\u6559\u7a0b\u3002 \u60a8\u53ef\u4ee5\u76f4\u63a5\u8df3\u8f6c\u5230\u4e0b\u9762\u5217\u51fa\u7684\u9875\u9762\uff0c\u6216\u8005\u4f7f\u7528\u9875\u9762\u9876\u90e8\u5bfc\u822a\u680f\u4e2d\u7684 next \u548c previous \u6309\u94ae\u6309\u987a\u5e8f\u6d4f\u89c8\u6587\u6863\u3002 \u5b89\u88c5 \u64b0\u5199\u6587\u6863 \u9009\u62e9\u4e3b\u9898 \u5b9a\u5236\u4e3b\u9898 \u7ffb\u8bd1\u4e3b\u9898 \u7b2c\u4e09\u65b9\u4e3b\u9898 \u914d\u7f6e\u9009\u9879 \u547d\u4ee4\u884c\u63a5\u53e3 \u90e8\u7f72\u6587\u6863","title":"\u7528\u6237\u6307\u5357"},{"location":"user-guide/choosing-your-theme/","text":"\u9009\u62e9\u60a8\u7684\u4e3b\u9898 \u00b6 \u9009\u62e9\u548c\u914d\u7f6e\u4e3b\u9898\u3002 MkDocs includes two built-in themes ( mkdocs and readthedocs ), as documented below. However, many third party themes are available to choose from as well. To choose a theme, set the theme configuration option in your mkdocs.yml config file. theme: name: readthedocs mkdocs \u00b6 The default theme, which was built as a custom Bootstrap theme, supports most every feature of MkDocs. In addition to the default theme configuration options , the mkdocs theme supports the following options: highlightjs : Enables highlighting of source code in code blocks using the highlight.js JavaScript library. Default: True . hljs_style : The highlight.js library provides 79 different styles (color variations) for highlighting source code in code blocks. Set this to the name of the desired style. Default: github . hljs_languages : By default, highlight.js only supports 23 common languages. List additional languages here to include support for them. theme: name: mkdocs highlightjs: true hljs_languages: - yaml - rust analytics : Defines configuration options for an analytics service. Currently, only Google Analytics v4 is supported via the gtag option. gtag : To enable Google Analytics, set to a Google Analytics v4 tracking ID, which uses the G- format. See Google's documentation to Set up Analytics for a website and/or app (GA4) or to Upgrade to a Google Analytics 4 property . ```yaml theme: name: mkdocs analytics: gtag: G-ABC123 ``` When set to the default (`null`) Google Analytics is disabled for the site. shortcuts : Defines keyboard shortcut keys. theme: name: mkdocs shortcuts: help: 191 # ? next: 78 # n previous: 80 # p search: 83 # s All values must be numeric key codes. It is best to use keys which are available on all keyboards. You may use https://keycode.info/ to determine the key code for a given key. help : Display a help modal which lists the keyboard shortcuts. Default: 191 (?) next : Navigate to the \"next\" page. Default: 78 (n) previous : Navigate to the \"previous\" page. Default: 80 (p) search : Display the search modal. Default: 83 (s) navigation_depth : The maximum depth of the navigation tree in the sidebar. Default: 2 . nav_style : This adjusts the visual style for the top navigation bar; by default, this is set to primary (the default), but it can also be set to dark or light . theme: name: mkdocs nav_style: dark locale : The locale (language/location) used to build the theme. If your locale is not yet supported, it will fallback to the default. The following locales are supported by this theme: en : English (default) de : German es : Spanish fa : Persian (Farsi) fr : French it : Italian ja : Japanese nb : Norwegian Bokm\u00e5l nn : Norwegian Nynorsk pt_BR : Portuguese (Brazil) ru : Russian tr_TR : Turkish (Turkey) uk : Ukrainian zh_CN : Simplified Chinese See the guide on localizing your theme for more information. readthedocs \u00b6 A clone of the default theme used by the Read the Docs service, which offers the same restricted feature-set as its parent theme. Like its parent theme, only two levels of navigation are supported. In addition to the default theme configuration options , the readthedocs theme supports the following options: highlightjs : Enables highlighting of source code in code blocks using the highlight.js JavaScript library. Default: True . hljs_languages : By default, highlight.js only supports 23 common languages. List additional languages here to include support for them. theme: name: readthedocs highlightjs: true hljs_languages: - yaml - rust analytics : Defines configuration options for an analytics service. gtag : To enable Google Analytics, set to a Google Analytics v4 tracking ID, which uses the G- format. See Google's documentation to Set up Analytics for a website and/or app (GA4) or to Upgrade to a Google Analytics 4 property . ```yaml theme: name: readthedocs analytics: gtag: G-ABC123 ``` When set to the default (`null`) Google Analytics is disabled for the anonymize_ip : To enable anonymous IP address for Google Analytics, set this to True . Default: False . include_homepage_in_sidebar : Lists the homepage in the sidebar menu. As MkDocs requires that the homepage be listed in the nav configuration option, this setting allows the homepage to be included or excluded from the sidebar. Note that the site name/logo always links to the homepage. Default: True . prev_next_buttons_location : One of bottom , top , both , or none . Displays the \u201cNext\u201d and \u201cPrevious\u201d buttons accordingly. Default: bottom . navigation_depth : The maximum depth of the navigation tree in the sidebar. Default: 4 . collapse_navigation : Only include the page section headers in the sidebar for the current page. Default: True . titles_only : Only include page titles in the sidebar, excluding all section headers for all pages. Default: False . sticky_navigation : If True, causes the sidebar to scroll with the main page content as you scroll the page. Default: True . locale : The locale (language/location) used to build the theme. If your locale is not yet supported, it will fallback to the default. The following locales are supported by this theme: en : English (default) fr : French es : Spanish ja : Japanese pt_BR : Portuguese (Brazil) zh_CN : Simplified Chinese de : German fa : Persian (Farsi) it : Italian tr_TR : Turkish (Turkey) ru : Russian uk : Ukrainian See the guide on localizing your theme for more information. logo : To set a logo on your project instead of the plain text site_name , set this variable to be the location of your image. Default: null . Third Party Themes \u00b6 A list of third party themes can be found in the MkDocs community wiki . If you have created your own, please feel free to add it to the list.","title":"\u9009\u62e9\u4e3b\u9898"},{"location":"user-guide/choosing-your-theme/#_1","text":"\u9009\u62e9\u548c\u914d\u7f6e\u4e3b\u9898\u3002 MkDocs includes two built-in themes ( mkdocs and readthedocs ), as documented below. However, many third party themes are available to choose from as well. To choose a theme, set the theme configuration option in your mkdocs.yml config file. theme: name: readthedocs","title":"\u9009\u62e9\u60a8\u7684\u4e3b\u9898"},{"location":"user-guide/choosing-your-theme/#mkdocs","text":"The default theme, which was built as a custom Bootstrap theme, supports most every feature of MkDocs. In addition to the default theme configuration options , the mkdocs theme supports the following options: highlightjs : Enables highlighting of source code in code blocks using the highlight.js JavaScript library. Default: True . hljs_style : The highlight.js library provides 79 different styles (color variations) for highlighting source code in code blocks. Set this to the name of the desired style. Default: github . hljs_languages : By default, highlight.js only supports 23 common languages. List additional languages here to include support for them. theme: name: mkdocs highlightjs: true hljs_languages: - yaml - rust analytics : Defines configuration options for an analytics service. Currently, only Google Analytics v4 is supported via the gtag option. gtag : To enable Google Analytics, set to a Google Analytics v4 tracking ID, which uses the G- format. See Google's documentation to Set up Analytics for a website and/or app (GA4) or to Upgrade to a Google Analytics 4 property . ```yaml theme: name: mkdocs analytics: gtag: G-ABC123 ``` When set to the default (`null`) Google Analytics is disabled for the site. shortcuts : Defines keyboard shortcut keys. theme: name: mkdocs shortcuts: help: 191 # ? next: 78 # n previous: 80 # p search: 83 # s All values must be numeric key codes. It is best to use keys which are available on all keyboards. You may use https://keycode.info/ to determine the key code for a given key. help : Display a help modal which lists the keyboard shortcuts. Default: 191 (?) next : Navigate to the \"next\" page. Default: 78 (n) previous : Navigate to the \"previous\" page. Default: 80 (p) search : Display the search modal. Default: 83 (s) navigation_depth : The maximum depth of the navigation tree in the sidebar. Default: 2 . nav_style : This adjusts the visual style for the top navigation bar; by default, this is set to primary (the default), but it can also be set to dark or light . theme: name: mkdocs nav_style: dark locale : The locale (language/location) used to build the theme. If your locale is not yet supported, it will fallback to the default. The following locales are supported by this theme: en : English (default) de : German es : Spanish fa : Persian (Farsi) fr : French it : Italian ja : Japanese nb : Norwegian Bokm\u00e5l nn : Norwegian Nynorsk pt_BR : Portuguese (Brazil) ru : Russian tr_TR : Turkish (Turkey) uk : Ukrainian zh_CN : Simplified Chinese See the guide on localizing your theme for more information.","title":"mkdocs"},{"location":"user-guide/choosing-your-theme/#readthedocs","text":"A clone of the default theme used by the Read the Docs service, which offers the same restricted feature-set as its parent theme. Like its parent theme, only two levels of navigation are supported. In addition to the default theme configuration options , the readthedocs theme supports the following options: highlightjs : Enables highlighting of source code in code blocks using the highlight.js JavaScript library. Default: True . hljs_languages : By default, highlight.js only supports 23 common languages. List additional languages here to include support for them. theme: name: readthedocs highlightjs: true hljs_languages: - yaml - rust analytics : Defines configuration options for an analytics service. gtag : To enable Google Analytics, set to a Google Analytics v4 tracking ID, which uses the G- format. See Google's documentation to Set up Analytics for a website and/or app (GA4) or to Upgrade to a Google Analytics 4 property . ```yaml theme: name: readthedocs analytics: gtag: G-ABC123 ``` When set to the default (`null`) Google Analytics is disabled for the anonymize_ip : To enable anonymous IP address for Google Analytics, set this to True . Default: False . include_homepage_in_sidebar : Lists the homepage in the sidebar menu. As MkDocs requires that the homepage be listed in the nav configuration option, this setting allows the homepage to be included or excluded from the sidebar. Note that the site name/logo always links to the homepage. Default: True . prev_next_buttons_location : One of bottom , top , both , or none . Displays the \u201cNext\u201d and \u201cPrevious\u201d buttons accordingly. Default: bottom . navigation_depth : The maximum depth of the navigation tree in the sidebar. Default: 4 . collapse_navigation : Only include the page section headers in the sidebar for the current page. Default: True . titles_only : Only include page titles in the sidebar, excluding all section headers for all pages. Default: False . sticky_navigation : If True, causes the sidebar to scroll with the main page content as you scroll the page. Default: True . locale : The locale (language/location) used to build the theme. If your locale is not yet supported, it will fallback to the default. The following locales are supported by this theme: en : English (default) fr : French es : Spanish ja : Japanese pt_BR : Portuguese (Brazil) zh_CN : Simplified Chinese de : German fa : Persian (Farsi) it : Italian tr_TR : Turkish (Turkey) ru : Russian uk : Ukrainian See the guide on localizing your theme for more information. logo : To set a logo on your project instead of the plain text site_name , set this variable to be the location of your image. Default: null .","title":"readthedocs"},{"location":"user-guide/choosing-your-theme/#third-party-themes","text":"A list of third party themes can be found in the MkDocs community wiki . If you have created your own, please feel free to add it to the list.","title":"Third Party Themes"},{"location":"user-guide/cli/","text":"\u547d\u4ee4\u884c\u63a5\u53e3 \u00b6","title":"\u547d\u4ee4\u884c\u63a5\u53e3"},{"location":"user-guide/cli/#_1","text":"","title":"\u547d\u4ee4\u884c\u63a5\u53e3"},{"location":"user-guide/configuration/","text":"\u914d\u7f6e \u00b6 \u6307\u5357\u6240\u6709\u53ef\u7528\u7684\u914d\u7f6e\u8bbe\u7f6e\u3002 \u4ecb\u7ecd \u00b6 \u9879\u76ee\u8bbe\u7f6e\u9ed8\u8ba4\u4f7f\u7528\u9879\u76ee\u76ee\u5f55\u4e0b\u540d\u4e3a mkdocs.yml \u7684 YAML \u914d\u7f6e\u6587\u4ef6\u8fdb\u884c\u914d\u7f6e\u3002 \u4f60\u53ef\u4ee5\u901a\u8fc7\u4f7f\u7528 -f / --config-file \u9009\u9879\u4e3a\u5b83\u6307\u5b9a\u53e6\u4e00\u4e2a\u8def\u5f84(\u53c2\u89c1 mkdocs build --help )\u3002 \u81f3\u5c11\uff0c\u8fd9\u4e2a\u914d\u7f6e\u6587\u4ef6\u5fc5\u987b\u5305\u542b site_name \u3002 \u6240\u6709\u5176\u4ed6\u8bbe\u7f6e\u90fd\u662f \u53ef\u9009 \u7684\u3002 \u9879\u76ee\u4fe1\u606f \u00b6 site_name \u00b6 This is a required setting , and should be a string that is used as the main title for the project documentation. For example: site_name: Marshmallow Generator When rendering the theme this setting will be passed as the site_name context variable. site_url \u00b6 Set the canonical URL of the site. This will add a link tag with the canonical URL to the head section of each HTML page. If the 'root' of the MkDocs site will be within a subdirectory of a domain, be sure to include that subdirectory in the setting ( https://example.com/foo/ ). This setting is also used for mkdocs serve : the server will be mounted onto a path taken from the path component of the URL, e.g. some/page.md will be served from http://127.0.0.1:8000/foo/some/page/ to mimic the expected remote layout. default : null repo_url \u00b6 When set, provides a link to your repository (GitHub, Bitbucket, GitLab, ...) on each page. repo_url: https://github.com/example/repository/ default : null repo_name \u00b6 When set, provides the name for the link to your repository on each page. default : 'GitHub' , 'Bitbucket' or 'GitLab' if the repo_url matches those domains, otherwise the hostname from the repo_url . edit_uri \u00b6 The path from the base repo_url to the docs directory when directly viewing a page, accounting for specifics of the repository host (e.g. GitHub, Bitbucket, etc), the branch, and the docs directory itself. MkDocs concatenates repo_url and edit_uri , and appends the input path of the page. When set, and if your theme supports it, provides a link directly to the page in your source repository. This makes it easier to find and edit the source for the page. If repo_url is not set, this option is ignored. On some themes, setting this option may cause an edit link to be used in place of a repository link. Other themes may show both links. The edit_uri supports query ('?') and fragment ('#') characters. For repository hosts that use a query or a fragment to access the files, the edit_uri might be set as follows. (Note the ? and # in the URI...) # Query string example edit_uri: \"?query=root/path/docs/\" # Hash fragment example edit_uri: \"#root/path/docs/\" For other repository hosts, simply specify the relative path to the docs directory. # Query string example edit_uri: root/path/docs/ For example, having this config: repo_url: https://example.com/project/repo edit_uri: blob/main/docs/ means that a page named 'foo/bar.md' will have its edit link lead to: https://example.com/project/repo/blob/main/docs/foo/bar.md edit_uri can actually be just an absolute URL, not necessarily relative to repo_url , so this can achieve the same result: repo_url: https://example.com/project/repo/blob/main/docs/ For more flexibility, see edit_uri_template below. Note On a few known hosts (specifically GitHub, Bitbucket and GitLab), the edit_uri is derived from the 'repo_url' and does not need to be set manually. Simply defining a repo_url will automatically populate the edit_uri configs setting. For example, for a GitHub- or GitLab-hosted repository, the edit_uri would be automatically set as edit/master/docs/ (Note the edit path and master branch). For a Bitbucket-hosted repository, the equivalent edit_uri would be automatically set as src/default/docs/ (note the src path and default branch). To use a different URI than the default (for example a different branch), simply set the edit_uri to your desired string. If you do not want any \"edit URL link\" displayed on your pages, then set edit_uri to an empty string to disable the automatic setting. Warning On GitHub and GitLab, the default \"edit\" path ( edit/master/docs/ ) opens the page in the online editor. This functionality requires that the user have and be logged in to a GitHub/GitLab account. Otherwise, the user will be redirected to a login/signup page. Alternatively, use the \"blob\" path ( blob/master/docs/ ) to open a read-only view, which supports anonymous access. default : edit/master/docs/ for GitHub and GitLab repos or src/default/docs/ for a Bitbucket repo, if repo_url matches those domains, otherwise null edit_uri_template \u00b6 The more flexible variant of edit_uri . These two are equivalent: edit_uri: \"blob/main/docs/\" edit_uri_template: \"blob/main/docs/{path}\" (they are also mutually exclusive -- don't specify both). Starting from here, you can change the positioning or formatting of the path, in case the default behavior of appending the path isn't enough. The contents of edit_uri_template are normal Python format strings , with only these fields available: {path} , e.g. foo/bar.md {path_noext} , e.g. foo/bar And the conversion flag !q is available, to percent-encode the field: {path!q} , e.g. foo%2Fbar.md ? NOTE: Suggested useful configurations: GitHub Wiki: (e.g. https://github.com/project/repo/wiki/foo/bar/_edit ) repo_url: \"https://github.com/project/repo/wiki\" edit_uri_template: \"{path_noext}/_edit\" BitBucket editor: (e.g. https://bitbucket.org/project/repo/src/master/docs/foo/bar.md?mode=edit ) repo_url: \"https://bitbucket.org/project/repo/\" edit_uri_template: \"src/master/docs/{path}?mode=edit\" GitLab Static Site Editor: (e.g. https://gitlab.com/project/repo/-/sse/master/docs%2Ffoo%2bar.md ) repo_url: \"https://gitlab.com/project/repo\" edit_uri_template: \"-/sse/master/docs%2F{path!q}\" GitLab Web IDE: (e.g. https://gitlab.com/-/ide/project/repo/edit/master/-/docs/foo/bar.md ) edit_uri_template: \"https://gitlab.com/-/ide/project/repo/edit/master/-/docs/{path}\" default : null site_description \u00b6 Set the site description. This will add a meta tag to the generated HTML header. default : null site_author \u00b6 Set the name of the author. This will add a meta tag to the generated HTML header. default : null copyright \u00b6 Set the copyright information to be included in the documentation by the theme. default : null remote_branch \u00b6 Set the remote branch to commit to when using gh-deploy to deploy to GitHub Pages. This option can be overridden by a command line option in gh-deploy . default : gh-pages remote_name \u00b6 Set the remote name to push to when using gh-deploy to deploy to GitHub Pages. This option can be overridden by a command line option in gh-deploy . default : origin \u6587\u6863\u5bfc\u822a \u00b6 nav \u00b6 \u6b64\u8bbe\u7f6e\u7528\u4e8e\u786e\u5b9a\u7ad9\u70b9\u5168\u5c40\u5bfc\u822a\u7684\u683c\u5f0f\u548c\u5e03\u5c40\u3002 \u4e00\u4e2a\u6700\u5c0f\u7684\u5bfc\u822a\u914d\u7f6e\u5e94\u8be5\u662f\u8fd9\u6837\u7684: nav: - \"index.md\" - \"about.md\" \u5bfc\u822a\u914d\u7f6e\u4e2d\u7684\u6240\u6709\u8def\u5f84\u5fc5\u987b\u76f8\u5bf9\u4e8e docs_dir \u914d\u7f6e\u9009\u9879\u3002 \u8bf7\u53c2\u9605 \u914d\u7f6e\u9875\u9762\u548c\u5bfc\u822a \u4e00\u8282\uff0c\u4e86\u89e3\u66f4\u8be6\u7ec6\u7684\u7ec6\u5206\uff0c\u5305\u62ec\u5982\u4f55\u521b\u5efa\u5b50\u8282\u3002 \u5bfc\u822a\u9879\u4e5f\u53ef\u4ee5\u5305\u62ec\u5230\u5916\u90e8\u7ad9\u70b9\u7684\u94fe\u63a5\u3002 \u867d\u7136\u6807\u9898\u5bf9\u4e8e\u5185\u90e8\u94fe\u63a5\u662f\u53ef\u9009\u7684\uff0c\u4f46\u662f\u5bf9\u4e8e\u5916\u90e8\u94fe\u63a5\u662f\u5fc5\u9700\u7684\u3002 \u5916\u90e8\u94fe\u63a5\u53ef\u4ee5\u662f\u5b8c\u6574 URL\uff0c\u4e5f\u53ef\u4ee5\u662f\u76f8\u5bf9 URL\u3002 \u5728\u6587\u4ef6\u4e2d\u6ca1\u6709\u627e\u5230\u7684\u4efb\u4f55\u8def\u5f84\u90fd\u88ab\u8ba4\u4e3a\u662f\u5916\u90e8\u94fe\u63a5\u3002 \u5173\u4e8e MkDocs \u5982\u4f55\u786e\u5b9a\u6587\u6863\u7684\u9875\u9762\u6807\u9898\uff0c\u8bf7\u53c2\u9605[Meta-Data]\u90e8\u5206\u3002 nav: - Introduction: \"index.md\" - \"about.md\" - \"Issue Tracker\": \"https://example.com/\" \u5728\u4e0a\u9762\u7684\u793a\u4f8b\u4e2d\uff0c\u524d\u4e24\u9879\u6307\u5411\u672c\u5730\u6587\u4ef6\uff0c\u800c\u7b2c\u4e09\u9879\u6307\u5411\u5916\u90e8\u7ad9\u70b9\u3002 \u7136\u800c\uff0c\u6709\u65f6 MkDocs \u7ad9\u70b9\u6258\u7ba1\u5728\u9879\u76ee\u7ad9\u70b9\u7684\u5b50\u76ee\u5f55\u4e2d\uff0c\u60a8\u53ef\u80fd\u5e0c\u671b\u94fe\u63a5\u5230\u540c\u4e00\u7ad9\u70b9\u7684\u5176\u4ed6\u90e8\u5206\u800c\u4e0d\u5305\u62ec\u5b8c\u6574\u7684\u57df\u3002 \u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528\u9002\u5f53\u7684\u76f8\u5bf9 URL\u3002 site_url: https://example.com/foo/ nav: - Home: \"../\" - \"User Guide\": \"user-guide.md\" - \"Bug Tracker\": \"/bugs/\" \u5728\u4e0a\u9762\u7684\u4f8b\u5b50\u4e2d\uff0c\u4f7f\u7528\u4e86\u4e24\u79cd\u4e0d\u540c\u98ce\u683c\u7684\u5916\u90e8\u94fe\u63a5\u3002 \u9996\u5148\uff0c\u8bf7\u6ce8\u610f site_url \u8868\u793a MkDocs \u7ad9\u70b9\u6258\u7ba1\u5728\u57df\u7684 /foo/ \u5b50\u76ee\u5f55\u4e2d\u3002 \u56e0\u6b64\uff0c Home \u5bfc\u822a\u9879\u662f\u4e00\u4e2a\u76f8\u5bf9\u94fe\u63a5\uff0c\u5b83\u4e0a\u4e00\u7ea7\u5230\u670d\u52a1\u5668\u6839\u76ee\u5f55\uff0c\u6709\u6548\u5730\u6307\u5411 https://example.com/ \u3002 Bug Tracker \u9879\u4f7f\u7528\u4e86\u6765\u81ea\u670d\u52a1\u5668\u6839\u76ee\u5f55\u7684\u7edd\u5bf9\u8def\u5f84\uff0c\u6709\u6548\u5730\u6307\u5411 https://example.com/bugs/ \u3002 \u5f53\u7136\uff0c User Guide \u6307\u5411\u4e00\u4e2a\u672c\u5730 MkDocs \u9875\u9762\u3002 default : \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c nav \u5c06\u5305\u542b\u5728 docs_dir \u53ca\u5176\u5b50\u76ee\u5f55\u4e2d\u627e\u5230\u7684\u6240\u6709 Markdown \u6587\u4ef6\u7684\u5b57\u6bcd\u6570\u5b57\u6392\u5e8f\u5d4c\u5957\u5217\u8868\u3002 \u7d22\u5f15\u6587\u4ef6\u603b\u662f\u5728\u5b50\u8282\u4e2d\u5217\u5728\u524d\u9762\u3002 \u5efa\u7acb\u76ee\u5f55 \u00b6 theme \u00b6 \u8bbe\u7f6e\u6587\u6863\u7ad9\u70b9\u7684\u4e3b\u9898\u548c\u7279\u5b9a\u4e8e\u4e3b\u9898\u7684\u914d\u7f6e\u3002 \u53ef\u4ee5\u662f\u5b57\u7b26\u4e32\uff0c\u4e5f\u53ef\u4ee5\u662f\u4e00\u7ec4\u952e/\u503c\u5bf9\u3002 \u5982\u679c\u662f\u5b57\u7b26\u4e32\uff0c\u5219\u5fc5\u987b\u662f\u5df2\u77e5\u5df2\u5b89\u88c5\u4e3b\u9898\u7684\u5b57\u7b26\u4e32\u540d\u79f0\u3002 \u5982\u9700\u53ef\u7528\u4e3b\u9898\u5217\u8868\uff0c\u8bf7\u8bbf\u95ee \u9009\u62e9\u60a8\u7684\u4e3b\u9898 \u3002 \u4e00\u4e2a\u952e/\u503c\u5bf9\u7684\u4f8b\u5b50\u53ef\u80fd\u662f\u8fd9\u6837\u7684: theme: name: mkdocs locale: en custom_dir: my_theme_customizations/ static_templates: - sitemap.html include_sidebar: false If a set of key/value pairs, the following nested keys can be defined: Block name \u00b6 The string name of a known installed theme. For a list of available themes visit Choosing Your Theme . locale \u00b6 A code representing the language of your site. See Localizing your theme for details. custom_dir \u00b6 A directory containing a custom theme. This can either be a relative directory, in which case it is resolved relative to the directory containing your configuration file or it can be an absolute directory path from the root of your local file system. See Customizing Your Theme for details if you would like to tweak an existing theme. See the Theme Developer Guide if you would like to build your own theme from the ground up. static_templates \u00b6 A list of templates to render as static pages. The templates must be located in either the theme's template directory or in the custom_dir defined in the theme configuration. (theme specific keywords) \u00b6 Any additional keywords supported by the theme can also be defined. See the documentation for the theme you are using for details. default : 'mkdocs' docs_dir \u00b6 The directory containing the documentation source markdown files. This can either be a relative directory, in which case it is resolved relative to the directory containing your configuration file, or it can be an absolute directory path from the root of your local file system. default : 'docs' site_dir \u00b6 The directory where the output HTML and other files are created. This can either be a relative directory, in which case it is resolved relative to the directory containing your configuration file, or it can be an absolute directory path from the root of your local file system. default : 'site' Note If you are using source code control you will normally want to ensure that your build output files are not committed into the repository, and only keep the source files under version control. For example, if using git you might add the following line to your .gitignore file: site/ If you're using another source code control tool, you'll want to check its documentation on how to ignore specific directories. extra_css \u00b6 Set a list of CSS files in your docs_dir to be included by the theme. For example, the following example will include the extra.css file within the css subdirectory in your docs_dir . extra_css: - css/extra.css - css/second_extra.css default : [] (an empty list). extra_javascript \u00b6 Set a list of JavaScript files in your docs_dir to be included by the theme. See the example in extra_css for usage. default : [] (an empty list). extra_templates \u00b6 Set a list of templates in your docs_dir to be built by MkDocs. To see more about writing templates for MkDocs read the documentation about [custom themes] and specifically the section about the [available variables] to templates. See the example in extra_css for usage. default : [] (an empty list). extra \u00b6 A set of key-value pairs, where the values can be any valid YAML construct, that will be passed to the template. This allows for great flexibility when creating custom themes. For example, if you are using a theme that supports displaying the project version, you can pass it to the theme like this: extra: version: 1.0 default : By default extra will be an empty key-value mapping. \u9884\u89c8\u63a7\u4ef6 \u00b6 \u73b0\u573a\u91cd\u88c5 \u00b6 watch \u00b6 Determines additional directories to watch when running mkdocs serve . Configuration is a YAML list. watch: - directory_a - directory_b Allows a custom default to be set without the need to pass it through the -w / --watch option every time the mkdocs serve command is called. Note The paths provided via the configuration file are relative to the configuration file. The paths provided via the -w / --watch CLI parameters are not. use_directory_urls \u00b6 This setting controls the style used for linking to pages within the documentation. The following table demonstrates how the URLs used on the site differ when setting use_directory_urls to true or false . Source file use_directory_urls: true use_directory_urls: false index.md / /index.html api-guide.md /api-guide/ /api-guide.html about/license.md /about/license/ /about/license.html The default style of use_directory_urls: true creates more user friendly URLs, and is usually what you'll want to use. The alternate style can be useful if you want your documentation to remain properly linked when opening pages directly from the file system, because it creates links that point directly to the target file rather than the target directory . default : true strict \u00b6 Determines how warnings are handled. Set to true to halt processing when a warning is raised. Set to false to print a warning and continue processing. This is also available as a command line flag: --strict . default : false dev_addr \u00b6 Determines the address used when running mkdocs serve . Must be of the format IP:PORT . Allows a custom default to be set without the need to pass it through the --dev-addr option every time the mkdocs serve command is called. default : '127.0.0.1:8000' See also: site_url . \u683c\u5f0f\u9009\u9879 \u00b6 markdown_extensions \u00b6 MkDocs uses the Python Markdown library to translate Markdown files into HTML. Python Markdown supports a variety of extensions that customize how pages are formatted. This setting lets you enable a list of extensions beyond the ones that MkDocs uses by default ( meta , toc , tables , and fenced_code ). For example, to enable the SmartyPants typography extension , use: markdown_extensions: - smarty Some extensions provide configuration options of their own. If you would like to set any configuration options, then you can nest a key/value mapping ( option_name: option value ) of any options that a given extension supports. See the documentation for the extension you are using to determine what options they support. For example, to enable permalinks in the (included) toc extension, use: markdown_extensions: - toc: permalink: True Note that a colon ( : ) must follow the extension name ( toc ) and then on a new line the option name and value must be indented and separated by a colon. If you would like to define multiple options for a single extension, each option must be defined on a separate line: markdown_extensions: - toc: permalink: True separator: \"_\" Add an additional item to the list for each extension. If you have no configuration options to set for a specific extension, then simply omit options for that extension: markdown_extensions: - smarty - toc: permalink: True - sane_lists In the above examples, each extension is a list item (starts with a - ). As an alternative, key/value pairs can be used instead. However, in that case an empty value must be provided for extensions for which no options are defined. Therefore, the last example above could also be defined as follows: markdown_extensions: smarty: {} toc: permalink: True sane_lists: {} This alternative syntax is required if you intend to override some options via inheritance . See Also: The Python-Markdown documentation provides a list of extensions which are available out-of-the-box. For a list of configuration options available for a given extension, see the documentation for that extension. You may also install and use various third party extensions . Consult the documentation provided by those extensions for installation instructions and available configuration options. default : [] (an empty list). hooks \u00b6 New in version 1.4 A list of paths to Python scripts (relative to mkdocs.yml ) that are loaded and used as plugin instances. For example: hooks: - my_hooks.py Then the file my_hooks.py can contain any plugin event handlers (without self ), e.g.: def on_page_markdown(markdown, **kwargs): return markdown.replace('a', 'z') ? EXAMPLE: Advanced example: This produces warnings based on the Markdown content (and warnings are fatal in strict mode): import logging, re import mkdocs.plugins log = logging.getLogger('mkdocs') @mkdocs.plugins.event_priority(-50) def on_page_markdown(markdown, page, **kwargs): path = page.file.src_uri for m in re.finditer(r'\\bhttp://[^) ]+', markdown): log.warning(f\"Documentation file '{path}' contains a non-HTTPS link: {m[0]}\") This does not enable any new abilities compared to plugins , it only simplifies one-off usages, as these don't need to be installed like plugins do. Note that for mkdocs serve the hook module will not be reloaded on each build. You might have seen this feature in the mkdocs-simple-hooks plugin . If using standard method names, it can be directly replaced, e.g.: -plugins: - - mkdocs-simple-hooks: - hooks: - on_page_markdown: 'my_hooks:on_page_markdown' +hooks: + - my_hooks.py plugins \u00b6 A list of plugins (with optional configuration settings) to use when building the site. See the Plugins documentation for full details. If the plugins config setting is defined in the mkdocs.yml config file, then any defaults (such as search ) are ignored and you need to explicitly re-enable the defaults if you would like to continue using them: plugins: - search - your_other_plugin To define options for a given plugin, use a nested set of key/value pairs: plugins: - search - your_other_plugin: option1: value option2: other value In the above examples, each plugin is a list item (starts with a - ). As an alternative, key/value pairs can be used instead. However, in that case an empty value must be provided for plugins for which no options are defined. Therefore, the last example above could also be defined as follows: plugins: search: {} your_other_plugin: option1: value option2: other value This alternative syntax is required if you intend to override some options via inheritance . To completely disable all plugins, including any defaults, set the plugins setting to an empty list: plugins: [] default : ['search'] (the \"search\" plugin included with MkDocs). Search \u00b6 A search plugin is provided by default with MkDocs which uses lunr.js as a search engine. The following config options are available to alter the behavior of the search plugin: separator \u00b6 A regular expression which matches the characters used as word separators when building the index. By default whitespace and the hyphen ( - ) are used. To add the dot ( . ) as a word separator you might do this: plugins: - search: separator: '[\\s\\-\\.]+' default : '[\\s\\-]+' min_search_length \u00b6 An integer value that defines the minimum length for a search query. By default searches shorter than 3 chars in length are ignored as search result quality with short search terms are poor. However, for some use cases (such as documentation about Message Queues which might generate searches for 'MQ') it may be preferable to set a shorter limit. plugins: - search: min_search_length: 2 default : 3 lang \u00b6 A list of languages to use when building the search index as identified by their ISO 639-1 language codes. With Lunr Languages , the following languages are supported: ar : Arabic da : Danish nl : Dutch en : English fi : Finnish fr : French de : German hu : Hungarian it : Italian ja : Japanese no : Norwegian pt : Portuguese ro : Romanian ru : Russian es : Spanish sv : Swedish th : Thai tr : Turkish vi : Vietnamese You may contribute additional languages . Warning While search does support using multiple languages together, it is best not to add additional languages unless you really need them. Each additional language adds significant bandwidth requirements and uses more browser resources. Generally, it is best to keep each instance of MkDocs to a single language. Note Lunr Languages does not currently include support for Chinese or other Asian languages. However, some users have reported decent results using Japanese. default : The value of theme.locale if set, otherwise [en] . prebuild_index \u00b6 Optionally generates a pre-built index of all pages, which provides some performance improvements for larger sites. Before enabling, confirm that the theme you are using explicitly supports using a prebuilt index (the builtin themes do). Set to true to enable. Warning This option requires that Node.js be installed and the command node be on the system path. If the call to node fails for any reason, a warning is issued and the build continues uninterrupted. You may use the --strict flag when building to cause such a failure to raise an error instead. Note On smaller sites, using a pre-built index is not recommended as it creates a significant increase is bandwidth requirements with little to no noticeable improvement to your users. However, for larger sites (hundreds of pages), the bandwidth increase is relatively small and your users will notice a significant improvement in search performance. default : False indexing \u00b6 Configures what strategy the search indexer will use when building the index for your pages. This property is particularly useful if your project is large in scale, and the index takes up an enormous amount of disk space. plugins: - search: indexing: \"full\" Options \u00b6 Option Description full Indexes the title, section headings, and full text of each page. sections Indexes the title and section headings of each page. titles Indexes only the title of each page. default : full \uff03\uff03 \u73af\u5883\u53d8\u91cf In most cases, the value of a configuration option is set directly in the configuration file. However, as an option, the value of a configuration option may be set to the value of an environment variable using the !ENV tag. For example, to set the value of the site_name option to the value of the variable SITE_NAME the YAML file may contain the following: site_name: !ENV SITE_NAME If the environment variable is not defined, then the configuration setting would be assigned a null (or None in Python) value. A default value can be defined as the last value in a list. Like this: site_name: !ENV [SITE_NAME, \"My default site name\"] Multiple fallback variables can be used as well. Note that the last value is not an environment variable, but must be a value to use as a default if none of the specified environment variables are defined. site_name: !ENV [SITE_NAME, OTHER_NAME, \"My default site name\"] Simple types defined within an environment variable such as string, bool, integer, float, datestamp and null are parsed as if they were defined directly in the YAML file, which means that the value will be converted to the appropriate type. However, complex types such as lists and key/value pairs cannot be defined within a single environment variable. For more details, see the pyyaml_env_tag project. \u914d\u7f6e\u7ee7\u627f \u00b6 \u901a\u5e38\uff0c\u5355\u4e2a\u6587\u4ef6\u5c06\u4fdd\u5b58\u7ad9\u70b9\u7684\u6574\u4e2a\u914d\u7f6e\u3002 \u7136\u800c\uff0c\u4e00\u4e9b\u7ec4\u7ec7\u53ef\u80fd\u7ef4\u62a4\u591a\u4e2a\u7ad9\u70b9\uff0c\u8fd9\u4e9b\u7ad9\u70b9\u4e4b\u95f4\u5171\u4eab\u4e00\u4e2a\u516c\u5171\u914d\u7f6e\u3002 \u516c\u5171\u914d\u7f6e\u9009\u9879\u53ef\u4ee5\u5728\u7236\u914d\u7f6e\u6587\u4ef6\u4e2d\u5b9a\u4e49\uff0c\u6bcf\u4e2a\u7ad9\u70b9\u7684\u4e3b\u914d\u7f6e\u6587\u4ef6\u5c06\u7ee7\u627f\u8be5\u914d\u7f6e\u6587\u4ef6\uff0c\u800c\u4e0d\u662f\u4e3a\u6bcf\u4e2a\u7ad9\u70b9\u7ef4\u62a4\u5355\u72ec\u7684\u914d\u7f6e\u3002 \u8981\u4e3a\u914d\u7f6e\u6587\u4ef6\u5b9a\u4e49\u7236\u6587\u4ef6\uff0c\u8bf7\u5c06 INHERIT (\u5168\u5927\u5199)\u952e\u8bbe\u7f6e\u4e3a\u7236\u6587\u4ef6\u7684\u8def\u5f84\u3002 \u8def\u5f84\u5fc5\u987b\u76f8\u5bf9\u4e8e\u4e3b\u6587\u4ef6\u7684\u4f4d\u7f6e\u3002 \u5bf9\u4e8e\u8981\u4e0e\u7236\u914d\u7f6e\u5408\u5e76\u7684\u914d\u7f6e\u9009\u9879\uff0c\u5fc5\u987b\u5c06\u8fd9\u4e9b\u9009\u9879\u5b9a\u4e49\u4e3a\u952e/\u503c\u5bf9\u3002 \u5177\u4f53\u6765\u8bf4\uff0c markdown_extensions \u548c plugins \u9009\u9879\u5fc5\u987b\u4f7f\u7528\u4e0d\u4f7f\u7528\u5217\u8868\u9879(\u4ee5 - \u5f00\u5934\u7684\u884c)\u7684\u66ff\u4ee3\u8bed\u6cd5\u3002 \u4f8b\u5982\uff0c\u5047\u8bbe\u516c\u5171(\u7236)\u914d\u7f6e\u5b9a\u4e49\u5728 base.yml \u4e2d: theme: name: mkdocs locale: en highlightjs: true markdown_extensions: toc: permalink: true admonition: {} \u7136\u540e\uff0c\u5bf9\u4e8e\u201cfoo\u201d\u7ad9\u70b9\uff0c\u4e3b\u914d\u7f6e\u6587\u4ef6\u5c06\u5b9a\u4e49\u5728 foo/mkdocs.yml : INHERIT: ../base.yml site_name: Foo Project site_url: https://example.com/foo \u5f53\u8fd0\u884c mkdocs build \u65f6\uff0c foo/mkdocs.yml \u5904\u7684\u6587\u4ef6\u5c06\u4f5c\u4e3a\u914d\u7f6e\u6587\u4ef6\u4f20\u5165\u3002 \u7136\u540e MkDocs \u5c06\u89e3\u6790\u8be5\u6587\u4ef6\uff0c\u68c0\u7d22\u5e76\u89e3\u6790\u7236\u6587\u4ef6 base.yml \uff0c\u5e76\u5c06\u4e24\u8005\u6df1\u5ea6\u5408\u5e76\u3002 \u8fd9\u5c06\u5bfc\u81f4 MkDocs \u6536\u5230\u4ee5\u4e0b\u5408\u5e76\u914d\u7f6e: site_name: Foo Project site_url: https://example.com/foo theme: name: mkdocs locale: en highlightjs: true markdown_extensions: toc: permalink: true admonition: {} \u6df1\u5ea6\u5408\u5e76\u5141\u8bb8\u60a8\u5728\u4e3b\u914d\u7f6e\u6587\u4ef6\u4e2d\u6dfb\u52a0\u548c/\u6216\u8986\u76d6\u5404\u79cd\u503c\u3002 \u4f8b\u5982\uff0c\u5047\u8bbe\u5bf9\u4e8e\u4e00\u4e2a\u7ad9\u70b9\uff0c\u60a8\u5e0c\u671b\u6dfb\u52a0\u5bf9\u5b9a\u4e49\u5217\u8868\u7684\u652f\u6301\uff0c\u4e3a\u6c38\u4e45\u94fe\u63a5\u4f7f\u7528\u4e0d\u540c\u7684\u7b26\u53f7\uff0c\u5e76\u5b9a\u4e49\u4e0d\u540c\u7684\u5206\u9694\u7b26\u3002 \u5728\u8be5\u7ad9\u70b9\u7684\u4e3b\u914d\u7f6e\u6587\u4ef6\u4e2d\uff0c\u60a8\u53ef\u4ee5\u8fd9\u6837\u505a: INHERIT: ../base.yml site_name: Bar Project site_url: https://example.com/bar markdown_extensions: def_list: {} toc: permalink: \uf0c1 separator: \"_\" \u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u4e0a\u8ff0\u914d\u7f6e\u5c06\u4e0e base.yml \u6df1\u5ea6\u5408\u5e76\uff0c\u5e76\u4ea7\u751f\u4ee5\u4e0b\u914d\u7f6e: site_name: Bar Project site_url: https://example.com/bar theme: name: mkdocs locale: en highlightjs: true markdown_extensions: def_list: {} toc: permalink: \uf0c1 separator: \"_\" admonition: {} \u6ce8\u610f\uff0c admonition \u6269\u5c55\u4ece\u7236\u914d\u7f6e\u4e2d\u4fdd\u7559\uff0c def_list \u6269\u5c55\u88ab\u6dfb\u52a0\uff0c toc.permalink \u7684\u503c\u88ab\u66ff\u6362\uff0c toc.separator \u7684\u503c\u88ab\u6dfb\u52a0\u3002 \u60a8\u53ef\u4ee5\u66ff\u6362\u6216\u5408\u5e76\u4efb\u4f55\u952e\u7684\u503c\u3002 \u4f46\u662f\uff0c\u4efb\u4f55\u975e\u952e\u90fd\u5c06\u88ab\u66ff\u6362\u3002 \u56e0\u6b64\uff0c\u4e0d\u80fd\u5c06\u9879\u8ffd\u52a0\u5230\u5217\u8868\u4e2d\u3002 \u60a8\u5fc5\u987b\u91cd\u65b0\u5b9a\u4e49\u6574\u4e2a\u5217\u8868\u3002 \u7531\u4e8e nav \u914d\u7f6e\u7531\u5d4c\u5957\u5217\u8868\u7ec4\u6210\uff0c\u8fd9\u610f\u5473\u7740\u60a8\u4e0d\u80fd\u5408\u5e76\u5bfc\u822a\u9879\u3002 \u5f53\u7136\uff0c\u4f60\u53ef\u4ee5\u5c06\u6574\u4e2a nav \u914d\u7f6e\u66ff\u6362\u4e3a\u4e00\u4e2a\u65b0\u7684\u3002\u4f46\u662f\uff0c\u901a\u5e38\u671f\u671b\u6574\u4e2a\u5bfc\u822a\u5c06\u5728\u9879\u76ee\u7684\u4e3b\u914d\u7f6e\u6587\u4ef6\u4e2d\u5b9a\u4e49\u3002 Warning \u63d0\u9192\u4e00\u4e0b\uff0c\u6240\u6709\u57fa\u4e8e\u8def\u5f84\u7684\u914d\u7f6e\u9009\u9879\u90fd\u5fc5\u987b\u76f8\u5bf9\u4e8e\u4e3b\u914d\u7f6e\u6587\u4ef6\uff0cMkDocs \u5728\u5408\u5e76\u65f6\u4e0d\u4f1a\u6539\u53d8\u8def\u5f84\u3002 \u56e0\u6b64\uff0c\u5728\u7531\u591a\u4e2a\u4e0d\u540c\u7ad9\u70b9\u7ee7\u627f\u7684\u7236\u6587\u4ef6\u4e2d\u5b9a\u4e49\u8def\u5f84\u53ef\u80fd\u65e0\u6cd5\u6b63\u5e38\u5de5\u4f5c\u3002 \u901a\u5e38\u6700\u597d\u53ea\u5728\u4e3b\u914d\u7f6e\u6587\u4ef6\u4e2d\u5b9a\u4e49\u57fa\u4e8e\u8def\u5f84\u7684\u9009\u9879\u3002","title":"\u914d\u7f6e\u9009\u9879"},{"location":"user-guide/configuration/#_1","text":"\u6307\u5357\u6240\u6709\u53ef\u7528\u7684\u914d\u7f6e\u8bbe\u7f6e\u3002","title":"\u914d\u7f6e"},{"location":"user-guide/configuration/#_2","text":"\u9879\u76ee\u8bbe\u7f6e\u9ed8\u8ba4\u4f7f\u7528\u9879\u76ee\u76ee\u5f55\u4e0b\u540d\u4e3a mkdocs.yml \u7684 YAML \u914d\u7f6e\u6587\u4ef6\u8fdb\u884c\u914d\u7f6e\u3002 \u4f60\u53ef\u4ee5\u901a\u8fc7\u4f7f\u7528 -f / --config-file \u9009\u9879\u4e3a\u5b83\u6307\u5b9a\u53e6\u4e00\u4e2a\u8def\u5f84(\u53c2\u89c1 mkdocs build --help )\u3002 \u81f3\u5c11\uff0c\u8fd9\u4e2a\u914d\u7f6e\u6587\u4ef6\u5fc5\u987b\u5305\u542b site_name \u3002 \u6240\u6709\u5176\u4ed6\u8bbe\u7f6e\u90fd\u662f \u53ef\u9009 \u7684\u3002","title":"\u4ecb\u7ecd"},{"location":"user-guide/configuration/#_3","text":"","title":"\u9879\u76ee\u4fe1\u606f"},{"location":"user-guide/configuration/#site_name","text":"This is a required setting , and should be a string that is used as the main title for the project documentation. For example: site_name: Marshmallow Generator When rendering the theme this setting will be passed as the site_name context variable.","title":"site_name"},{"location":"user-guide/configuration/#site_url","text":"Set the canonical URL of the site. This will add a link tag with the canonical URL to the head section of each HTML page. If the 'root' of the MkDocs site will be within a subdirectory of a domain, be sure to include that subdirectory in the setting ( https://example.com/foo/ ). This setting is also used for mkdocs serve : the server will be mounted onto a path taken from the path component of the URL, e.g. some/page.md will be served from http://127.0.0.1:8000/foo/some/page/ to mimic the expected remote layout. default : null","title":"site_url"},{"location":"user-guide/configuration/#repo_url","text":"When set, provides a link to your repository (GitHub, Bitbucket, GitLab, ...) on each page. repo_url: https://github.com/example/repository/ default : null","title":"repo_url"},{"location":"user-guide/configuration/#repo_name","text":"When set, provides the name for the link to your repository on each page. default : 'GitHub' , 'Bitbucket' or 'GitLab' if the repo_url matches those domains, otherwise the hostname from the repo_url .","title":"repo_name"},{"location":"user-guide/configuration/#edit_uri","text":"The path from the base repo_url to the docs directory when directly viewing a page, accounting for specifics of the repository host (e.g. GitHub, Bitbucket, etc), the branch, and the docs directory itself. MkDocs concatenates repo_url and edit_uri , and appends the input path of the page. When set, and if your theme supports it, provides a link directly to the page in your source repository. This makes it easier to find and edit the source for the page. If repo_url is not set, this option is ignored. On some themes, setting this option may cause an edit link to be used in place of a repository link. Other themes may show both links. The edit_uri supports query ('?') and fragment ('#') characters. For repository hosts that use a query or a fragment to access the files, the edit_uri might be set as follows. (Note the ? and # in the URI...) # Query string example edit_uri: \"?query=root/path/docs/\" # Hash fragment example edit_uri: \"#root/path/docs/\" For other repository hosts, simply specify the relative path to the docs directory. # Query string example edit_uri: root/path/docs/ For example, having this config: repo_url: https://example.com/project/repo edit_uri: blob/main/docs/ means that a page named 'foo/bar.md' will have its edit link lead to: https://example.com/project/repo/blob/main/docs/foo/bar.md edit_uri can actually be just an absolute URL, not necessarily relative to repo_url , so this can achieve the same result: repo_url: https://example.com/project/repo/blob/main/docs/ For more flexibility, see edit_uri_template below. Note On a few known hosts (specifically GitHub, Bitbucket and GitLab), the edit_uri is derived from the 'repo_url' and does not need to be set manually. Simply defining a repo_url will automatically populate the edit_uri configs setting. For example, for a GitHub- or GitLab-hosted repository, the edit_uri would be automatically set as edit/master/docs/ (Note the edit path and master branch). For a Bitbucket-hosted repository, the equivalent edit_uri would be automatically set as src/default/docs/ (note the src path and default branch). To use a different URI than the default (for example a different branch), simply set the edit_uri to your desired string. If you do not want any \"edit URL link\" displayed on your pages, then set edit_uri to an empty string to disable the automatic setting. Warning On GitHub and GitLab, the default \"edit\" path ( edit/master/docs/ ) opens the page in the online editor. This functionality requires that the user have and be logged in to a GitHub/GitLab account. Otherwise, the user will be redirected to a login/signup page. Alternatively, use the \"blob\" path ( blob/master/docs/ ) to open a read-only view, which supports anonymous access. default : edit/master/docs/ for GitHub and GitLab repos or src/default/docs/ for a Bitbucket repo, if repo_url matches those domains, otherwise null","title":"edit_uri"},{"location":"user-guide/configuration/#edit_uri_template","text":"The more flexible variant of edit_uri . These two are equivalent: edit_uri: \"blob/main/docs/\" edit_uri_template: \"blob/main/docs/{path}\" (they are also mutually exclusive -- don't specify both). Starting from here, you can change the positioning or formatting of the path, in case the default behavior of appending the path isn't enough. The contents of edit_uri_template are normal Python format strings , with only these fields available: {path} , e.g. foo/bar.md {path_noext} , e.g. foo/bar And the conversion flag !q is available, to percent-encode the field: {path!q} , e.g. foo%2Fbar.md ? NOTE: Suggested useful configurations: GitHub Wiki: (e.g. https://github.com/project/repo/wiki/foo/bar/_edit ) repo_url: \"https://github.com/project/repo/wiki\" edit_uri_template: \"{path_noext}/_edit\" BitBucket editor: (e.g. https://bitbucket.org/project/repo/src/master/docs/foo/bar.md?mode=edit ) repo_url: \"https://bitbucket.org/project/repo/\" edit_uri_template: \"src/master/docs/{path}?mode=edit\" GitLab Static Site Editor: (e.g. https://gitlab.com/project/repo/-/sse/master/docs%2Ffoo%2bar.md ) repo_url: \"https://gitlab.com/project/repo\" edit_uri_template: \"-/sse/master/docs%2F{path!q}\" GitLab Web IDE: (e.g. https://gitlab.com/-/ide/project/repo/edit/master/-/docs/foo/bar.md ) edit_uri_template: \"https://gitlab.com/-/ide/project/repo/edit/master/-/docs/{path}\" default : null","title":"edit_uri_template"},{"location":"user-guide/configuration/#site_description","text":"Set the site description. This will add a meta tag to the generated HTML header. default : null","title":"site_description"},{"location":"user-guide/configuration/#site_author","text":"Set the name of the author. This will add a meta tag to the generated HTML header. default : null","title":"site_author"},{"location":"user-guide/configuration/#copyright","text":"Set the copyright information to be included in the documentation by the theme. default : null","title":"copyright"},{"location":"user-guide/configuration/#remote_branch","text":"Set the remote branch to commit to when using gh-deploy to deploy to GitHub Pages. This option can be overridden by a command line option in gh-deploy . default : gh-pages","title":"remote_branch"},{"location":"user-guide/configuration/#remote_name","text":"Set the remote name to push to when using gh-deploy to deploy to GitHub Pages. This option can be overridden by a command line option in gh-deploy . default : origin","title":"remote_name"},{"location":"user-guide/configuration/#_4","text":"","title":"\u6587\u6863\u5bfc\u822a"},{"location":"user-guide/configuration/#nav","text":"\u6b64\u8bbe\u7f6e\u7528\u4e8e\u786e\u5b9a\u7ad9\u70b9\u5168\u5c40\u5bfc\u822a\u7684\u683c\u5f0f\u548c\u5e03\u5c40\u3002 \u4e00\u4e2a\u6700\u5c0f\u7684\u5bfc\u822a\u914d\u7f6e\u5e94\u8be5\u662f\u8fd9\u6837\u7684: nav: - \"index.md\" - \"about.md\" \u5bfc\u822a\u914d\u7f6e\u4e2d\u7684\u6240\u6709\u8def\u5f84\u5fc5\u987b\u76f8\u5bf9\u4e8e docs_dir \u914d\u7f6e\u9009\u9879\u3002 \u8bf7\u53c2\u9605 \u914d\u7f6e\u9875\u9762\u548c\u5bfc\u822a \u4e00\u8282\uff0c\u4e86\u89e3\u66f4\u8be6\u7ec6\u7684\u7ec6\u5206\uff0c\u5305\u62ec\u5982\u4f55\u521b\u5efa\u5b50\u8282\u3002 \u5bfc\u822a\u9879\u4e5f\u53ef\u4ee5\u5305\u62ec\u5230\u5916\u90e8\u7ad9\u70b9\u7684\u94fe\u63a5\u3002 \u867d\u7136\u6807\u9898\u5bf9\u4e8e\u5185\u90e8\u94fe\u63a5\u662f\u53ef\u9009\u7684\uff0c\u4f46\u662f\u5bf9\u4e8e\u5916\u90e8\u94fe\u63a5\u662f\u5fc5\u9700\u7684\u3002 \u5916\u90e8\u94fe\u63a5\u53ef\u4ee5\u662f\u5b8c\u6574 URL\uff0c\u4e5f\u53ef\u4ee5\u662f\u76f8\u5bf9 URL\u3002 \u5728\u6587\u4ef6\u4e2d\u6ca1\u6709\u627e\u5230\u7684\u4efb\u4f55\u8def\u5f84\u90fd\u88ab\u8ba4\u4e3a\u662f\u5916\u90e8\u94fe\u63a5\u3002 \u5173\u4e8e MkDocs \u5982\u4f55\u786e\u5b9a\u6587\u6863\u7684\u9875\u9762\u6807\u9898\uff0c\u8bf7\u53c2\u9605[Meta-Data]\u90e8\u5206\u3002 nav: - Introduction: \"index.md\" - \"about.md\" - \"Issue Tracker\": \"https://example.com/\" \u5728\u4e0a\u9762\u7684\u793a\u4f8b\u4e2d\uff0c\u524d\u4e24\u9879\u6307\u5411\u672c\u5730\u6587\u4ef6\uff0c\u800c\u7b2c\u4e09\u9879\u6307\u5411\u5916\u90e8\u7ad9\u70b9\u3002 \u7136\u800c\uff0c\u6709\u65f6 MkDocs \u7ad9\u70b9\u6258\u7ba1\u5728\u9879\u76ee\u7ad9\u70b9\u7684\u5b50\u76ee\u5f55\u4e2d\uff0c\u60a8\u53ef\u80fd\u5e0c\u671b\u94fe\u63a5\u5230\u540c\u4e00\u7ad9\u70b9\u7684\u5176\u4ed6\u90e8\u5206\u800c\u4e0d\u5305\u62ec\u5b8c\u6574\u7684\u57df\u3002 \u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528\u9002\u5f53\u7684\u76f8\u5bf9 URL\u3002 site_url: https://example.com/foo/ nav: - Home: \"../\" - \"User Guide\": \"user-guide.md\" - \"Bug Tracker\": \"/bugs/\" \u5728\u4e0a\u9762\u7684\u4f8b\u5b50\u4e2d\uff0c\u4f7f\u7528\u4e86\u4e24\u79cd\u4e0d\u540c\u98ce\u683c\u7684\u5916\u90e8\u94fe\u63a5\u3002 \u9996\u5148\uff0c\u8bf7\u6ce8\u610f site_url \u8868\u793a MkDocs \u7ad9\u70b9\u6258\u7ba1\u5728\u57df\u7684 /foo/ \u5b50\u76ee\u5f55\u4e2d\u3002 \u56e0\u6b64\uff0c Home \u5bfc\u822a\u9879\u662f\u4e00\u4e2a\u76f8\u5bf9\u94fe\u63a5\uff0c\u5b83\u4e0a\u4e00\u7ea7\u5230\u670d\u52a1\u5668\u6839\u76ee\u5f55\uff0c\u6709\u6548\u5730\u6307\u5411 https://example.com/ \u3002 Bug Tracker \u9879\u4f7f\u7528\u4e86\u6765\u81ea\u670d\u52a1\u5668\u6839\u76ee\u5f55\u7684\u7edd\u5bf9\u8def\u5f84\uff0c\u6709\u6548\u5730\u6307\u5411 https://example.com/bugs/ \u3002 \u5f53\u7136\uff0c User Guide \u6307\u5411\u4e00\u4e2a\u672c\u5730 MkDocs \u9875\u9762\u3002 default : \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c nav \u5c06\u5305\u542b\u5728 docs_dir \u53ca\u5176\u5b50\u76ee\u5f55\u4e2d\u627e\u5230\u7684\u6240\u6709 Markdown \u6587\u4ef6\u7684\u5b57\u6bcd\u6570\u5b57\u6392\u5e8f\u5d4c\u5957\u5217\u8868\u3002 \u7d22\u5f15\u6587\u4ef6\u603b\u662f\u5728\u5b50\u8282\u4e2d\u5217\u5728\u524d\u9762\u3002","title":"nav"},{"location":"user-guide/configuration/#_5","text":"","title":"\u5efa\u7acb\u76ee\u5f55"},{"location":"user-guide/configuration/#theme","text":"\u8bbe\u7f6e\u6587\u6863\u7ad9\u70b9\u7684\u4e3b\u9898\u548c\u7279\u5b9a\u4e8e\u4e3b\u9898\u7684\u914d\u7f6e\u3002 \u53ef\u4ee5\u662f\u5b57\u7b26\u4e32\uff0c\u4e5f\u53ef\u4ee5\u662f\u4e00\u7ec4\u952e/\u503c\u5bf9\u3002 \u5982\u679c\u662f\u5b57\u7b26\u4e32\uff0c\u5219\u5fc5\u987b\u662f\u5df2\u77e5\u5df2\u5b89\u88c5\u4e3b\u9898\u7684\u5b57\u7b26\u4e32\u540d\u79f0\u3002 \u5982\u9700\u53ef\u7528\u4e3b\u9898\u5217\u8868\uff0c\u8bf7\u8bbf\u95ee \u9009\u62e9\u60a8\u7684\u4e3b\u9898 \u3002 \u4e00\u4e2a\u952e/\u503c\u5bf9\u7684\u4f8b\u5b50\u53ef\u80fd\u662f\u8fd9\u6837\u7684: theme: name: mkdocs locale: en custom_dir: my_theme_customizations/ static_templates: - sitemap.html include_sidebar: false If a set of key/value pairs, the following nested keys can be defined: Block","title":"theme"},{"location":"user-guide/configuration/#name","text":"The string name of a known installed theme. For a list of available themes visit Choosing Your Theme .","title":"name"},{"location":"user-guide/configuration/#locale","text":"A code representing the language of your site. See Localizing your theme for details.","title":"locale"},{"location":"user-guide/configuration/#custom_dir","text":"A directory containing a custom theme. This can either be a relative directory, in which case it is resolved relative to the directory containing your configuration file or it can be an absolute directory path from the root of your local file system. See Customizing Your Theme for details if you would like to tweak an existing theme. See the Theme Developer Guide if you would like to build your own theme from the ground up.","title":"custom_dir"},{"location":"user-guide/configuration/#static_templates","text":"A list of templates to render as static pages. The templates must be located in either the theme's template directory or in the custom_dir defined in the theme configuration.","title":"static_templates"},{"location":"user-guide/configuration/#theme-specific-keywords","text":"Any additional keywords supported by the theme can also be defined. See the documentation for the theme you are using for details. default : 'mkdocs'","title":"(theme specific keywords)"},{"location":"user-guide/configuration/#docs_dir","text":"The directory containing the documentation source markdown files. This can either be a relative directory, in which case it is resolved relative to the directory containing your configuration file, or it can be an absolute directory path from the root of your local file system. default : 'docs'","title":"docs_dir"},{"location":"user-guide/configuration/#site_dir","text":"The directory where the output HTML and other files are created. This can either be a relative directory, in which case it is resolved relative to the directory containing your configuration file, or it can be an absolute directory path from the root of your local file system. default : 'site' Note If you are using source code control you will normally want to ensure that your build output files are not committed into the repository, and only keep the source files under version control. For example, if using git you might add the following line to your .gitignore file: site/ If you're using another source code control tool, you'll want to check its documentation on how to ignore specific directories.","title":"site_dir"},{"location":"user-guide/configuration/#extra_css","text":"Set a list of CSS files in your docs_dir to be included by the theme. For example, the following example will include the extra.css file within the css subdirectory in your docs_dir . extra_css: - css/extra.css - css/second_extra.css default : [] (an empty list).","title":"extra_css"},{"location":"user-guide/configuration/#extra_javascript","text":"Set a list of JavaScript files in your docs_dir to be included by the theme. See the example in extra_css for usage. default : [] (an empty list).","title":"extra_javascript"},{"location":"user-guide/configuration/#extra_templates","text":"Set a list of templates in your docs_dir to be built by MkDocs. To see more about writing templates for MkDocs read the documentation about [custom themes] and specifically the section about the [available variables] to templates. See the example in extra_css for usage. default : [] (an empty list).","title":"extra_templates"},{"location":"user-guide/configuration/#extra","text":"A set of key-value pairs, where the values can be any valid YAML construct, that will be passed to the template. This allows for great flexibility when creating custom themes. For example, if you are using a theme that supports displaying the project version, you can pass it to the theme like this: extra: version: 1.0 default : By default extra will be an empty key-value mapping.","title":"extra"},{"location":"user-guide/configuration/#_6","text":"","title":"\u9884\u89c8\u63a7\u4ef6"},{"location":"user-guide/configuration/#_7","text":"","title":"\u73b0\u573a\u91cd\u88c5"},{"location":"user-guide/configuration/#watch","text":"Determines additional directories to watch when running mkdocs serve . Configuration is a YAML list. watch: - directory_a - directory_b Allows a custom default to be set without the need to pass it through the -w / --watch option every time the mkdocs serve command is called. Note The paths provided via the configuration file are relative to the configuration file. The paths provided via the -w / --watch CLI parameters are not.","title":"watch"},{"location":"user-guide/configuration/#use_directory_urls","text":"This setting controls the style used for linking to pages within the documentation. The following table demonstrates how the URLs used on the site differ when setting use_directory_urls to true or false . Source file use_directory_urls: true use_directory_urls: false index.md / /index.html api-guide.md /api-guide/ /api-guide.html about/license.md /about/license/ /about/license.html The default style of use_directory_urls: true creates more user friendly URLs, and is usually what you'll want to use. The alternate style can be useful if you want your documentation to remain properly linked when opening pages directly from the file system, because it creates links that point directly to the target file rather than the target directory . default : true","title":"use_directory_urls"},{"location":"user-guide/configuration/#strict","text":"Determines how warnings are handled. Set to true to halt processing when a warning is raised. Set to false to print a warning and continue processing. This is also available as a command line flag: --strict . default : false","title":"strict"},{"location":"user-guide/configuration/#dev_addr","text":"Determines the address used when running mkdocs serve . Must be of the format IP:PORT . Allows a custom default to be set without the need to pass it through the --dev-addr option every time the mkdocs serve command is called. default : '127.0.0.1:8000' See also: site_url .","title":"dev_addr"},{"location":"user-guide/configuration/#_8","text":"","title":"\u683c\u5f0f\u9009\u9879"},{"location":"user-guide/configuration/#markdown_extensions","text":"MkDocs uses the Python Markdown library to translate Markdown files into HTML. Python Markdown supports a variety of extensions that customize how pages are formatted. This setting lets you enable a list of extensions beyond the ones that MkDocs uses by default ( meta , toc , tables , and fenced_code ). For example, to enable the SmartyPants typography extension , use: markdown_extensions: - smarty Some extensions provide configuration options of their own. If you would like to set any configuration options, then you can nest a key/value mapping ( option_name: option value ) of any options that a given extension supports. See the documentation for the extension you are using to determine what options they support. For example, to enable permalinks in the (included) toc extension, use: markdown_extensions: - toc: permalink: True Note that a colon ( : ) must follow the extension name ( toc ) and then on a new line the option name and value must be indented and separated by a colon. If you would like to define multiple options for a single extension, each option must be defined on a separate line: markdown_extensions: - toc: permalink: True separator: \"_\" Add an additional item to the list for each extension. If you have no configuration options to set for a specific extension, then simply omit options for that extension: markdown_extensions: - smarty - toc: permalink: True - sane_lists In the above examples, each extension is a list item (starts with a - ). As an alternative, key/value pairs can be used instead. However, in that case an empty value must be provided for extensions for which no options are defined. Therefore, the last example above could also be defined as follows: markdown_extensions: smarty: {} toc: permalink: True sane_lists: {} This alternative syntax is required if you intend to override some options via inheritance . See Also: The Python-Markdown documentation provides a list of extensions which are available out-of-the-box. For a list of configuration options available for a given extension, see the documentation for that extension. You may also install and use various third party extensions . Consult the documentation provided by those extensions for installation instructions and available configuration options. default : [] (an empty list).","title":"markdown_extensions"},{"location":"user-guide/configuration/#hooks","text":"New in version 1.4 A list of paths to Python scripts (relative to mkdocs.yml ) that are loaded and used as plugin instances. For example: hooks: - my_hooks.py Then the file my_hooks.py can contain any plugin event handlers (without self ), e.g.: def on_page_markdown(markdown, **kwargs): return markdown.replace('a', 'z') ? EXAMPLE: Advanced example: This produces warnings based on the Markdown content (and warnings are fatal in strict mode): import logging, re import mkdocs.plugins log = logging.getLogger('mkdocs') @mkdocs.plugins.event_priority(-50) def on_page_markdown(markdown, page, **kwargs): path = page.file.src_uri for m in re.finditer(r'\\bhttp://[^) ]+', markdown): log.warning(f\"Documentation file '{path}' contains a non-HTTPS link: {m[0]}\") This does not enable any new abilities compared to plugins , it only simplifies one-off usages, as these don't need to be installed like plugins do. Note that for mkdocs serve the hook module will not be reloaded on each build. You might have seen this feature in the mkdocs-simple-hooks plugin . If using standard method names, it can be directly replaced, e.g.: -plugins: - - mkdocs-simple-hooks: - hooks: - on_page_markdown: 'my_hooks:on_page_markdown' +hooks: + - my_hooks.py","title":"hooks"},{"location":"user-guide/configuration/#plugins","text":"A list of plugins (with optional configuration settings) to use when building the site. See the Plugins documentation for full details. If the plugins config setting is defined in the mkdocs.yml config file, then any defaults (such as search ) are ignored and you need to explicitly re-enable the defaults if you would like to continue using them: plugins: - search - your_other_plugin To define options for a given plugin, use a nested set of key/value pairs: plugins: - search - your_other_plugin: option1: value option2: other value In the above examples, each plugin is a list item (starts with a - ). As an alternative, key/value pairs can be used instead. However, in that case an empty value must be provided for plugins for which no options are defined. Therefore, the last example above could also be defined as follows: plugins: search: {} your_other_plugin: option1: value option2: other value This alternative syntax is required if you intend to override some options via inheritance . To completely disable all plugins, including any defaults, set the plugins setting to an empty list: plugins: [] default : ['search'] (the \"search\" plugin included with MkDocs).","title":"plugins"},{"location":"user-guide/configuration/#search","text":"A search plugin is provided by default with MkDocs which uses lunr.js as a search engine. The following config options are available to alter the behavior of the search plugin:","title":"Search"},{"location":"user-guide/configuration/#separator","text":"A regular expression which matches the characters used as word separators when building the index. By default whitespace and the hyphen ( - ) are used. To add the dot ( . ) as a word separator you might do this: plugins: - search: separator: '[\\s\\-\\.]+' default : '[\\s\\-]+'","title":"separator"},{"location":"user-guide/configuration/#min_search_length","text":"An integer value that defines the minimum length for a search query. By default searches shorter than 3 chars in length are ignored as search result quality with short search terms are poor. However, for some use cases (such as documentation about Message Queues which might generate searches for 'MQ') it may be preferable to set a shorter limit. plugins: - search: min_search_length: 2 default : 3","title":"min_search_length"},{"location":"user-guide/configuration/#lang","text":"A list of languages to use when building the search index as identified by their ISO 639-1 language codes. With Lunr Languages , the following languages are supported: ar : Arabic da : Danish nl : Dutch en : English fi : Finnish fr : French de : German hu : Hungarian it : Italian ja : Japanese no : Norwegian pt : Portuguese ro : Romanian ru : Russian es : Spanish sv : Swedish th : Thai tr : Turkish vi : Vietnamese You may contribute additional languages . Warning While search does support using multiple languages together, it is best not to add additional languages unless you really need them. Each additional language adds significant bandwidth requirements and uses more browser resources. Generally, it is best to keep each instance of MkDocs to a single language. Note Lunr Languages does not currently include support for Chinese or other Asian languages. However, some users have reported decent results using Japanese. default : The value of theme.locale if set, otherwise [en] .","title":"lang"},{"location":"user-guide/configuration/#prebuild_index","text":"Optionally generates a pre-built index of all pages, which provides some performance improvements for larger sites. Before enabling, confirm that the theme you are using explicitly supports using a prebuilt index (the builtin themes do). Set to true to enable. Warning This option requires that Node.js be installed and the command node be on the system path. If the call to node fails for any reason, a warning is issued and the build continues uninterrupted. You may use the --strict flag when building to cause such a failure to raise an error instead. Note On smaller sites, using a pre-built index is not recommended as it creates a significant increase is bandwidth requirements with little to no noticeable improvement to your users. However, for larger sites (hundreds of pages), the bandwidth increase is relatively small and your users will notice a significant improvement in search performance. default : False","title":"prebuild_index"},{"location":"user-guide/configuration/#indexing","text":"Configures what strategy the search indexer will use when building the index for your pages. This property is particularly useful if your project is large in scale, and the index takes up an enormous amount of disk space. plugins: - search: indexing: \"full\"","title":"indexing"},{"location":"user-guide/configuration/#options","text":"Option Description full Indexes the title, section headings, and full text of each page. sections Indexes the title and section headings of each page. titles Indexes only the title of each page. default : full \uff03\uff03 \u73af\u5883\u53d8\u91cf In most cases, the value of a configuration option is set directly in the configuration file. However, as an option, the value of a configuration option may be set to the value of an environment variable using the !ENV tag. For example, to set the value of the site_name option to the value of the variable SITE_NAME the YAML file may contain the following: site_name: !ENV SITE_NAME If the environment variable is not defined, then the configuration setting would be assigned a null (or None in Python) value. A default value can be defined as the last value in a list. Like this: site_name: !ENV [SITE_NAME, \"My default site name\"] Multiple fallback variables can be used as well. Note that the last value is not an environment variable, but must be a value to use as a default if none of the specified environment variables are defined. site_name: !ENV [SITE_NAME, OTHER_NAME, \"My default site name\"] Simple types defined within an environment variable such as string, bool, integer, float, datestamp and null are parsed as if they were defined directly in the YAML file, which means that the value will be converted to the appropriate type. However, complex types such as lists and key/value pairs cannot be defined within a single environment variable. For more details, see the pyyaml_env_tag project.","title":"Options"},{"location":"user-guide/configuration/#_9","text":"\u901a\u5e38\uff0c\u5355\u4e2a\u6587\u4ef6\u5c06\u4fdd\u5b58\u7ad9\u70b9\u7684\u6574\u4e2a\u914d\u7f6e\u3002 \u7136\u800c\uff0c\u4e00\u4e9b\u7ec4\u7ec7\u53ef\u80fd\u7ef4\u62a4\u591a\u4e2a\u7ad9\u70b9\uff0c\u8fd9\u4e9b\u7ad9\u70b9\u4e4b\u95f4\u5171\u4eab\u4e00\u4e2a\u516c\u5171\u914d\u7f6e\u3002 \u516c\u5171\u914d\u7f6e\u9009\u9879\u53ef\u4ee5\u5728\u7236\u914d\u7f6e\u6587\u4ef6\u4e2d\u5b9a\u4e49\uff0c\u6bcf\u4e2a\u7ad9\u70b9\u7684\u4e3b\u914d\u7f6e\u6587\u4ef6\u5c06\u7ee7\u627f\u8be5\u914d\u7f6e\u6587\u4ef6\uff0c\u800c\u4e0d\u662f\u4e3a\u6bcf\u4e2a\u7ad9\u70b9\u7ef4\u62a4\u5355\u72ec\u7684\u914d\u7f6e\u3002 \u8981\u4e3a\u914d\u7f6e\u6587\u4ef6\u5b9a\u4e49\u7236\u6587\u4ef6\uff0c\u8bf7\u5c06 INHERIT (\u5168\u5927\u5199)\u952e\u8bbe\u7f6e\u4e3a\u7236\u6587\u4ef6\u7684\u8def\u5f84\u3002 \u8def\u5f84\u5fc5\u987b\u76f8\u5bf9\u4e8e\u4e3b\u6587\u4ef6\u7684\u4f4d\u7f6e\u3002 \u5bf9\u4e8e\u8981\u4e0e\u7236\u914d\u7f6e\u5408\u5e76\u7684\u914d\u7f6e\u9009\u9879\uff0c\u5fc5\u987b\u5c06\u8fd9\u4e9b\u9009\u9879\u5b9a\u4e49\u4e3a\u952e/\u503c\u5bf9\u3002 \u5177\u4f53\u6765\u8bf4\uff0c markdown_extensions \u548c plugins \u9009\u9879\u5fc5\u987b\u4f7f\u7528\u4e0d\u4f7f\u7528\u5217\u8868\u9879(\u4ee5 - \u5f00\u5934\u7684\u884c)\u7684\u66ff\u4ee3\u8bed\u6cd5\u3002 \u4f8b\u5982\uff0c\u5047\u8bbe\u516c\u5171(\u7236)\u914d\u7f6e\u5b9a\u4e49\u5728 base.yml \u4e2d: theme: name: mkdocs locale: en highlightjs: true markdown_extensions: toc: permalink: true admonition: {} \u7136\u540e\uff0c\u5bf9\u4e8e\u201cfoo\u201d\u7ad9\u70b9\uff0c\u4e3b\u914d\u7f6e\u6587\u4ef6\u5c06\u5b9a\u4e49\u5728 foo/mkdocs.yml : INHERIT: ../base.yml site_name: Foo Project site_url: https://example.com/foo \u5f53\u8fd0\u884c mkdocs build \u65f6\uff0c foo/mkdocs.yml \u5904\u7684\u6587\u4ef6\u5c06\u4f5c\u4e3a\u914d\u7f6e\u6587\u4ef6\u4f20\u5165\u3002 \u7136\u540e MkDocs \u5c06\u89e3\u6790\u8be5\u6587\u4ef6\uff0c\u68c0\u7d22\u5e76\u89e3\u6790\u7236\u6587\u4ef6 base.yml \uff0c\u5e76\u5c06\u4e24\u8005\u6df1\u5ea6\u5408\u5e76\u3002 \u8fd9\u5c06\u5bfc\u81f4 MkDocs \u6536\u5230\u4ee5\u4e0b\u5408\u5e76\u914d\u7f6e: site_name: Foo Project site_url: https://example.com/foo theme: name: mkdocs locale: en highlightjs: true markdown_extensions: toc: permalink: true admonition: {} \u6df1\u5ea6\u5408\u5e76\u5141\u8bb8\u60a8\u5728\u4e3b\u914d\u7f6e\u6587\u4ef6\u4e2d\u6dfb\u52a0\u548c/\u6216\u8986\u76d6\u5404\u79cd\u503c\u3002 \u4f8b\u5982\uff0c\u5047\u8bbe\u5bf9\u4e8e\u4e00\u4e2a\u7ad9\u70b9\uff0c\u60a8\u5e0c\u671b\u6dfb\u52a0\u5bf9\u5b9a\u4e49\u5217\u8868\u7684\u652f\u6301\uff0c\u4e3a\u6c38\u4e45\u94fe\u63a5\u4f7f\u7528\u4e0d\u540c\u7684\u7b26\u53f7\uff0c\u5e76\u5b9a\u4e49\u4e0d\u540c\u7684\u5206\u9694\u7b26\u3002 \u5728\u8be5\u7ad9\u70b9\u7684\u4e3b\u914d\u7f6e\u6587\u4ef6\u4e2d\uff0c\u60a8\u53ef\u4ee5\u8fd9\u6837\u505a: INHERIT: ../base.yml site_name: Bar Project site_url: https://example.com/bar markdown_extensions: def_list: {} toc: permalink: \uf0c1 separator: \"_\" \u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u4e0a\u8ff0\u914d\u7f6e\u5c06\u4e0e base.yml \u6df1\u5ea6\u5408\u5e76\uff0c\u5e76\u4ea7\u751f\u4ee5\u4e0b\u914d\u7f6e: site_name: Bar Project site_url: https://example.com/bar theme: name: mkdocs locale: en highlightjs: true markdown_extensions: def_list: {} toc: permalink: \uf0c1 separator: \"_\" admonition: {} \u6ce8\u610f\uff0c admonition \u6269\u5c55\u4ece\u7236\u914d\u7f6e\u4e2d\u4fdd\u7559\uff0c def_list \u6269\u5c55\u88ab\u6dfb\u52a0\uff0c toc.permalink \u7684\u503c\u88ab\u66ff\u6362\uff0c toc.separator \u7684\u503c\u88ab\u6dfb\u52a0\u3002 \u60a8\u53ef\u4ee5\u66ff\u6362\u6216\u5408\u5e76\u4efb\u4f55\u952e\u7684\u503c\u3002 \u4f46\u662f\uff0c\u4efb\u4f55\u975e\u952e\u90fd\u5c06\u88ab\u66ff\u6362\u3002 \u56e0\u6b64\uff0c\u4e0d\u80fd\u5c06\u9879\u8ffd\u52a0\u5230\u5217\u8868\u4e2d\u3002 \u60a8\u5fc5\u987b\u91cd\u65b0\u5b9a\u4e49\u6574\u4e2a\u5217\u8868\u3002 \u7531\u4e8e nav \u914d\u7f6e\u7531\u5d4c\u5957\u5217\u8868\u7ec4\u6210\uff0c\u8fd9\u610f\u5473\u7740\u60a8\u4e0d\u80fd\u5408\u5e76\u5bfc\u822a\u9879\u3002 \u5f53\u7136\uff0c\u4f60\u53ef\u4ee5\u5c06\u6574\u4e2a nav \u914d\u7f6e\u66ff\u6362\u4e3a\u4e00\u4e2a\u65b0\u7684\u3002\u4f46\u662f\uff0c\u901a\u5e38\u671f\u671b\u6574\u4e2a\u5bfc\u822a\u5c06\u5728\u9879\u76ee\u7684\u4e3b\u914d\u7f6e\u6587\u4ef6\u4e2d\u5b9a\u4e49\u3002 Warning \u63d0\u9192\u4e00\u4e0b\uff0c\u6240\u6709\u57fa\u4e8e\u8def\u5f84\u7684\u914d\u7f6e\u9009\u9879\u90fd\u5fc5\u987b\u76f8\u5bf9\u4e8e\u4e3b\u914d\u7f6e\u6587\u4ef6\uff0cMkDocs \u5728\u5408\u5e76\u65f6\u4e0d\u4f1a\u6539\u53d8\u8def\u5f84\u3002 \u56e0\u6b64\uff0c\u5728\u7531\u591a\u4e2a\u4e0d\u540c\u7ad9\u70b9\u7ee7\u627f\u7684\u7236\u6587\u4ef6\u4e2d\u5b9a\u4e49\u8def\u5f84\u53ef\u80fd\u65e0\u6cd5\u6b63\u5e38\u5de5\u4f5c\u3002 \u901a\u5e38\u6700\u597d\u53ea\u5728\u4e3b\u914d\u7f6e\u6587\u4ef6\u4e2d\u5b9a\u4e49\u57fa\u4e8e\u8def\u5f84\u7684\u9009\u9879\u3002","title":"\u914d\u7f6e\u7ee7\u627f"},{"location":"user-guide/customizing-your-theme/","text":"\u81ea\u5b9a\u4e49\u60a8\u7684\u4e3b\u9898 \u00b6 \u66f4\u6539\u4e3b\u9898\u4ee5\u6ee1\u8db3\u60a8\u7684\u9700\u6c42\u3002 If you would like to make a few tweaks to an existing theme, there is no need to create your own theme from scratch. For minor tweaks which only require some CSS and/or JavaScript, you can use the docs_dir . However, for more complex customizations, including overriding templates, you will need to use the theme custom_dir setting. \u4f7f\u7528 docs_dir \u00b6 The extra_css and extra_javascript configuration options can be used to make tweaks and customizations to existing themes. To use these, you simply need to include either CSS or JavaScript files within your documentation directory . For example, to change the color of the headers in your documentation, create a file called extra.css and place it next to the documentation Markdown. In that file add the following CSS. h1 { color: red; } Note If you are deploying your documentation with ReadTheDocs . You will need to explicitly list the CSS and JavaScript files you want to include in your config. To do this, add the following to your mkdocs.yml. extra_css: [extra.css] After making these changes, they should be visible when you run mkdocs serve - if you already had this running, you should see that the CSS changes were automatically picked up and the documentation will be updated. Note Any extra CSS or JavaScript files will be added to the generated HTML document after the page content. If you desire to include a JavaScript library, you may have better success including the library by using the theme custom_dir . \u4f7f\u7528\u4e3b\u9898 custom_dir \u00b6 The theme.custom_dir configuration option can be used to point to a directory of files which override the files in a parent theme. The parent theme would be the theme defined in the theme.name configuration option. Any file in the custom_dir with the same name as a file in the parent theme will replace the file of the same name in the parent theme. Any additional files in the custom_dir will be added to the parent theme. The contents of the custom_dir should mirror the directory structure of the parent theme. You may include templates, JavaScript files, CSS files, images, fonts, or any other media included in a theme. Note For this to work, the theme.name setting must be set to a known installed theme. If the name setting is instead set to null (or not defined), then there is no theme to override and the contents of the custom_dir must be a complete, standalone theme. See the Theme Developer Guide for more information. For example, the mkdocs theme ( browse source ), contains the following directory structure (in part): - css\\ - fonts\\ - img\\ - favicon.ico - grid.png - js\\ - 404.html - base.html - content.html - nav-sub.html - nav.html - toc.html To override any of the files contained in that theme, create a new directory next to your docs_dir : mkdir custom_theme And then point your mkdocs.yml configuration file at the new directory: theme: name: mkdocs custom_dir: custom_theme/ To override the 404 error page (\"file not found\"), add a new template file named 404.html to the custom_theme directory. For information on what can be included in a template, review the Theme Developer Guide . To override the favicon, you can add a new icon file at custom_theme/img/favicon.ico . To include a JavaScript library, copy the library to the custom_theme/js/ directory. Your directory structure should now look like this: - docs/ - index.html - custom_theme/ - img/ - favicon.ico - js/ - somelib.js - 404.html - config.yml Note Any files included in the parent theme (defined in name ) but not included in the custom_dir will still be utilized. The custom_dir will only override/replace files in the parent theme. If you want to remove files, or build a theme from scratch, then you should review the Theme Developer Guide . Overriding Template Blocks \u00b6 The built-in themes implement many of their parts inside template blocks which can be individually overridden in the main.html template. Simply create a main.html template file in your custom_dir and define replacement blocks within that file. Just make sure that the main.html extends base.html . For example, to alter the title of the MkDocs theme, your replacement main.html template would contain the following: {% extends \"base.html\" %} {% block htmltitle %} <title>Custom title goes here</title> {% endblock %} In the above example, the htmltitle block defined in your custom main.html file will be used in place of the default htmltitle block defined in the parent theme. You may re-define as many blocks as you desire, as long as those blocks are defined in the parent. For example, you could replace the Google Analytics script with one for a different service or replace the search feature with your own. You will need to consult the parent theme you are using to determine what blocks are available to override. The MkDocs and ReadTheDocs themes provide the following blocks: site_meta : Contains meta tags in the document head. htmltitle : Contains the page title in the document head. styles : Contains the link tags for stylesheets. libs : Contains the JavaScript libraries (jQuery, etc) included in the page header. scripts : Contains JavaScript scripts which should execute after a page loads. analytics : Contains the analytics script. extrahead : An empty block in the <head> to insert custom tags/scripts/etc. site_name : Contains the site name in the navigation bar. site_nav : Contains the site navigation in the navigation bar. search_button : Contains the search box in the navigation bar. next_prev : Contains the next and previous buttons in the navigation bar. repo : Contains the repository link in the navigation bar. content : Contains the page content and table of contents for the page. footer : Contains the page footer. You may need to view the source template files to ensure your modifications will work with the structure of the site. See Template Variables for a list of variables you can use within your custom blocks. For a more complete explanation of blocks, consult the Jinja documentation . Combining the custom_dir and Template Blocks \u00b6 Adding a JavaScript library to the custom_dir will make it available, but won't include it in the pages generated by MkDocs. Therefore, a link needs to be added to the library from the HTML. Starting the with directory structure above (truncated): - docs/ - custom_theme/ - js/ - somelib.js - config.yml A link to the custom_theme/js/somelib.js file needs to be added to the template. As somelib.js is a JavaScript library, it would logically go in the libs block. However, a new libs block that only includes the new script will replace the block defined in the parent template and any links to libraries in the parent template will be removed. To avoid breaking the template, a super block can be used with a call to super from within the block: {% extends \"base.html\" %} {% block libs %} {{ super() }} <script src=\"{{ base_url }}/js/somelib.js\"></script> {% endblock %} Note that the base_url template variable was used to ensure that the link is always relative to the current page. Now the generated pages will include links to the template provided libraries as well as the library included in the custom_dir . The same would be required for any additional CSS files included in the custom_dir .","title":"\u5b9a\u5236\u4e3b\u9898"},{"location":"user-guide/customizing-your-theme/#_1","text":"\u66f4\u6539\u4e3b\u9898\u4ee5\u6ee1\u8db3\u60a8\u7684\u9700\u6c42\u3002 If you would like to make a few tweaks to an existing theme, there is no need to create your own theme from scratch. For minor tweaks which only require some CSS and/or JavaScript, you can use the docs_dir . However, for more complex customizations, including overriding templates, you will need to use the theme custom_dir setting.","title":"\u81ea\u5b9a\u4e49\u60a8\u7684\u4e3b\u9898"},{"location":"user-guide/customizing-your-theme/#docs_dir","text":"The extra_css and extra_javascript configuration options can be used to make tweaks and customizations to existing themes. To use these, you simply need to include either CSS or JavaScript files within your documentation directory . For example, to change the color of the headers in your documentation, create a file called extra.css and place it next to the documentation Markdown. In that file add the following CSS. h1 { color: red; } Note If you are deploying your documentation with ReadTheDocs . You will need to explicitly list the CSS and JavaScript files you want to include in your config. To do this, add the following to your mkdocs.yml. extra_css: [extra.css] After making these changes, they should be visible when you run mkdocs serve - if you already had this running, you should see that the CSS changes were automatically picked up and the documentation will be updated. Note Any extra CSS or JavaScript files will be added to the generated HTML document after the page content. If you desire to include a JavaScript library, you may have better success including the library by using the theme custom_dir .","title":"\u4f7f\u7528 docs_dir"},{"location":"user-guide/customizing-your-theme/#custom_dir","text":"The theme.custom_dir configuration option can be used to point to a directory of files which override the files in a parent theme. The parent theme would be the theme defined in the theme.name configuration option. Any file in the custom_dir with the same name as a file in the parent theme will replace the file of the same name in the parent theme. Any additional files in the custom_dir will be added to the parent theme. The contents of the custom_dir should mirror the directory structure of the parent theme. You may include templates, JavaScript files, CSS files, images, fonts, or any other media included in a theme. Note For this to work, the theme.name setting must be set to a known installed theme. If the name setting is instead set to null (or not defined), then there is no theme to override and the contents of the custom_dir must be a complete, standalone theme. See the Theme Developer Guide for more information. For example, the mkdocs theme ( browse source ), contains the following directory structure (in part): - css\\ - fonts\\ - img\\ - favicon.ico - grid.png - js\\ - 404.html - base.html - content.html - nav-sub.html - nav.html - toc.html To override any of the files contained in that theme, create a new directory next to your docs_dir : mkdir custom_theme And then point your mkdocs.yml configuration file at the new directory: theme: name: mkdocs custom_dir: custom_theme/ To override the 404 error page (\"file not found\"), add a new template file named 404.html to the custom_theme directory. For information on what can be included in a template, review the Theme Developer Guide . To override the favicon, you can add a new icon file at custom_theme/img/favicon.ico . To include a JavaScript library, copy the library to the custom_theme/js/ directory. Your directory structure should now look like this: - docs/ - index.html - custom_theme/ - img/ - favicon.ico - js/ - somelib.js - 404.html - config.yml Note Any files included in the parent theme (defined in name ) but not included in the custom_dir will still be utilized. The custom_dir will only override/replace files in the parent theme. If you want to remove files, or build a theme from scratch, then you should review the Theme Developer Guide .","title":"\u4f7f\u7528\u4e3b\u9898 custom_dir"},{"location":"user-guide/customizing-your-theme/#overriding-template-blocks","text":"The built-in themes implement many of their parts inside template blocks which can be individually overridden in the main.html template. Simply create a main.html template file in your custom_dir and define replacement blocks within that file. Just make sure that the main.html extends base.html . For example, to alter the title of the MkDocs theme, your replacement main.html template would contain the following: {% extends \"base.html\" %} {% block htmltitle %} <title>Custom title goes here</title> {% endblock %} In the above example, the htmltitle block defined in your custom main.html file will be used in place of the default htmltitle block defined in the parent theme. You may re-define as many blocks as you desire, as long as those blocks are defined in the parent. For example, you could replace the Google Analytics script with one for a different service or replace the search feature with your own. You will need to consult the parent theme you are using to determine what blocks are available to override. The MkDocs and ReadTheDocs themes provide the following blocks: site_meta : Contains meta tags in the document head. htmltitle : Contains the page title in the document head. styles : Contains the link tags for stylesheets. libs : Contains the JavaScript libraries (jQuery, etc) included in the page header. scripts : Contains JavaScript scripts which should execute after a page loads. analytics : Contains the analytics script. extrahead : An empty block in the <head> to insert custom tags/scripts/etc. site_name : Contains the site name in the navigation bar. site_nav : Contains the site navigation in the navigation bar. search_button : Contains the search box in the navigation bar. next_prev : Contains the next and previous buttons in the navigation bar. repo : Contains the repository link in the navigation bar. content : Contains the page content and table of contents for the page. footer : Contains the page footer. You may need to view the source template files to ensure your modifications will work with the structure of the site. See Template Variables for a list of variables you can use within your custom blocks. For a more complete explanation of blocks, consult the Jinja documentation .","title":"Overriding Template Blocks"},{"location":"user-guide/customizing-your-theme/#combining-the-custom_dir-and-template-blocks","text":"Adding a JavaScript library to the custom_dir will make it available, but won't include it in the pages generated by MkDocs. Therefore, a link needs to be added to the library from the HTML. Starting the with directory structure above (truncated): - docs/ - custom_theme/ - js/ - somelib.js - config.yml A link to the custom_theme/js/somelib.js file needs to be added to the template. As somelib.js is a JavaScript library, it would logically go in the libs block. However, a new libs block that only includes the new script will replace the block defined in the parent template and any links to libraries in the parent template will be removed. To avoid breaking the template, a super block can be used with a call to super from within the block: {% extends \"base.html\" %} {% block libs %} {{ super() }} <script src=\"{{ base_url }}/js/somelib.js\"></script> {% endblock %} Note that the base_url template variable was used to ensure that the link is always relative to the current page. Now the generated pages will include links to the template provided libraries as well as the library included in the custom_dir . The same would be required for any additional CSS files included in the custom_dir .","title":"Combining the custom_dir and Template Blocks"},{"location":"user-guide/deploying-your-docs/","text":"\u90e8\u7f72\u60a8\u7684\u6587\u6863 \u00b6 \u5c06\u6587\u6863\u90e8\u7f72\u5230\u5404\u79cd\u6258\u7ba1\u63d0\u4f9b\u5546\u7684\u57fa\u672c\u6307\u5357 GitHub Pages \u00b6 \u5982\u679c\u4f60\u5728 GitHub \u4e0a\u6258\u7ba1\u9879\u76ee\u7684\u6e90\u4ee3\u7801\uff0c\u4f60\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u4f7f\u7528 GitHub Pages \u6765\u6258\u7ba1\u9879\u76ee\u7684\u6587\u6863\u3002 \u6709\u4e24\u79cd\u57fa\u672c\u7c7b\u578b\u7684GitHub\u9875\u9762\u7f51\u7ad9: \u9879\u76ee\u9875\u9762 \u7f51\u7ad9\uff0c\u548c \u7528\u6237\u548c\u7ec4\u7ec7\u9875\u9762 \u7f51\u7ad9\u3002 \u5b83\u4eec\u51e0\u4e4e\u76f8\u540c\uff0c\u4f46\u6709\u4e00\u4e9b\u91cd\u8981\u7684\u5dee\u5f02\uff0c\u5728\u90e8\u7f72\u65f6\u9700\u8981\u4e0d\u540c\u7684\u5de5\u4f5c\u6d41\u7a0b\u3002 Project Pages \u00b6 Project Pages\u7ad9\u70b9\u66f4\u7b80\u5355\uff0c\u56e0\u4e3a\u7ad9\u70b9\u6587\u4ef6\u88ab\u90e8\u7f72\u5230\u9879\u76ee\u5b58\u50a8\u5e93\u4e2d\u7684\u5206\u652f(\u9ed8\u8ba4\u4e3a gh-pages )\u3002 \u5728\u4f60 checkout \u7ef4\u62a4\u9879\u76ee\u6e90\u6587\u6863\u7684git\u5b58\u50a8\u5e93\u7684\u4e3b\u8981\u5de5\u4f5c\u5206\u652f(\u901a\u5e38\u662f master )\u540e\uff0c\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4: mkdocs gh-deploy That's it! Behind the scenes, MkDocs will build your docs and use the ghp-import tool to commit them to the gh-pages branch and push the gh-pages branch to GitHub. Use mkdocs gh-deploy --help to get a full list of options available for the gh-deploy command. Be aware that you will not be able to review the built site before it is pushed to GitHub. Therefore, you may want to verify any changes you make to the docs beforehand by using the build or serve commands and reviewing the built files locally. Warning You should never edit files in your pages repository by hand if you're using the gh-deploy command because you will lose your work the next time you run the command. Warning If there are untracked files or uncommitted work in the local repository where mkdocs gh-deploy is run, these will be included in the pages that are deployed. Organization and User Pages \u00b6 User and Organization Pages sites are not tied to a specific project, and the site files are deployed to the master branch in a dedicated repository named with the GitHub account name. Therefore, you need working copies of two repositories on our local system. For example, consider the following file structure: my-project/ mkdocs.yml docs/ orgname.github.io/ After making and verifying updates to your project you need to change directories to the orgname.github.io repository and call the mkdocs gh-deploy command from there: cd ../orgname.github.io/ mkdocs gh-deploy --config-file ../my-project/mkdocs.yml --remote-branch master Note that you need to explicitly point to the mkdocs.yml configuration file as it is no longer in the current working directory. You also need to inform the deploy script to commit to the master branch. You may override the default with the remote_branch configuration setting, but if you forget to change directories before running the deploy script, it will commit to the master branch of your project, which you probably don't want. \u81ea\u5b9a\u4e49\u7684\u57df \u00b6 GitHub Pages includes support for using a Custom Domain for your site. In addition to the steps documented by GitHub, you need to take one additional step so that MkDocs will work with your custom domain. You need to add a CNAME file to the root of your docs_dir . The file must contain a single bare domain or subdomain on a single line (see MkDocs' own CNAME file as an example). You may create the file manually, or use GitHub's web interface to set up the custom domain (under Settings / Custom Domain). If you use the web interface, GitHub will create the CNAME file for you and save it to the root of your \"pages\" branch. So that the file does not get removed the next time you deploy, you need to copy the file to your docs_dir . With the file properly included in your docs_dir , MkDocs will include the file in your built site and push it to your \"pages\" branch each time you run the gh-deploy command. If you are having problems getting a custom domain to work, see GitHub's documentation on Troubleshooting custom domains . \u9605\u8bfb\u6587\u6863 \u00b6 Read the Docs offers free documentation hosting. You can import your docs using any major version control system, including Mercurial, Git, Subversion, and Bazaar. Read the Docs supports MkDocs out-of-the-box. Follow the instructions on their site to arrange the files in your repository properly, create an account and point it at your publicly hosted repository. If properly configured, your documentation will update each time you push commits to your public repository. Note To benefit from all of the features offered by Read the Docs, you will need to use the Read the Docs theme which ships with MkDocs. The various themes which may be referenced in Read the Docs' documentation are Sphinx specific themes and will not work with MkDocs. \u5176\u4ed6\u4f9b\u5e94\u5546 \u00b6 \u4efb\u4f55\u53ef\u4ee5\u63d0\u4f9b\u9759\u6001\u6587\u4ef6\u7684\u6258\u7ba1\u63d0\u4f9b\u5546\u90fd\u53ef\u4ee5\u7528\u6765\u63d0\u4f9bMkDocs\u751f\u6210\u7684\u6587\u6863\u3002 \u867d\u7136\u4e0d\u53ef\u80fd\u8bb0\u5f55\u5982\u4f55\u5c06\u6587\u6863\u4e0a\u4f20\u5230\u6bcf\u4e2a\u6258\u7ba1\u63d0\u4f9b\u5546\uff0c\u4f46\u4ee5\u4e0b\u6307\u5357\u5e94\u8be5\u80fd\u63d0\u4f9b\u4e00\u4e9b\u4e00\u822c\u6027\u7684\u5e2e\u52a9\u3002 When you build your site (using the mkdocs build command), all of the files are written to the directory assigned to the site_dir configuration option (defaults to \"site\" ) in your mkdocs.yaml config file. Generally, you will simply need to copy the contents of that directory to the root directory of your hosting provider's server. Depending on your hosting provider's setup, you may need to use a graphical or command line ftp , ssh or scp client to transfer the files. For example, a typical set of commands from the command line might look something like this: mkdocs build scp -r ./site user@host:/path/to/server/root Of course, you will need to replace user with the username you have with your hosting provider and host with the appropriate domain name. Additionally, you will need to adjust the /path/to/server/root to match the configuration of your hosts' file system. See your host's documentation for specifics. You will likely want to search their documentation for \"ftp\" or \"uploading site\". \u672c\u5730\u6587\u4ef6 \u00b6 Rather than hosting your documentation on a server, you may instead distribute the files directly, which can then be viewed in a browser using the file:// scheme. Note that, due to the security settings of all modern browsers, some things will not work the same and some features may not work at all. In fact, a few settings will need to be customized in very specific ways. site_url : The site_url must be set to an empty string, which instructs MkDocs to build your site so that it will work with the file:// scheme. site_url: \"\" use_directory_urls : Set use_directory_urls to false . Otherwise, internal links between pages will not work properly. use_directory_urls: false search : You will need to either disable the search plugin, or use a third-party search plugin which is specifically designed to work with the file:// scheme. To disable all plugins, set the plugins setting to an empty list. plugins: [] If you have other plugins enabled, simply ensure that search is not included in the list. When writing your documentation, it is imperative that all internal links use relative URLs as documented . Remember, each reader of your documentation will be using a different device and the files will likely be in a different location on that device. If you expect your documentation to be viewed off-line, you may also need to be careful about which themes you choose. Many themes make use of CDNs for various support files, which require a live Internet connection. You will need to choose a theme which includes all support files directly in the theme. When you build your site (using the mkdocs build command), all of the files are written to the directory assigned to the site_dir configuration option (defaults to \"site\" ) in your mkdocs.yaml config file. Generally, you will simply need to copy the contents of that directory and distribute it to your readers. Alternatively, you may choose to use a third party tool to convert the HTML files to some other documentation format. 404 Pages \u00b6 \u5f53MkDocs\u6784\u5efa\u6587\u6863\u65f6\uff0c\u5b83\u5c06\u5728 build\u76ee\u5f55 \u4e2d\u5305\u542b\u4e00\u4e2a404.html\u6587\u4ef6\u3002 \u8be5\u6587\u4ef6\u5c06\u5728\u90e8\u7f72\u5230 GitHub \u65f6\u81ea\u52a8\u4f7f\u7528\uff0c\u4f46\u4ec5\u9650\u4e8e\u81ea\u5b9a\u4e49\u57df\u3002 \u5176\u4ed6web\u670d\u52a1\u5668\u53ef\u80fd\u4f1a\u914d\u7f6e\u4f7f\u7528\u5b83\uff0c\u4f46\u8be5\u529f\u80fd\u5e76\u4e0d\u603b\u662f\u53ef\u7528\u7684\u3002 \u6709\u5173\u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605\u6240\u9009\u670d\u52a1\u5668\u7684\u6587\u6863\u3002","title":"\u90e8\u7f72\u6587\u6863"},{"location":"user-guide/deploying-your-docs/#_1","text":"\u5c06\u6587\u6863\u90e8\u7f72\u5230\u5404\u79cd\u6258\u7ba1\u63d0\u4f9b\u5546\u7684\u57fa\u672c\u6307\u5357","title":"\u90e8\u7f72\u60a8\u7684\u6587\u6863"},{"location":"user-guide/deploying-your-docs/#github-pages","text":"\u5982\u679c\u4f60\u5728 GitHub \u4e0a\u6258\u7ba1\u9879\u76ee\u7684\u6e90\u4ee3\u7801\uff0c\u4f60\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u4f7f\u7528 GitHub Pages \u6765\u6258\u7ba1\u9879\u76ee\u7684\u6587\u6863\u3002 \u6709\u4e24\u79cd\u57fa\u672c\u7c7b\u578b\u7684GitHub\u9875\u9762\u7f51\u7ad9: \u9879\u76ee\u9875\u9762 \u7f51\u7ad9\uff0c\u548c \u7528\u6237\u548c\u7ec4\u7ec7\u9875\u9762 \u7f51\u7ad9\u3002 \u5b83\u4eec\u51e0\u4e4e\u76f8\u540c\uff0c\u4f46\u6709\u4e00\u4e9b\u91cd\u8981\u7684\u5dee\u5f02\uff0c\u5728\u90e8\u7f72\u65f6\u9700\u8981\u4e0d\u540c\u7684\u5de5\u4f5c\u6d41\u7a0b\u3002","title":"GitHub Pages"},{"location":"user-guide/deploying-your-docs/#project-pages","text":"Project Pages\u7ad9\u70b9\u66f4\u7b80\u5355\uff0c\u56e0\u4e3a\u7ad9\u70b9\u6587\u4ef6\u88ab\u90e8\u7f72\u5230\u9879\u76ee\u5b58\u50a8\u5e93\u4e2d\u7684\u5206\u652f(\u9ed8\u8ba4\u4e3a gh-pages )\u3002 \u5728\u4f60 checkout \u7ef4\u62a4\u9879\u76ee\u6e90\u6587\u6863\u7684git\u5b58\u50a8\u5e93\u7684\u4e3b\u8981\u5de5\u4f5c\u5206\u652f(\u901a\u5e38\u662f master )\u540e\uff0c\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4: mkdocs gh-deploy That's it! Behind the scenes, MkDocs will build your docs and use the ghp-import tool to commit them to the gh-pages branch and push the gh-pages branch to GitHub. Use mkdocs gh-deploy --help to get a full list of options available for the gh-deploy command. Be aware that you will not be able to review the built site before it is pushed to GitHub. Therefore, you may want to verify any changes you make to the docs beforehand by using the build or serve commands and reviewing the built files locally. Warning You should never edit files in your pages repository by hand if you're using the gh-deploy command because you will lose your work the next time you run the command. Warning If there are untracked files or uncommitted work in the local repository where mkdocs gh-deploy is run, these will be included in the pages that are deployed.","title":"Project Pages"},{"location":"user-guide/deploying-your-docs/#organization-and-user-pages","text":"User and Organization Pages sites are not tied to a specific project, and the site files are deployed to the master branch in a dedicated repository named with the GitHub account name. Therefore, you need working copies of two repositories on our local system. For example, consider the following file structure: my-project/ mkdocs.yml docs/ orgname.github.io/ After making and verifying updates to your project you need to change directories to the orgname.github.io repository and call the mkdocs gh-deploy command from there: cd ../orgname.github.io/ mkdocs gh-deploy --config-file ../my-project/mkdocs.yml --remote-branch master Note that you need to explicitly point to the mkdocs.yml configuration file as it is no longer in the current working directory. You also need to inform the deploy script to commit to the master branch. You may override the default with the remote_branch configuration setting, but if you forget to change directories before running the deploy script, it will commit to the master branch of your project, which you probably don't want.","title":"Organization and User Pages"},{"location":"user-guide/deploying-your-docs/#_2","text":"GitHub Pages includes support for using a Custom Domain for your site. In addition to the steps documented by GitHub, you need to take one additional step so that MkDocs will work with your custom domain. You need to add a CNAME file to the root of your docs_dir . The file must contain a single bare domain or subdomain on a single line (see MkDocs' own CNAME file as an example). You may create the file manually, or use GitHub's web interface to set up the custom domain (under Settings / Custom Domain). If you use the web interface, GitHub will create the CNAME file for you and save it to the root of your \"pages\" branch. So that the file does not get removed the next time you deploy, you need to copy the file to your docs_dir . With the file properly included in your docs_dir , MkDocs will include the file in your built site and push it to your \"pages\" branch each time you run the gh-deploy command. If you are having problems getting a custom domain to work, see GitHub's documentation on Troubleshooting custom domains .","title":"\u81ea\u5b9a\u4e49\u7684\u57df"},{"location":"user-guide/deploying-your-docs/#_3","text":"Read the Docs offers free documentation hosting. You can import your docs using any major version control system, including Mercurial, Git, Subversion, and Bazaar. Read the Docs supports MkDocs out-of-the-box. Follow the instructions on their site to arrange the files in your repository properly, create an account and point it at your publicly hosted repository. If properly configured, your documentation will update each time you push commits to your public repository. Note To benefit from all of the features offered by Read the Docs, you will need to use the Read the Docs theme which ships with MkDocs. The various themes which may be referenced in Read the Docs' documentation are Sphinx specific themes and will not work with MkDocs.","title":"\u9605\u8bfb\u6587\u6863"},{"location":"user-guide/deploying-your-docs/#_4","text":"\u4efb\u4f55\u53ef\u4ee5\u63d0\u4f9b\u9759\u6001\u6587\u4ef6\u7684\u6258\u7ba1\u63d0\u4f9b\u5546\u90fd\u53ef\u4ee5\u7528\u6765\u63d0\u4f9bMkDocs\u751f\u6210\u7684\u6587\u6863\u3002 \u867d\u7136\u4e0d\u53ef\u80fd\u8bb0\u5f55\u5982\u4f55\u5c06\u6587\u6863\u4e0a\u4f20\u5230\u6bcf\u4e2a\u6258\u7ba1\u63d0\u4f9b\u5546\uff0c\u4f46\u4ee5\u4e0b\u6307\u5357\u5e94\u8be5\u80fd\u63d0\u4f9b\u4e00\u4e9b\u4e00\u822c\u6027\u7684\u5e2e\u52a9\u3002 When you build your site (using the mkdocs build command), all of the files are written to the directory assigned to the site_dir configuration option (defaults to \"site\" ) in your mkdocs.yaml config file. Generally, you will simply need to copy the contents of that directory to the root directory of your hosting provider's server. Depending on your hosting provider's setup, you may need to use a graphical or command line ftp , ssh or scp client to transfer the files. For example, a typical set of commands from the command line might look something like this: mkdocs build scp -r ./site user@host:/path/to/server/root Of course, you will need to replace user with the username you have with your hosting provider and host with the appropriate domain name. Additionally, you will need to adjust the /path/to/server/root to match the configuration of your hosts' file system. See your host's documentation for specifics. You will likely want to search their documentation for \"ftp\" or \"uploading site\".","title":"\u5176\u4ed6\u4f9b\u5e94\u5546"},{"location":"user-guide/deploying-your-docs/#_5","text":"Rather than hosting your documentation on a server, you may instead distribute the files directly, which can then be viewed in a browser using the file:// scheme. Note that, due to the security settings of all modern browsers, some things will not work the same and some features may not work at all. In fact, a few settings will need to be customized in very specific ways. site_url : The site_url must be set to an empty string, which instructs MkDocs to build your site so that it will work with the file:// scheme. site_url: \"\" use_directory_urls : Set use_directory_urls to false . Otherwise, internal links between pages will not work properly. use_directory_urls: false search : You will need to either disable the search plugin, or use a third-party search plugin which is specifically designed to work with the file:// scheme. To disable all plugins, set the plugins setting to an empty list. plugins: [] If you have other plugins enabled, simply ensure that search is not included in the list. When writing your documentation, it is imperative that all internal links use relative URLs as documented . Remember, each reader of your documentation will be using a different device and the files will likely be in a different location on that device. If you expect your documentation to be viewed off-line, you may also need to be careful about which themes you choose. Many themes make use of CDNs for various support files, which require a live Internet connection. You will need to choose a theme which includes all support files directly in the theme. When you build your site (using the mkdocs build command), all of the files are written to the directory assigned to the site_dir configuration option (defaults to \"site\" ) in your mkdocs.yaml config file. Generally, you will simply need to copy the contents of that directory and distribute it to your readers. Alternatively, you may choose to use a third party tool to convert the HTML files to some other documentation format.","title":"\u672c\u5730\u6587\u4ef6"},{"location":"user-guide/deploying-your-docs/#404-pages","text":"\u5f53MkDocs\u6784\u5efa\u6587\u6863\u65f6\uff0c\u5b83\u5c06\u5728 build\u76ee\u5f55 \u4e2d\u5305\u542b\u4e00\u4e2a404.html\u6587\u4ef6\u3002 \u8be5\u6587\u4ef6\u5c06\u5728\u90e8\u7f72\u5230 GitHub \u65f6\u81ea\u52a8\u4f7f\u7528\uff0c\u4f46\u4ec5\u9650\u4e8e\u81ea\u5b9a\u4e49\u57df\u3002 \u5176\u4ed6web\u670d\u52a1\u5668\u53ef\u80fd\u4f1a\u914d\u7f6e\u4f7f\u7528\u5b83\uff0c\u4f46\u8be5\u529f\u80fd\u5e76\u4e0d\u603b\u662f\u53ef\u7528\u7684\u3002 \u6709\u5173\u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605\u6240\u9009\u670d\u52a1\u5668\u7684\u6587\u6863\u3002","title":"404 Pages"},{"location":"user-guide/installation/","text":"MkDocs \u5b89\u88c5 \u00b6 \u8be6\u7ec6\u6307\u5357\u3002 \u8981\u6c42 \u00b6 MkDocs requires a recent version of Python and the Python package manager, pip , to be installed on your system. You can check if you already have these installed from the command line: $ python --version Python 3.8.2 $ pip --version pip 20.0.2 from /usr/local/lib/python3.8/site-packages/pip (python 3.8) If you already have those packages installed, you may skip down to Installing MkDocs . \u5b89\u88c5 Python \u00b6 Install Python using your package manager of choice, or by downloading an installer appropriate for your system from python.org and running it. Note If you are installing Python on Windows, be sure to check the box to have Python added to your PATH if the installer offers such an option (it's normally off by default). \u5b89\u88c5 pip \u00b6 If you're using a recent version of Python, the Python package manager, pip , is most likely installed by default. However, you may need to upgrade pip to the lasted version: pip install --upgrade pip If you need to install pip for the first time, download get-pip.py . Then run the following command to install it: python get-pip.py \u5b89\u88c5 MkDocs \u00b6 Install the mkdocs package using pip: pip install mkdocs You should now have the mkdocs command installed on your system. Run mkdocs --version to check that everything worked okay. $ mkdocs --version mkdocs, version 1.2.0 from /usr/local/lib/python3.8/site-packages/mkdocs (Python 3.8) Note If you would like manpages installed for MkDocs, the click-man tool can generate and install them for you. Simply run the following two commands: pip install click-man click-man --target path/to/man/pages mkdocs See the click-man documentation for an explanation of why manpages are not automatically generated and installed by pip. Note If you are using Windows, some of the above commands may not work out-of-the-box. A quick solution may be to preface every Python command with python -m like this: python -m pip install mkdocs python -m mkdocs For a more permanent solution, you may need to edit your PATH environment variable to include the Scripts directory of your Python installation. Recent versions of Python include a script to do this for you. Navigate to your Python installation directory (for example C:\\Python38\\ ), open the Tools , then Scripts folder, and run the win_add2path.py file by double clicking on it. Alternatively, you can download the script and run it ( python win_add2path.py ).","title":"\u5b89\u88c5"},{"location":"user-guide/installation/#mkdocs","text":"\u8be6\u7ec6\u6307\u5357\u3002","title":"MkDocs \u5b89\u88c5"},{"location":"user-guide/installation/#_1","text":"MkDocs requires a recent version of Python and the Python package manager, pip , to be installed on your system. You can check if you already have these installed from the command line: $ python --version Python 3.8.2 $ pip --version pip 20.0.2 from /usr/local/lib/python3.8/site-packages/pip (python 3.8) If you already have those packages installed, you may skip down to Installing MkDocs .","title":"\u8981\u6c42"},{"location":"user-guide/installation/#python","text":"Install Python using your package manager of choice, or by downloading an installer appropriate for your system from python.org and running it. Note If you are installing Python on Windows, be sure to check the box to have Python added to your PATH if the installer offers such an option (it's normally off by default).","title":"\u5b89\u88c5 Python"},{"location":"user-guide/installation/#pip","text":"If you're using a recent version of Python, the Python package manager, pip , is most likely installed by default. However, you may need to upgrade pip to the lasted version: pip install --upgrade pip If you need to install pip for the first time, download get-pip.py . Then run the following command to install it: python get-pip.py","title":"\u5b89\u88c5 pip"},{"location":"user-guide/installation/#mkdocs_1","text":"Install the mkdocs package using pip: pip install mkdocs You should now have the mkdocs command installed on your system. Run mkdocs --version to check that everything worked okay. $ mkdocs --version mkdocs, version 1.2.0 from /usr/local/lib/python3.8/site-packages/mkdocs (Python 3.8) Note If you would like manpages installed for MkDocs, the click-man tool can generate and install them for you. Simply run the following two commands: pip install click-man click-man --target path/to/man/pages mkdocs See the click-man documentation for an explanation of why manpages are not automatically generated and installed by pip. Note If you are using Windows, some of the above commands may not work out-of-the-box. A quick solution may be to preface every Python command with python -m like this: python -m pip install mkdocs python -m mkdocs For a more permanent solution, you may need to edit your PATH environment variable to include the Scripts directory of your Python installation. Recent versions of Python include a script to do this for you. Navigate to your Python installation directory (for example C:\\Python38\\ ), open the Tools , then Scripts folder, and run the win_add2path.py file by double clicking on it. Alternatively, you can download the script and run it ( python win_add2path.py ).","title":"\u5b89\u88c5 MkDocs"},{"location":"user-guide/localizing-your-theme/","text":"\u672c\u5730\u4e3b\u9898 \u00b6 \u7528\u60a8\u9996\u9009\u7684\u8bed\u8a00\u663e\u793a\u4e3b\u9898\u3002 Note Theme localization only translates the text elements of the theme itself (such as \"next\" and \"previous\" links), not the actual content of your documentation. If you wish to create multilingual documentation, you need to combine theme localization as described here with a third-party internationalization/localization plugin. Installation \u00b6 For theme localization to work, you must use a theme which supports it and enable i18n (internationalization) support by installing mkdocs[i18n] : pip install mkdocs[i18n] Supported locales \u00b6 In most cases a locale is designated by the ISO-639-1 (2-letter) abbreviation for your language. However, a locale may also include a territory (or region or county) code as well. The language and territory must be separated by an underscore. For example, some possible locales for English might include en , en_AU , en_GB , and en_US . For a list of locales supported by the theme you are using, see that theme's documentation. mkdocs readthedocs Warning If you configure a language locale which is not yet supported by the theme that you are using, MkDocs will fall back to the theme's default locale. Usage \u00b6 To specify the locale that MkDocs should use, set the locale parameter of the theme configuration option to the appropriate code. For example, to build the mkdocs theme in French you would use the following in your mkdocs.yml configuration file: theme: name: mkdocs locale: fr Contributing theme translations \u00b6 If a theme has not yet been translated into your language, feel free to contribute a translation using the Translation Guide .","title":"\u7ffb\u8bd1\u4e3b\u9898"},{"location":"user-guide/localizing-your-theme/#_1","text":"\u7528\u60a8\u9996\u9009\u7684\u8bed\u8a00\u663e\u793a\u4e3b\u9898\u3002 Note Theme localization only translates the text elements of the theme itself (such as \"next\" and \"previous\" links), not the actual content of your documentation. If you wish to create multilingual documentation, you need to combine theme localization as described here with a third-party internationalization/localization plugin.","title":"\u672c\u5730\u4e3b\u9898"},{"location":"user-guide/localizing-your-theme/#installation","text":"For theme localization to work, you must use a theme which supports it and enable i18n (internationalization) support by installing mkdocs[i18n] : pip install mkdocs[i18n]","title":"Installation"},{"location":"user-guide/localizing-your-theme/#supported-locales","text":"In most cases a locale is designated by the ISO-639-1 (2-letter) abbreviation for your language. However, a locale may also include a territory (or region or county) code as well. The language and territory must be separated by an underscore. For example, some possible locales for English might include en , en_AU , en_GB , and en_US . For a list of locales supported by the theme you are using, see that theme's documentation. mkdocs readthedocs Warning If you configure a language locale which is not yet supported by the theme that you are using, MkDocs will fall back to the theme's default locale.","title":"Supported locales"},{"location":"user-guide/localizing-your-theme/#usage","text":"To specify the locale that MkDocs should use, set the locale parameter of the theme configuration option to the appropriate code. For example, to build the mkdocs theme in French you would use the following in your mkdocs.yml configuration file: theme: name: mkdocs locale: fr","title":"Usage"},{"location":"user-guide/localizing-your-theme/#contributing-theme-translations","text":"If a theme has not yet been translated into your language, feel free to contribute a translation using the Translation Guide .","title":"Contributing theme translations"},{"location":"user-guide/themes/","text":"\u7b2c\u4e09\u65b9\u4e3b\u9898 \u00b6 \u6b64\u9875\u9762\u5305\u542b\u4e00\u4e9b\u5916\u90e8 MkDocs \u4e3b\u9898\u7684\u5217\u8868\u3002\u6240\u6709\u8fd9\u4e9b\u4ee5\u53ca\u66f4\u591a\u5185\u5bb9\u90fd\u53ef\u4ee5\u901a\u8fc7 pip \u5b89\u88c5\u3002 \u60a8\u53ef\u4ee5\u5728 Wheelodex \u4e0a\u627e\u5230\u5176\u4ed6\u4e3b\u9898 Cinder \u00b6 Cluster \u00b6 No screenshot available docSkimmer \u00b6 Material for MkDocs \u00b6 ReadTheDocs-Dropdown \u00b6 Windmill \u00b6 Windmill Dark \u00b6 CustomMill \u00b6 Bootstrap \u00b6 Bootswatch \u00b6 Bootstrap386 \u00b6 PSinder \u00b6 Bootstrap4 \u00b6 GitBook Theme \u00b6 Ivory Theme \u00b6 Lantana \u00b6","title":"\u7b2c\u4e09\u65b9\u4e3b\u9898"},{"location":"user-guide/themes/#_1","text":"\u6b64\u9875\u9762\u5305\u542b\u4e00\u4e9b\u5916\u90e8 MkDocs \u4e3b\u9898\u7684\u5217\u8868\u3002\u6240\u6709\u8fd9\u4e9b\u4ee5\u53ca\u66f4\u591a\u5185\u5bb9\u90fd\u53ef\u4ee5\u901a\u8fc7 pip \u5b89\u88c5\u3002 \u60a8\u53ef\u4ee5\u5728 Wheelodex \u4e0a\u627e\u5230\u5176\u4ed6\u4e3b\u9898","title":"\u7b2c\u4e09\u65b9\u4e3b\u9898"},{"location":"user-guide/themes/#cinder","text":"","title":"Cinder"},{"location":"user-guide/themes/#cluster","text":"No screenshot available","title":"Cluster"},{"location":"user-guide/themes/#docskimmer","text":"","title":"docSkimmer"},{"location":"user-guide/themes/#material-for-mkdocs","text":"","title":"Material for MkDocs"},{"location":"user-guide/themes/#readthedocs-dropdown","text":"","title":"ReadTheDocs-Dropdown"},{"location":"user-guide/themes/#windmill","text":"","title":"Windmill"},{"location":"user-guide/themes/#windmill-dark","text":"","title":"Windmill Dark"},{"location":"user-guide/themes/#custommill","text":"","title":"CustomMill"},{"location":"user-guide/themes/#bootstrap","text":"","title":"Bootstrap"},{"location":"user-guide/themes/#bootswatch","text":"","title":"Bootswatch"},{"location":"user-guide/themes/#bootstrap386","text":"","title":"Bootstrap386"},{"location":"user-guide/themes/#psinder","text":"","title":"PSinder"},{"location":"user-guide/themes/#bootstrap4","text":"","title":"Bootstrap4"},{"location":"user-guide/themes/#gitbook-theme","text":"","title":"GitBook Theme"},{"location":"user-guide/themes/#ivory-theme","text":"","title":"Ivory Theme"},{"location":"user-guide/themes/#lantana","text":"","title":"Lantana"},{"location":"user-guide/writing-your-docs/","text":"\u64b0\u5199\u6587\u6863 \u00b6 \u5982\u4f55\u5e03\u5c40\u548c\u7f16\u5199 Markdown \u6e90\u6587\u4ef6\u3002 \u6587\u4ef6\u5e03\u5c40 \u00b6 \u4f60\u7684\u6587\u6863\u6e90\u5e94\u8be5\u88ab\u5199\u6210\u5e38\u89c4 Markdown \u6587\u4ef6(\u53c2\u89c1\u4e0b\u9762\u7684 \u7528 Markdown \u5199\u4f5c )\uff0c\u5e76\u653e\u5728 \u6587\u6863\u76ee\u5f55 \u4e2d\u3002 \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u8fd9\u4e2a\u76ee\u5f55\u5c06\u88ab\u547d\u540d\u4e3a docs \uff0c\u5e76\u5c06\u4e0e mkdocs.yml \u914d\u7f6e\u6587\u4ef6\u4e00\u8d77\u5b58\u5728\u4e8e\u9879\u76ee\u7684\u9876\u5c42\u3002 \u4f60\u53ef\u4ee5\u521b\u5efa\u7684\u6700\u7b80\u5355\u7684\u9879\u76ee\u662f\u8fd9\u6837\u7684: mkdocs.yml docs/ index.md \u6309\u7167\u60ef\u4f8b\uff0c\u60a8\u7684\u9879\u76ee\u4e3b\u9875\u5e94\u8be5\u547d\u540d\u4e3a index.md (\u53c2\u89c1\u4e0b\u9762\u7684 \u7d22\u5f15\u9875 \u4e86\u89e3\u8be6\u7ec6\u4fe1\u606f)\u3002 \u4ee5\u4e0b\u4efb\u4f55\u6587\u4ef6\u6269\u5c55\u540d\u90fd\u53ef\u4ee5\u7528\u4e8e Markdown \u6e90\u6587\u4ef6: markdown , mdown , mkdn , mkd , md \u3002 \u6587\u6863\u76ee\u5f55\u4e2d\u5305\u542b\u7684\u6240\u6709 Markdown \u6587\u4ef6\u5c06\u5728\u6784\u5efa\u7684\u7ad9\u70b9\u4e2d\u5448\u73b0\uff0c\u65e0\u8bba\u4efb\u4f55\u8bbe\u7f6e\u3002 Note \u540d\u79f0\u4ee5\u70b9\u5f00\u5934\u7684\u6587\u4ef6\u548c\u76ee\u5f55(\u4f8b\u5982: .foo.md \u6216 .bar/baz.md )\u4f1a\u88ab MkDocs \u5ffd\u7565\uff0c\u8fd9\u4e0e\u5927\u591a\u6570 web \u670d\u52a1\u5668\u7684\u884c\u4e3a\u76f8\u5339\u914d\u3002 \u6ca1\u6709\u8986\u76d6\u6b64\u884c\u4e3a\u7684\u9009\u9879\u3002 \u4f60\u4e5f\u53ef\u4ee5\u521b\u5efa\u591a\u9875\u6587\u6863\uff0c\u901a\u8fc7\u521b\u5efa\u51e0\u4e2a Markdown \u6587\u4ef6: mkdocs.yml docs/ index.md about.md license.md \u60a8\u4f7f\u7528\u7684\u6587\u4ef6\u5e03\u5c40\u51b3\u5b9a\u4e86\u6240\u751f\u6210\u9875\u9762\u6240\u4f7f\u7528\u7684 URLs\u3002 \u6839\u636e\u4e0a\u9762\u7684\u5e03\u5c40\uff0c\u5c06\u4e3a\u4ee5\u4e0b URLs \u751f\u6210\u9875\u9762: / /about/ /license/ \u5982\u679c\u66f4\u9002\u5408\u4f60\u7684\u6587\u6863\u5e03\u5c40\uff0c\u4f60\u4e5f\u53ef\u4ee5\u5c06 Markdown \u6587\u4ef6\u5305\u542b\u5728\u5d4c\u5957\u76ee\u5f55\u4e2d\u3002 docs/ index.md user-guide/getting-started.md user-guide/configuration-options.md license.md \u5d4c\u5957\u76ee\u5f55\u4e2d\u7684\u6e90\u6587\u4ef6\u5c06\u5bfc\u81f4\u751f\u6210\u5e26\u6709\u5d4c\u5957 URLs \u7684\u9875\u9762\uff0c\u5982\u4e0b\u6240\u793a: / /user-guide/getting-started/ /user-guide/configuration-options/ /license/ \u5728 \u6587\u6863\u76ee\u5f55 \u4e2d\uff0c\u4efb\u4f55\u6ca1\u6709\u88ab\u6807\u8bc6\u4e3a Markdown \u6587\u4ef6(\u901a\u8fc7\u5176\u6587\u4ef6\u6269\u5c55\u540d)\u7684\u6587\u4ef6\u90fd\u4f1a\u88ab MkDocs \u590d\u5236\u5230\u6784\u5efa\u7684\u7ad9\u70b9\u4e2d\u3002 \u8be6\u60c5\u89c1\u4e0b\u9762 \u5982\u4f55\u94fe\u63a5\u5230\u56fe\u7247\u548c\u5a92\u4f53 \u3002 \u7d22\u5f15\u9875 \u00b6 \u5f53\u4e00\u4e2a\u76ee\u5f55\u88ab\u8bf7\u6c42\u65f6\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u5927\u591a\u6570 web \u670d\u52a1\u5668\u5c06\u8fd4\u56de\u4e00\u4e2a\u5305\u542b\u5728\u8be5\u76ee\u5f55\u4e2d\u7684\u7d22\u5f15\u6587\u4ef6(\u901a\u5e38\u547d\u540d\u4e3a index.html )\uff0c\u5982\u679c\u76ee\u5f55\u5b58\u5728\u7684\u8bdd\u3002 \u56e0\u6b64\uff0c\u4e0a\u9762\u6240\u6709\u793a\u4f8b\u4e2d\u7684\u4e3b\u9875\u90fd\u88ab\u547d\u540d\u4e3a index.md \uff0c MkDocs \u5728\u6784\u5efa\u7f51\u7ad9\u65f6\u5c06\u5176\u5448\u73b0\u4e3a index.html \u3002 \u8bb8\u591a\u5b58\u50a8\u5e93\u6258\u7ba1\u7ad9\u70b9\u901a\u8fc7\u5728\u6d4f\u89c8\u76ee\u5f55\u5185\u5bb9\u65f6\u663e\u793a README \u6587\u4ef6\u7684\u5185\u5bb9\uff0c\u4e3a README \u6587\u4ef6\u63d0\u4f9b\u4e86\u7279\u6b8a\u5904\u7406\u3002 \u56e0\u6b64\uff0cMkDocs \u5c06\u5141\u8bb8\u60a8\u5c06\u7d22\u5f15\u9875\u547d\u540d\u4e3a README.md \u800c\u4e0d\u662f index.md \u3002 \u8fd9\u6837\uff0c\u5f53\u7528\u6237\u6d4f\u89c8\u60a8\u7684\u6e90\u4ee3\u7801\u65f6\uff0c\u5b58\u50a8\u5e93\u4e3b\u673a\u53ef\u4ee5\u663e\u793a\u8be5\u76ee\u5f55\u7684\u7d22\u5f15\u9875\uff0c\u56e0\u4e3a\u5b83\u662f\u4e00\u4e2a README \u6587\u4ef6\u3002 \u7136\u800c\uff0c\u5f53 MkDocs \u5448\u73b0\u4f60\u7684\u7f51\u7ad9\u65f6\uff0c\u6587\u4ef6\u5c06\u88ab\u91cd\u547d\u540d\u4e3a index.html \uff0c\u4ee5\u4fbf\u670d\u52a1\u5668\u5c06\u5176\u4f5c\u4e3a\u4e00\u4e2a\u9002\u5f53\u7684\u7d22\u5f15\u6587\u4ef6\u3002 \u5982\u679c\u5728\u540c\u4e00\u4e2a\u76ee\u5f55\u4e2d\u53d1\u73b0 index.md \u6587\u4ef6\u548c README.md \u6587\u4ef6\uff0c\u5219\u4f7f\u7528 index.md \u6587\u4ef6\uff0c\u800c README.md \u6587\u4ef6\u88ab\u5ffd\u7565\u3002 \u914d\u7f6e\u9875\u9762\u548c\u5bfc\u822a \u00b6 The nav configuration setting in your mkdocs.yml file defines which pages are included in the global site navigation menu as well as the structure of that menu. If not provided, the navigation will be automatically created by discovering all the Markdown files in the documentation directory . An automatically created navigation configuration will always be sorted alphanumerically by file name (except that index files will always be listed first within a sub-section). You will need to manually define your navigation configuration if you would like your navigation menu sorted differently. A minimal navigation configuration could look like this: nav: - \"index.md\" - \"about.md\" All paths in the navigation configuration must be relative to the docs_dir configuration option. If that option is set to the default value, docs , the source files for the above configuration would be located at docs/index.md and docs/about.md . The above example will result in two navigation items being created at the top level and with their titles inferred from the contents of the Markdown file or, if no title is defined within the file, of the file name. To override the title in the nav setting add a title right before the filename. nav: - Home: \"index.md\" - About: \"about.md\" Note that if a title is defined for a page in the navigation, that title will be used throughout the site for that page and will override any title defined within the page itself. Navigation sub-sections can be created by listing related pages together under a section title. For example: nav: - Home: \"index.md\" - \"User Guide\": - \"Writing your docs\": \"writing-your-docs.md\" - \"Styling your docs\": \"styling-your-docs.md\" - About: - \"License\": \"license.md\" - \"Release Notes\": \"release-notes.md\" With the above configuration we have three top level items: \"Home\", \"User Guide\" and \"About.\" \"Home\" is a link to the homepage for the site. Under the \"User Guide\" section two pages are listed: \"Writing your docs\" and \"Styling your docs.\" Under the \"About\" section two more pages are listed: \"License\" and \"Release Notes.\" Note that a section cannot have a page assigned to it. Sections are only containers for child pages and sub-sections. You may nest sections as deeply as you like. However, be careful that you don't make it too difficult for your users to navigate through the site navigation by over-complicating the nesting. While sections may mirror your directory structure, they do not have to. Any pages not listed in your navigation configuration will still be rendered and included with the built site, however, they will not be linked from the global navigation and will not be included in the previous and next links. Such pages will be \"hidden\" unless linked to directly. \u7528 Markdown \u5199\u4f5c \u00b6 MkDocs \u9875\u9762\u5fc5\u987b\u4f7f\u7528 Markdown \u7f16\u5199\uff0c\u8fd9\u662f\u4e00\u79cd\u8f7b\u91cf\u7ea7\u6807\u8bb0\u8bed\u8a00\uff0c\u53ef\u751f\u6210\u6613\u4e8e\u9605\u8bfb\u3001\u6613\u4e8e\u7f16\u5199\u7684\u7eaf\u6587\u672c\u6587\u6863\uff0c\u53ef\u4ee5\u4ee5\u53ef\u9884\u6d4b\u7684\u65b9\u5f0f\u5c06\u5176\u8f6c\u6362\u4e3a\u6709\u6548\u7684 HTML \u6587\u6863\u3002 MkDocs \u4f7f\u7528 Python-Markdown \u5e93\u5c06 Markdown \u6587\u6863\u5448\u73b0\u4e3a HTML\u3002 Python-Markdown \u51e0\u4e4e\u5b8c\u5168\u7b26\u5408 \u53c2\u8003\u5b9e\u73b0 \uff0c\u5c3d\u7ba1\u6709\u4e00\u4e9b\u975e\u5e38\u5c0f\u7684 \u5dee\u5f02 \u3002 \u9664\u4e86\u5728\u6240\u6709 Markdown \u5b9e\u73b0\u4e2d\u901a\u7528\u7684\u57fa\u672c Markdown \u8bed\u6cd5 \u4e4b\u5916\uff0cMkDocs \u8fd8\u652f\u6301\u4f7f\u7528 Python-Markdown \u6269\u5c55 \u6269\u5c55 Markdown \u8bed\u6cd5\u3002 \u5173\u4e8e\u5982\u4f55\u542f\u7528\u6269\u5c55\uff0c\u8bf7\u53c2\u9605 MkDocs \u7684 markdown_extensions \u914d\u7f6e\u8bbe\u7f6e\u3002 MkDocs \u9ed8\u8ba4\u5305\u542b\u4e00\u4e9b\u6269\u5c55\uff0c\u5982\u4e0b\u6240\u793a\u3002 \u5185\u90e8\u94fe\u63a5 \u00b6 MkDocs allows you to interlink your documentation by using regular Markdown links . However, there are a few additional benefits to formatting those links specifically for MkDocs as outlined below. \u94fe\u63a5\u5230\u9875\u9762 \u00b6 When linking between pages in the documentation you can simply use the regular Markdown linking syntax, including the relative path to the Markdown document you wish to link to. Please see the [project license](license.md) for further details. When the MkDocs build runs, these Markdown links will automatically be transformed into an HTML hyperlink to the appropriate HTML page. Warning \u5b98\u65b9\u4e0d\u652f\u6301\u4f7f\u7528\u5e26\u6709\u94fe\u63a5\u7684\u7edd\u5bf9\u8def\u5f84\u3002\u76f8\u5bf9\u8def\u5f84\u7531 MkDocs \u8c03\u6574\uff0c\u4ee5\u786e\u4fdd\u5b83\u4eec\u59cb\u7ec8\u76f8\u5bf9\u4e8e\u9875\u9762\u3002 \u7edd\u5bf9\u8def\u5f84\u6839\u672c\u4e0d\u9700\u8981\u4fee\u6539\u3002 \u8fd9\u610f\u5473\u7740\u4f7f\u7528\u7edd\u5bf9\u8def\u5f84\u7684\u94fe\u63a5\u53ef\u80fd\u5728\u672c\u5730\u73af\u5883\u4e2d\u6b63\u5e38\u5de5\u4f5c\uff0c\u4f46\u4e00\u65e6\u5c06\u5b83\u4eec\u90e8\u7f72\u5230\u751f\u4ea7\u670d\u52a1\u5668\u4e0a\uff0c\u5b83\u4eec\u53ef\u80fd\u4f1a\u4e2d\u65ad\u3002 \u5982\u679c\u76ee\u6807\u6587\u6863\u6587\u4ef6\u5728\u53e6\u4e00\u4e2a\u76ee\u5f55\u4e2d\uff0c\u5219\u9700\u8981\u786e\u4fdd\u5728\u94fe\u63a5\u4e2d\u5305\u542b\u4efb\u4f55\u76f8\u5bf9\u76ee\u5f55\u8def\u5f84\u3002 Please see the [project license](../about/license.md) for further details. MkDocs \u4f7f\u7528 toc \u6269\u5c55\u4e3a Markdown \u6587\u6863\u4e2d\u7684\u6bcf\u4e2a\u6807\u9898\u751f\u6210 ID\u3002 \u60a8\u53ef\u4ee5\u4f7f\u7528\u8be5 ID \u901a\u8fc7\u4f7f\u7528\u951a\u94fe\u63a5\u94fe\u63a5\u5230\u76ee\u6807\u6587\u6863\u4e2d\u7684\u67d0\u4e2a\u90e8\u5206\u3002 \u751f\u6210\u7684 HTML \u5c06\u6b63\u786e\u5730\u8f6c\u6362\u94fe\u63a5\u7684\u8def\u5f84\u90e8\u5206\uff0c\u800c\u4fdd\u6301\u951a\u7684\u90e8\u5206\u4e0d\u53d8\u3002 Please see the [project license](about.md#license) for further details. Note that IDs are created from the text of a header. All text is converted to lowercase and any disallowed characters, including white-space, are converted to dashes. Consecutive dashes are then reduced to a single dash. There are a few configuration settings provided by the toc extension which you can set in your mkdocs.yml configuration file to alter the default behavior: permalink Generate permanent links at the end of each header. Default: False . When set to True the paragraph symbol (\u00b6 or &para; ) is used as the link text. When set to a string, the provided string is used as the link text. For example, to use the hash symbol ( # ) instead, do: markdown_extensions: - toc: permalink: \"#\" baselevel Base level for headers. Default: 1 . This setting allows the header levels to be automatically adjusted to fit within the hierarchy of your HTML templates. For example, if the Markdown text for a page should not contain any headers higher than level 2 ( <h2> ), do: markdown_extensions: - toc: baselevel: 2 Then any headers in your document would be increased by 1. For example, the header # Header would be rendered as a level 2 header ( <h2> ) in the HTML output. separator Word separator. Default: - . Character which replaces white-space in generated IDs. If you prefer underscores, then do: markdown_extensions: - toc: separator: \"_\" Note that if you would like to define multiple of the above settings, you must do so under a single toc entry in the markdown_extensions configuration option. markdown_extensions: - toc: permalink: \"#\" baselevel: 2 separator: \"_\" \u94fe\u63a5\u5230\u56fe\u50cf\u548c\u5a92\u4f53 \u00b6 As well as the Markdown source files, you can also include other file types in your documentation, which will be copied across when generating your documentation site. These might include images and other media. For example, if your project documentation needed to include a [GitHub pages CNAME file] and a PNG formatted screenshot image then your file layout might look as follows: mkdocs.yml docs/ CNAME index.md about.md license.md img/ screenshot.png To include images in your documentation source files, simply use any of the regular Markdown image syntaxes: Cupcake indexer is a snazzy new project for indexing small cakes. ![Screenshot](img/screenshot.png) *Above: Cupcake indexer in progress* Your image will now be embedded when you build the documentation, and should also be previewed if you're working on the documentation with a Markdown editor. \u4ece RAW HTML \u94fe\u63a5 \u00b6 Markdown \u5141\u8bb8\u6587\u6863\u4f5c\u8005\u5728 Markdown \u8bed\u6cd5\u4e0d\u80fd\u6ee1\u8db3\u4f5c\u8005\u9700\u6c42\u65f6\u4f7f\u7528\u539f\u59cb HTML\u3002 MkDocs \u5e76\u6ca1\u6709\u5728\u8fd9\u65b9\u9762\u9650\u5236 Markdown\u3002 \u7136\u800c\uff0c\u7531\u4e8e Markdown \u89e3\u6790\u5668\u5ffd\u7565\u4e86\u6240\u6709\u539f\u59cb HTML, MkDocs \u65e0\u6cd5\u9a8c\u8bc1\u6216\u8f6c\u6362\u539f\u59cb HTML \u4e2d\u5305\u542b\u7684\u94fe\u63a5\u3002 \u5728\u539f\u59cb HTML \u4e2d\u5305\u542b\u5185\u90e8\u94fe\u63a5\u65f6\uff0c\u9700\u8981\u4e3a\u5448\u73b0\u7684\u6587\u6863\u624b\u52a8\u8bbe\u7f6e\u9002\u5f53\u7684\u94fe\u63a5\u683c\u5f0f\u3002 \u5143\u6570\u636e \u00b6 MkDocs \u540c\u65f6\u652f\u6301 YAML \u548c MultiMarkdown \u98ce\u683c\u7684\u5143\u6570\u636e(\u901a\u5e38\u79f0\u4e3a front-matter)\u3002 \u5143\u6570\u636e\u7531 Markdown \u6587\u6863\u5f00\u5934\u5b9a\u4e49\u7684\u4e00\u7cfb\u5217\u5173\u952e\u5b57\u548c\u503c\u7ec4\u6210\uff0c\u8fd9\u4e9b\u5173\u952e\u5b57\u548c\u503c\u4ece Markdown \u6587\u6863\u4e2d\u5265\u79bb \u6587\u6863\u5728\u88ab Python-Markdown \u5904\u7406\u4e4b\u524d\u3002 \u952e/\u503c\u5bf9\u7531 MkDocs \u4f20\u9012\u7ed9\u9875\u9762\u6a21\u677f\u3002 \u56e0\u6b64\uff0c\u5982\u679c\u4e3b\u9898\u5305\u542b\u652f\u6301\uff0c\u5219\u4efb\u4f55\u952e\u7684\u503c\u90fd\u53ef\u4ee5\u663e\u793a\u5728\u9875\u9762\u4e0a\u6216\u7528\u4e8e\u63a7\u5236\u9875\u9762\u5448\u73b0\u3002 \u5982\u679c\u6709\u7684\u8bdd\uff0c\u8bf7\u53c2\u9605\u60a8\u7684\u4e3b\u9898\u6587\u6863\u4ee5\u83b7\u5f97\u6709\u5173\u53ef\u80fd\u652f\u6301\u54ea\u4e9b\u952e\u7684\u4fe1\u606f\u3002 \u9664\u4e86\u5728\u6a21\u677f\u4e2d\u663e\u793a\u4fe1\u606f\u5916\uff0cMkDocs \u8fd8\u652f\u6301\u4e00\u4e9b\u9884\u5b9a\u4e49\u7684\u5143\u6570\u636e\u952e\uff0c\u8fd9\u4e9b\u5143\u6570\u636e\u952e\u53ef\u4ee5\u6539\u53d8 MkDocs \u5bf9\u4e8e\u7279\u5b9a\u9875\u9762\u7684\u884c\u4e3a\u3002 \u652f\u6301\u4ee5\u4e0b\u6309\u952e: template \u4e0e\u5f53\u524d\u9875\u9762\u4e00\u8d77\u4f7f\u7528\u7684\u6a21\u677f\u3002 \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cMkDocs \u4f7f\u7528\u4e3b\u9898\u7684 main.html \u6a21\u677f\u6765\u6e32\u67d3 Markdown \u9875\u9762\u3002 \u60a8\u53ef\u4ee5\u4f7f\u7528 template \u5143\u6570\u636e\u952e\u4e3a\u7279\u5b9a\u9875\u9762\u5b9a\u4e49\u4e0d\u540c\u7684\u6a21\u677f\u6587\u4ef6\u3002 \u6a21\u677f\u6587\u4ef6\u5fc5\u987b\u5728\u4e3b\u9898\u73af\u5883\u4e2d\u5b9a\u4e49\u7684\u8def\u5f84\u4e0a\u53ef\u7528\u3002 title \u7528\u4e8e\u6587\u6863\u7684\"title\"\u3002 MkDocs \u5c06\u5c1d\u8bd5\u6309\u4ee5\u4e0b\u987a\u5e8f\u786e\u5b9a\u6587\u6863\u7684\u6807\u9898: \u5728\u6587\u6863\u7684 nav \u914d\u7f6e\u8bbe\u7f6e\u4e2d\u5b9a\u4e49\u7684\u6807\u9898\u3002 \u5b9a\u4e49\u5728\u6587\u6863\u7684 title \u5143\u6570\u636e\u952e\u4e2d\u7684\u6807\u9898\u3002 \u6587\u6863\u6b63\u6587\u7b2c\u4e00\u884c\u4e0a\u7684\u4e00\u7ea7 Markdown \u6807\u5934\u3002\u8bf7\u6ce8\u610f\uff0c\u4e0d\u652f\u6301 Setext-style \u62a5\u5934\u3002 \u6587\u4ef6\u7684\u6587\u4ef6\u540d\u3002 \u5728\u627e\u5230\u4e00\u4e2a\u9875\u9762\u7684\u6807\u9898\u540e\uff0cMkDoc \u4e0d\u4f1a\u7ee7\u7eed\u68c0\u67e5\u4e0a\u9762\u5217\u8868\u4e2d\u7684\u4efb\u4f55\u5176\u4ed6\u6765\u6e90\u3002 YAML Style Meta-Data \u00b6 YAML \u98ce\u683c\u7684\u5143\u6570\u636e\u7531 YAML \u952e/\u503c\u5bf9\u7ec4\u6210\uff0c\u5b83\u4eec\u88ab\u5305\u88c5\u5728 YAML \u98ce\u683c\u7684\u5206\u9694\u7b26\u4e2d\uff0c\u7528\u6765\u6807\u8bb0\u5143\u6570\u636e\u7684\u5f00\u59cb\u548c/\u6216\u7ed3\u675f\u3002 \u6587\u6863\u7684\u7b2c\u4e00\u884c\u5fc5\u987b\u662f --- \u3002 \u5143\u6570\u636e\u5728\u5305\u542b\u7ed3\u675f\u5206\u9694\u7b26( --- \u6216 ... )\u7684\u7b2c\u4e00\u884c\u7ed3\u675f\u3002 \u5206\u9694\u7b26\u4e4b\u95f4\u7684\u5185\u5bb9\u88ab\u89e3\u6790\u4e3a YAML \u3002 --- title: My Document summary: A brief description of my document. authors: - Waylan Limberg - Tom Christie date: 2018-07-10 some_url: https://example.com --- This is the first paragraph of the document. YAML \u80fd\u591f\u68c0\u6d4b\u6570\u636e\u7c7b\u578b\u3002 \u56e0\u6b64\uff0c\u5728\u4e0a\u9762\u7684\u4f8b\u5b50\u4e2d\uff0c title , summary \u548c some_url \u7684\u503c\u662f\u5b57\u7b26\u4e32\uff0c authors \u7684\u503c\u662f\u5b57\u7b26\u4e32\u5217\u8868\uff0c date \u7684\u503c\u662f\u4e00\u4e2a datetime.date \u5bf9\u8c61\u3002 \u6ce8\u610f\uff0cYAML \u952e\u662f\u533a\u5206\u5927\u5c0f\u5199\u7684\uff0cMkDocs \u5e0c\u671b\u952e\u90fd\u662f\u5c0f\u5199\u7684\u3002 YAML \u7684\u9876\u5c42\u5fc5\u987b\u662f\u952e/\u503c\u5bf9\u7684\u96c6\u5408\uff0c\u8fd9\u5c06\u5bfc\u81f4\u8fd4\u56de Python dict \u3002 \u5982\u679c\u8fd4\u56de\u4efb\u4f55\u5176\u4ed6\u7c7b\u578b\uff0c\u6216\u8005 YAML \u89e3\u6790\u5668\u9047\u5230\u9519\u8bef\uff0c\u90a3\u4e48 MkDocs \u4e0d\u4f1a\u5c06\u8be5\u8282\u8bc6\u522b\u4e3a\u5143\u6570\u636e\uff0c\u9875\u9762\u7684 meta \u5c5e\u6027\u5c06\u4e3a\u7a7a\uff0c\u5e76\u4e14\u8be5\u8282\u4e0d\u4f1a\u4ece\u6587\u6863\u4e2d\u5220\u9664\u3002 MultiMarkdown Style Meta-Data \u00b6 MultiMarkdown \u98ce\u683c\u7684\u5143\u6570\u636e\u4f7f\u7528 MultiMarkdown \u9879\u76ee\u9996\u6b21\u5f15\u5165\u7684\u683c\u5f0f\u3002 \u6570\u636e\u7531 Markdown \u6587\u6863\u5f00\u5934\u5b9a\u4e49\u7684\u4e00\u7cfb\u5217\u5173\u952e\u5b57\u548c\u503c\u7ec4\u6210\uff0c\u5982\u4e0b\u6240\u793a: Title: My Document Summary: A brief description of my document. Authors: Waylan Limberg Tom Christie Date: January 23, 2018 blank-value: some_url: https://example.com This is the first paragraph of the document. \u5173\u952e\u5b57\u4e0d\u533a\u5206\u5927\u5c0f\u5199\uff0c\u53ef\u4ee5\u7531\u5b57\u6bcd\u3001\u6570\u5b57\u3001 _ \u548c - \u7ec4\u6210\uff0c\u4e14\u5fc5\u987b\u4ee5\u5192\u53f7\u7ed3\u5c3e\u3002 \u8fd9\u4e9b\u503c\u7531\u884c\u4e2d\u5192\u53f7\u540e\u9762\u7684\u4efb\u4f55\u5185\u5bb9\u7ec4\u6210\uff0c\u751a\u81f3\u53ef\u4ee5\u4e3a\u7a7a\u3002 \u5982\u679c\u4e00\u884c\u7f29\u8fdb\u4e86 4 \u4e2a\u6216\u66f4\u591a\u7a7a\u683c\uff0c\u5219\u5047\u5b9a\u8be5\u884c\u662f\u524d\u4e00\u4e2a\u5173\u952e\u5b57\u503c\u7684\u9644\u52a0\u884c\u3002 \u5173\u952e\u5b57\u53ef\u4ee5\u6709\u4efb\u610f\u591a\u7684\u884c\u3002\u6240\u6709\u7684\u884c\u90fd\u8fde\u63a5\u6210\u4e00\u4e2a\u5b57\u7b26\u4e32\u3002 \u7b2c\u4e00\u4e2a\u7a7a\u884c\u7ed3\u675f\u6587\u6863\u7684\u6240\u6709\u5143\u6570\u636e\u3002 \u56e0\u6b64\uff0c\u6587\u6863\u7684\u7b2c\u4e00\u884c\u4e0d\u80fd\u4e3a\u7a7a\u3002 Note \u5bf9\u4e8e MultiMarkdown \u98ce\u683c\u7684\u5143\u6570\u636e\uff0cMkDocs \u4e0d\u652f\u6301 YAML \u98ce\u683c\u7684\u5206\u9694\u7b26( --- \u6216 ... )\u3002 \u4e8b\u5b9e\u4e0a\uff0cMkDocs \u4f9d\u8d56\u4e8e\u5206\u9694\u7b26\u7684\u5b58\u5728\u6216\u4e0d\u5b58\u5728\u6765\u786e\u5b9a\u662f\u5426\u4f7f\u7528 YAML \u98ce\u683c\u7684\u5143\u6570\u636e\u6216 MultiMarkdown \u98ce\u683c\u7684\u5143\u6570\u636e\u3002 \u5982\u679c\u68c0\u6d4b\u5230\u5206\u9694\u7b26\uff0c\u4f46\u5206\u9694\u7b26\u4e4b\u95f4\u7684\u5185\u5bb9\u4e0d\u662f\u6709\u6548\u7684 YAML \u5143\u6570\u636e\uff0cMkDocs \u4e0d\u4f1a\u5c1d\u8bd5\u5c06\u5185\u5bb9\u89e3\u6790\u4e3a MultiMarkdown \u98ce\u683c\u7684\u5143\u6570\u636e\u3002 Tables \u00b6 The tables extension adds a basic table syntax to Markdown which is popular across multiple implementations. The syntax is rather simple and is generally only useful for simple tabular data. A simple table looks like this: | First Header | Second Header | Third Header | | ------------ | ------------- | ------------ | | Content Cell | Content Cell | Content Cell | | Content Cell | Content Cell | Content Cell | If you wish, you can add a leading and tailing pipe to each line of the table: | First Header | Second Header | Third Header | | ------------ | ------------- | ------------ | | Content Cell | Content Cell | Content Cell | | Content Cell | Content Cell | Content Cell | Specify alignment for each column by adding colons to separator lines: | First Header | Second Header | Third Header | | :----------- | :-----------: | -----------: | | Left | Center | Right | | Left | Center | Right | Note that table cells cannot contain any block level elements and cannot contain multiple lines of text. They can, however, include inline Markdown as defined in Markdown's [syntax] rules. Additionally, a table must be surrounded by blank lines. There must be a blank line before and after the table. Fenced code blocks \u00b6 The fenced code blocks extension adds an alternate method of defining code blocks without indentation. The first line should contain 3 or more backtick ( ` ) characters, and the last line should contain the same number of backtick characters ( ` ): ``` Fenced code blocks are like Standard Markdown\u2019s regular code blocks, except that they\u2019re not indented and instead rely on start and end fence lines to delimit the code block. ``` With this approach, the language can optionally be specified on the first line after the backticks which informs any syntax highlighters of the language used: ```python def fn(): pass ``` Note that fenced code blocks can not be indented. Therefore, they cannot be nested inside list items, blockquotes, etc.","title":"\u64b0\u5199\u6587\u6863"},{"location":"user-guide/writing-your-docs/#_1","text":"\u5982\u4f55\u5e03\u5c40\u548c\u7f16\u5199 Markdown \u6e90\u6587\u4ef6\u3002","title":"\u64b0\u5199\u6587\u6863"},{"location":"user-guide/writing-your-docs/#_2","text":"\u4f60\u7684\u6587\u6863\u6e90\u5e94\u8be5\u88ab\u5199\u6210\u5e38\u89c4 Markdown \u6587\u4ef6(\u53c2\u89c1\u4e0b\u9762\u7684 \u7528 Markdown \u5199\u4f5c )\uff0c\u5e76\u653e\u5728 \u6587\u6863\u76ee\u5f55 \u4e2d\u3002 \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u8fd9\u4e2a\u76ee\u5f55\u5c06\u88ab\u547d\u540d\u4e3a docs \uff0c\u5e76\u5c06\u4e0e mkdocs.yml \u914d\u7f6e\u6587\u4ef6\u4e00\u8d77\u5b58\u5728\u4e8e\u9879\u76ee\u7684\u9876\u5c42\u3002 \u4f60\u53ef\u4ee5\u521b\u5efa\u7684\u6700\u7b80\u5355\u7684\u9879\u76ee\u662f\u8fd9\u6837\u7684: mkdocs.yml docs/ index.md \u6309\u7167\u60ef\u4f8b\uff0c\u60a8\u7684\u9879\u76ee\u4e3b\u9875\u5e94\u8be5\u547d\u540d\u4e3a index.md (\u53c2\u89c1\u4e0b\u9762\u7684 \u7d22\u5f15\u9875 \u4e86\u89e3\u8be6\u7ec6\u4fe1\u606f)\u3002 \u4ee5\u4e0b\u4efb\u4f55\u6587\u4ef6\u6269\u5c55\u540d\u90fd\u53ef\u4ee5\u7528\u4e8e Markdown \u6e90\u6587\u4ef6: markdown , mdown , mkdn , mkd , md \u3002 \u6587\u6863\u76ee\u5f55\u4e2d\u5305\u542b\u7684\u6240\u6709 Markdown \u6587\u4ef6\u5c06\u5728\u6784\u5efa\u7684\u7ad9\u70b9\u4e2d\u5448\u73b0\uff0c\u65e0\u8bba\u4efb\u4f55\u8bbe\u7f6e\u3002 Note \u540d\u79f0\u4ee5\u70b9\u5f00\u5934\u7684\u6587\u4ef6\u548c\u76ee\u5f55(\u4f8b\u5982: .foo.md \u6216 .bar/baz.md )\u4f1a\u88ab MkDocs \u5ffd\u7565\uff0c\u8fd9\u4e0e\u5927\u591a\u6570 web \u670d\u52a1\u5668\u7684\u884c\u4e3a\u76f8\u5339\u914d\u3002 \u6ca1\u6709\u8986\u76d6\u6b64\u884c\u4e3a\u7684\u9009\u9879\u3002 \u4f60\u4e5f\u53ef\u4ee5\u521b\u5efa\u591a\u9875\u6587\u6863\uff0c\u901a\u8fc7\u521b\u5efa\u51e0\u4e2a Markdown \u6587\u4ef6: mkdocs.yml docs/ index.md about.md license.md \u60a8\u4f7f\u7528\u7684\u6587\u4ef6\u5e03\u5c40\u51b3\u5b9a\u4e86\u6240\u751f\u6210\u9875\u9762\u6240\u4f7f\u7528\u7684 URLs\u3002 \u6839\u636e\u4e0a\u9762\u7684\u5e03\u5c40\uff0c\u5c06\u4e3a\u4ee5\u4e0b URLs \u751f\u6210\u9875\u9762: / /about/ /license/ \u5982\u679c\u66f4\u9002\u5408\u4f60\u7684\u6587\u6863\u5e03\u5c40\uff0c\u4f60\u4e5f\u53ef\u4ee5\u5c06 Markdown \u6587\u4ef6\u5305\u542b\u5728\u5d4c\u5957\u76ee\u5f55\u4e2d\u3002 docs/ index.md user-guide/getting-started.md user-guide/configuration-options.md license.md \u5d4c\u5957\u76ee\u5f55\u4e2d\u7684\u6e90\u6587\u4ef6\u5c06\u5bfc\u81f4\u751f\u6210\u5e26\u6709\u5d4c\u5957 URLs \u7684\u9875\u9762\uff0c\u5982\u4e0b\u6240\u793a: / /user-guide/getting-started/ /user-guide/configuration-options/ /license/ \u5728 \u6587\u6863\u76ee\u5f55 \u4e2d\uff0c\u4efb\u4f55\u6ca1\u6709\u88ab\u6807\u8bc6\u4e3a Markdown \u6587\u4ef6(\u901a\u8fc7\u5176\u6587\u4ef6\u6269\u5c55\u540d)\u7684\u6587\u4ef6\u90fd\u4f1a\u88ab MkDocs \u590d\u5236\u5230\u6784\u5efa\u7684\u7ad9\u70b9\u4e2d\u3002 \u8be6\u60c5\u89c1\u4e0b\u9762 \u5982\u4f55\u94fe\u63a5\u5230\u56fe\u7247\u548c\u5a92\u4f53 \u3002","title":"\u6587\u4ef6\u5e03\u5c40"},{"location":"user-guide/writing-your-docs/#_3","text":"\u5f53\u4e00\u4e2a\u76ee\u5f55\u88ab\u8bf7\u6c42\u65f6\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u5927\u591a\u6570 web \u670d\u52a1\u5668\u5c06\u8fd4\u56de\u4e00\u4e2a\u5305\u542b\u5728\u8be5\u76ee\u5f55\u4e2d\u7684\u7d22\u5f15\u6587\u4ef6(\u901a\u5e38\u547d\u540d\u4e3a index.html )\uff0c\u5982\u679c\u76ee\u5f55\u5b58\u5728\u7684\u8bdd\u3002 \u56e0\u6b64\uff0c\u4e0a\u9762\u6240\u6709\u793a\u4f8b\u4e2d\u7684\u4e3b\u9875\u90fd\u88ab\u547d\u540d\u4e3a index.md \uff0c MkDocs \u5728\u6784\u5efa\u7f51\u7ad9\u65f6\u5c06\u5176\u5448\u73b0\u4e3a index.html \u3002 \u8bb8\u591a\u5b58\u50a8\u5e93\u6258\u7ba1\u7ad9\u70b9\u901a\u8fc7\u5728\u6d4f\u89c8\u76ee\u5f55\u5185\u5bb9\u65f6\u663e\u793a README \u6587\u4ef6\u7684\u5185\u5bb9\uff0c\u4e3a README \u6587\u4ef6\u63d0\u4f9b\u4e86\u7279\u6b8a\u5904\u7406\u3002 \u56e0\u6b64\uff0cMkDocs \u5c06\u5141\u8bb8\u60a8\u5c06\u7d22\u5f15\u9875\u547d\u540d\u4e3a README.md \u800c\u4e0d\u662f index.md \u3002 \u8fd9\u6837\uff0c\u5f53\u7528\u6237\u6d4f\u89c8\u60a8\u7684\u6e90\u4ee3\u7801\u65f6\uff0c\u5b58\u50a8\u5e93\u4e3b\u673a\u53ef\u4ee5\u663e\u793a\u8be5\u76ee\u5f55\u7684\u7d22\u5f15\u9875\uff0c\u56e0\u4e3a\u5b83\u662f\u4e00\u4e2a README \u6587\u4ef6\u3002 \u7136\u800c\uff0c\u5f53 MkDocs \u5448\u73b0\u4f60\u7684\u7f51\u7ad9\u65f6\uff0c\u6587\u4ef6\u5c06\u88ab\u91cd\u547d\u540d\u4e3a index.html \uff0c\u4ee5\u4fbf\u670d\u52a1\u5668\u5c06\u5176\u4f5c\u4e3a\u4e00\u4e2a\u9002\u5f53\u7684\u7d22\u5f15\u6587\u4ef6\u3002 \u5982\u679c\u5728\u540c\u4e00\u4e2a\u76ee\u5f55\u4e2d\u53d1\u73b0 index.md \u6587\u4ef6\u548c README.md \u6587\u4ef6\uff0c\u5219\u4f7f\u7528 index.md \u6587\u4ef6\uff0c\u800c README.md \u6587\u4ef6\u88ab\u5ffd\u7565\u3002","title":"\u7d22\u5f15\u9875"},{"location":"user-guide/writing-your-docs/#_4","text":"The nav configuration setting in your mkdocs.yml file defines which pages are included in the global site navigation menu as well as the structure of that menu. If not provided, the navigation will be automatically created by discovering all the Markdown files in the documentation directory . An automatically created navigation configuration will always be sorted alphanumerically by file name (except that index files will always be listed first within a sub-section). You will need to manually define your navigation configuration if you would like your navigation menu sorted differently. A minimal navigation configuration could look like this: nav: - \"index.md\" - \"about.md\" All paths in the navigation configuration must be relative to the docs_dir configuration option. If that option is set to the default value, docs , the source files for the above configuration would be located at docs/index.md and docs/about.md . The above example will result in two navigation items being created at the top level and with their titles inferred from the contents of the Markdown file or, if no title is defined within the file, of the file name. To override the title in the nav setting add a title right before the filename. nav: - Home: \"index.md\" - About: \"about.md\" Note that if a title is defined for a page in the navigation, that title will be used throughout the site for that page and will override any title defined within the page itself. Navigation sub-sections can be created by listing related pages together under a section title. For example: nav: - Home: \"index.md\" - \"User Guide\": - \"Writing your docs\": \"writing-your-docs.md\" - \"Styling your docs\": \"styling-your-docs.md\" - About: - \"License\": \"license.md\" - \"Release Notes\": \"release-notes.md\" With the above configuration we have three top level items: \"Home\", \"User Guide\" and \"About.\" \"Home\" is a link to the homepage for the site. Under the \"User Guide\" section two pages are listed: \"Writing your docs\" and \"Styling your docs.\" Under the \"About\" section two more pages are listed: \"License\" and \"Release Notes.\" Note that a section cannot have a page assigned to it. Sections are only containers for child pages and sub-sections. You may nest sections as deeply as you like. However, be careful that you don't make it too difficult for your users to navigate through the site navigation by over-complicating the nesting. While sections may mirror your directory structure, they do not have to. Any pages not listed in your navigation configuration will still be rendered and included with the built site, however, they will not be linked from the global navigation and will not be included in the previous and next links. Such pages will be \"hidden\" unless linked to directly.","title":"\u914d\u7f6e\u9875\u9762\u548c\u5bfc\u822a"},{"location":"user-guide/writing-your-docs/#markdown","text":"MkDocs \u9875\u9762\u5fc5\u987b\u4f7f\u7528 Markdown \u7f16\u5199\uff0c\u8fd9\u662f\u4e00\u79cd\u8f7b\u91cf\u7ea7\u6807\u8bb0\u8bed\u8a00\uff0c\u53ef\u751f\u6210\u6613\u4e8e\u9605\u8bfb\u3001\u6613\u4e8e\u7f16\u5199\u7684\u7eaf\u6587\u672c\u6587\u6863\uff0c\u53ef\u4ee5\u4ee5\u53ef\u9884\u6d4b\u7684\u65b9\u5f0f\u5c06\u5176\u8f6c\u6362\u4e3a\u6709\u6548\u7684 HTML \u6587\u6863\u3002 MkDocs \u4f7f\u7528 Python-Markdown \u5e93\u5c06 Markdown \u6587\u6863\u5448\u73b0\u4e3a HTML\u3002 Python-Markdown \u51e0\u4e4e\u5b8c\u5168\u7b26\u5408 \u53c2\u8003\u5b9e\u73b0 \uff0c\u5c3d\u7ba1\u6709\u4e00\u4e9b\u975e\u5e38\u5c0f\u7684 \u5dee\u5f02 \u3002 \u9664\u4e86\u5728\u6240\u6709 Markdown \u5b9e\u73b0\u4e2d\u901a\u7528\u7684\u57fa\u672c Markdown \u8bed\u6cd5 \u4e4b\u5916\uff0cMkDocs \u8fd8\u652f\u6301\u4f7f\u7528 Python-Markdown \u6269\u5c55 \u6269\u5c55 Markdown \u8bed\u6cd5\u3002 \u5173\u4e8e\u5982\u4f55\u542f\u7528\u6269\u5c55\uff0c\u8bf7\u53c2\u9605 MkDocs \u7684 markdown_extensions \u914d\u7f6e\u8bbe\u7f6e\u3002 MkDocs \u9ed8\u8ba4\u5305\u542b\u4e00\u4e9b\u6269\u5c55\uff0c\u5982\u4e0b\u6240\u793a\u3002","title":"\u7528 Markdown \u5199\u4f5c"},{"location":"user-guide/writing-your-docs/#_5","text":"MkDocs allows you to interlink your documentation by using regular Markdown links . However, there are a few additional benefits to formatting those links specifically for MkDocs as outlined below.","title":"\u5185\u90e8\u94fe\u63a5"},{"location":"user-guide/writing-your-docs/#_6","text":"When linking between pages in the documentation you can simply use the regular Markdown linking syntax, including the relative path to the Markdown document you wish to link to. Please see the [project license](license.md) for further details. When the MkDocs build runs, these Markdown links will automatically be transformed into an HTML hyperlink to the appropriate HTML page. Warning \u5b98\u65b9\u4e0d\u652f\u6301\u4f7f\u7528\u5e26\u6709\u94fe\u63a5\u7684\u7edd\u5bf9\u8def\u5f84\u3002\u76f8\u5bf9\u8def\u5f84\u7531 MkDocs \u8c03\u6574\uff0c\u4ee5\u786e\u4fdd\u5b83\u4eec\u59cb\u7ec8\u76f8\u5bf9\u4e8e\u9875\u9762\u3002 \u7edd\u5bf9\u8def\u5f84\u6839\u672c\u4e0d\u9700\u8981\u4fee\u6539\u3002 \u8fd9\u610f\u5473\u7740\u4f7f\u7528\u7edd\u5bf9\u8def\u5f84\u7684\u94fe\u63a5\u53ef\u80fd\u5728\u672c\u5730\u73af\u5883\u4e2d\u6b63\u5e38\u5de5\u4f5c\uff0c\u4f46\u4e00\u65e6\u5c06\u5b83\u4eec\u90e8\u7f72\u5230\u751f\u4ea7\u670d\u52a1\u5668\u4e0a\uff0c\u5b83\u4eec\u53ef\u80fd\u4f1a\u4e2d\u65ad\u3002 \u5982\u679c\u76ee\u6807\u6587\u6863\u6587\u4ef6\u5728\u53e6\u4e00\u4e2a\u76ee\u5f55\u4e2d\uff0c\u5219\u9700\u8981\u786e\u4fdd\u5728\u94fe\u63a5\u4e2d\u5305\u542b\u4efb\u4f55\u76f8\u5bf9\u76ee\u5f55\u8def\u5f84\u3002 Please see the [project license](../about/license.md) for further details. MkDocs \u4f7f\u7528 toc \u6269\u5c55\u4e3a Markdown \u6587\u6863\u4e2d\u7684\u6bcf\u4e2a\u6807\u9898\u751f\u6210 ID\u3002 \u60a8\u53ef\u4ee5\u4f7f\u7528\u8be5 ID \u901a\u8fc7\u4f7f\u7528\u951a\u94fe\u63a5\u94fe\u63a5\u5230\u76ee\u6807\u6587\u6863\u4e2d\u7684\u67d0\u4e2a\u90e8\u5206\u3002 \u751f\u6210\u7684 HTML \u5c06\u6b63\u786e\u5730\u8f6c\u6362\u94fe\u63a5\u7684\u8def\u5f84\u90e8\u5206\uff0c\u800c\u4fdd\u6301\u951a\u7684\u90e8\u5206\u4e0d\u53d8\u3002 Please see the [project license](about.md#license) for further details. Note that IDs are created from the text of a header. All text is converted to lowercase and any disallowed characters, including white-space, are converted to dashes. Consecutive dashes are then reduced to a single dash. There are a few configuration settings provided by the toc extension which you can set in your mkdocs.yml configuration file to alter the default behavior: permalink Generate permanent links at the end of each header. Default: False . When set to True the paragraph symbol (\u00b6 or &para; ) is used as the link text. When set to a string, the provided string is used as the link text. For example, to use the hash symbol ( # ) instead, do: markdown_extensions: - toc: permalink: \"#\" baselevel Base level for headers. Default: 1 . This setting allows the header levels to be automatically adjusted to fit within the hierarchy of your HTML templates. For example, if the Markdown text for a page should not contain any headers higher than level 2 ( <h2> ), do: markdown_extensions: - toc: baselevel: 2 Then any headers in your document would be increased by 1. For example, the header # Header would be rendered as a level 2 header ( <h2> ) in the HTML output. separator Word separator. Default: - . Character which replaces white-space in generated IDs. If you prefer underscores, then do: markdown_extensions: - toc: separator: \"_\" Note that if you would like to define multiple of the above settings, you must do so under a single toc entry in the markdown_extensions configuration option. markdown_extensions: - toc: permalink: \"#\" baselevel: 2 separator: \"_\"","title":"\u94fe\u63a5\u5230\u9875\u9762"},{"location":"user-guide/writing-your-docs/#_7","text":"As well as the Markdown source files, you can also include other file types in your documentation, which will be copied across when generating your documentation site. These might include images and other media. For example, if your project documentation needed to include a [GitHub pages CNAME file] and a PNG formatted screenshot image then your file layout might look as follows: mkdocs.yml docs/ CNAME index.md about.md license.md img/ screenshot.png To include images in your documentation source files, simply use any of the regular Markdown image syntaxes: Cupcake indexer is a snazzy new project for indexing small cakes. ![Screenshot](img/screenshot.png) *Above: Cupcake indexer in progress* Your image will now be embedded when you build the documentation, and should also be previewed if you're working on the documentation with a Markdown editor.","title":"\u94fe\u63a5\u5230\u56fe\u50cf\u548c\u5a92\u4f53"},{"location":"user-guide/writing-your-docs/#raw-html","text":"Markdown \u5141\u8bb8\u6587\u6863\u4f5c\u8005\u5728 Markdown \u8bed\u6cd5\u4e0d\u80fd\u6ee1\u8db3\u4f5c\u8005\u9700\u6c42\u65f6\u4f7f\u7528\u539f\u59cb HTML\u3002 MkDocs \u5e76\u6ca1\u6709\u5728\u8fd9\u65b9\u9762\u9650\u5236 Markdown\u3002 \u7136\u800c\uff0c\u7531\u4e8e Markdown \u89e3\u6790\u5668\u5ffd\u7565\u4e86\u6240\u6709\u539f\u59cb HTML, MkDocs \u65e0\u6cd5\u9a8c\u8bc1\u6216\u8f6c\u6362\u539f\u59cb HTML \u4e2d\u5305\u542b\u7684\u94fe\u63a5\u3002 \u5728\u539f\u59cb HTML \u4e2d\u5305\u542b\u5185\u90e8\u94fe\u63a5\u65f6\uff0c\u9700\u8981\u4e3a\u5448\u73b0\u7684\u6587\u6863\u624b\u52a8\u8bbe\u7f6e\u9002\u5f53\u7684\u94fe\u63a5\u683c\u5f0f\u3002","title":"\u4ece RAW HTML \u94fe\u63a5"},{"location":"user-guide/writing-your-docs/#_8","text":"MkDocs \u540c\u65f6\u652f\u6301 YAML \u548c MultiMarkdown \u98ce\u683c\u7684\u5143\u6570\u636e(\u901a\u5e38\u79f0\u4e3a front-matter)\u3002 \u5143\u6570\u636e\u7531 Markdown \u6587\u6863\u5f00\u5934\u5b9a\u4e49\u7684\u4e00\u7cfb\u5217\u5173\u952e\u5b57\u548c\u503c\u7ec4\u6210\uff0c\u8fd9\u4e9b\u5173\u952e\u5b57\u548c\u503c\u4ece Markdown \u6587\u6863\u4e2d\u5265\u79bb \u6587\u6863\u5728\u88ab Python-Markdown \u5904\u7406\u4e4b\u524d\u3002 \u952e/\u503c\u5bf9\u7531 MkDocs \u4f20\u9012\u7ed9\u9875\u9762\u6a21\u677f\u3002 \u56e0\u6b64\uff0c\u5982\u679c\u4e3b\u9898\u5305\u542b\u652f\u6301\uff0c\u5219\u4efb\u4f55\u952e\u7684\u503c\u90fd\u53ef\u4ee5\u663e\u793a\u5728\u9875\u9762\u4e0a\u6216\u7528\u4e8e\u63a7\u5236\u9875\u9762\u5448\u73b0\u3002 \u5982\u679c\u6709\u7684\u8bdd\uff0c\u8bf7\u53c2\u9605\u60a8\u7684\u4e3b\u9898\u6587\u6863\u4ee5\u83b7\u5f97\u6709\u5173\u53ef\u80fd\u652f\u6301\u54ea\u4e9b\u952e\u7684\u4fe1\u606f\u3002 \u9664\u4e86\u5728\u6a21\u677f\u4e2d\u663e\u793a\u4fe1\u606f\u5916\uff0cMkDocs \u8fd8\u652f\u6301\u4e00\u4e9b\u9884\u5b9a\u4e49\u7684\u5143\u6570\u636e\u952e\uff0c\u8fd9\u4e9b\u5143\u6570\u636e\u952e\u53ef\u4ee5\u6539\u53d8 MkDocs \u5bf9\u4e8e\u7279\u5b9a\u9875\u9762\u7684\u884c\u4e3a\u3002 \u652f\u6301\u4ee5\u4e0b\u6309\u952e: template \u4e0e\u5f53\u524d\u9875\u9762\u4e00\u8d77\u4f7f\u7528\u7684\u6a21\u677f\u3002 \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cMkDocs \u4f7f\u7528\u4e3b\u9898\u7684 main.html \u6a21\u677f\u6765\u6e32\u67d3 Markdown \u9875\u9762\u3002 \u60a8\u53ef\u4ee5\u4f7f\u7528 template \u5143\u6570\u636e\u952e\u4e3a\u7279\u5b9a\u9875\u9762\u5b9a\u4e49\u4e0d\u540c\u7684\u6a21\u677f\u6587\u4ef6\u3002 \u6a21\u677f\u6587\u4ef6\u5fc5\u987b\u5728\u4e3b\u9898\u73af\u5883\u4e2d\u5b9a\u4e49\u7684\u8def\u5f84\u4e0a\u53ef\u7528\u3002 title \u7528\u4e8e\u6587\u6863\u7684\"title\"\u3002 MkDocs \u5c06\u5c1d\u8bd5\u6309\u4ee5\u4e0b\u987a\u5e8f\u786e\u5b9a\u6587\u6863\u7684\u6807\u9898: \u5728\u6587\u6863\u7684 nav \u914d\u7f6e\u8bbe\u7f6e\u4e2d\u5b9a\u4e49\u7684\u6807\u9898\u3002 \u5b9a\u4e49\u5728\u6587\u6863\u7684 title \u5143\u6570\u636e\u952e\u4e2d\u7684\u6807\u9898\u3002 \u6587\u6863\u6b63\u6587\u7b2c\u4e00\u884c\u4e0a\u7684\u4e00\u7ea7 Markdown \u6807\u5934\u3002\u8bf7\u6ce8\u610f\uff0c\u4e0d\u652f\u6301 Setext-style \u62a5\u5934\u3002 \u6587\u4ef6\u7684\u6587\u4ef6\u540d\u3002 \u5728\u627e\u5230\u4e00\u4e2a\u9875\u9762\u7684\u6807\u9898\u540e\uff0cMkDoc \u4e0d\u4f1a\u7ee7\u7eed\u68c0\u67e5\u4e0a\u9762\u5217\u8868\u4e2d\u7684\u4efb\u4f55\u5176\u4ed6\u6765\u6e90\u3002","title":"\u5143\u6570\u636e"},{"location":"user-guide/writing-your-docs/#yaml-style-meta-data","text":"YAML \u98ce\u683c\u7684\u5143\u6570\u636e\u7531 YAML \u952e/\u503c\u5bf9\u7ec4\u6210\uff0c\u5b83\u4eec\u88ab\u5305\u88c5\u5728 YAML \u98ce\u683c\u7684\u5206\u9694\u7b26\u4e2d\uff0c\u7528\u6765\u6807\u8bb0\u5143\u6570\u636e\u7684\u5f00\u59cb\u548c/\u6216\u7ed3\u675f\u3002 \u6587\u6863\u7684\u7b2c\u4e00\u884c\u5fc5\u987b\u662f --- \u3002 \u5143\u6570\u636e\u5728\u5305\u542b\u7ed3\u675f\u5206\u9694\u7b26( --- \u6216 ... )\u7684\u7b2c\u4e00\u884c\u7ed3\u675f\u3002 \u5206\u9694\u7b26\u4e4b\u95f4\u7684\u5185\u5bb9\u88ab\u89e3\u6790\u4e3a YAML \u3002 --- title: My Document summary: A brief description of my document. authors: - Waylan Limberg - Tom Christie date: 2018-07-10 some_url: https://example.com --- This is the first paragraph of the document. YAML \u80fd\u591f\u68c0\u6d4b\u6570\u636e\u7c7b\u578b\u3002 \u56e0\u6b64\uff0c\u5728\u4e0a\u9762\u7684\u4f8b\u5b50\u4e2d\uff0c title , summary \u548c some_url \u7684\u503c\u662f\u5b57\u7b26\u4e32\uff0c authors \u7684\u503c\u662f\u5b57\u7b26\u4e32\u5217\u8868\uff0c date \u7684\u503c\u662f\u4e00\u4e2a datetime.date \u5bf9\u8c61\u3002 \u6ce8\u610f\uff0cYAML \u952e\u662f\u533a\u5206\u5927\u5c0f\u5199\u7684\uff0cMkDocs \u5e0c\u671b\u952e\u90fd\u662f\u5c0f\u5199\u7684\u3002 YAML \u7684\u9876\u5c42\u5fc5\u987b\u662f\u952e/\u503c\u5bf9\u7684\u96c6\u5408\uff0c\u8fd9\u5c06\u5bfc\u81f4\u8fd4\u56de Python dict \u3002 \u5982\u679c\u8fd4\u56de\u4efb\u4f55\u5176\u4ed6\u7c7b\u578b\uff0c\u6216\u8005 YAML \u89e3\u6790\u5668\u9047\u5230\u9519\u8bef\uff0c\u90a3\u4e48 MkDocs \u4e0d\u4f1a\u5c06\u8be5\u8282\u8bc6\u522b\u4e3a\u5143\u6570\u636e\uff0c\u9875\u9762\u7684 meta \u5c5e\u6027\u5c06\u4e3a\u7a7a\uff0c\u5e76\u4e14\u8be5\u8282\u4e0d\u4f1a\u4ece\u6587\u6863\u4e2d\u5220\u9664\u3002","title":"YAML Style Meta-Data"},{"location":"user-guide/writing-your-docs/#multimarkdown-style-meta-data","text":"MultiMarkdown \u98ce\u683c\u7684\u5143\u6570\u636e\u4f7f\u7528 MultiMarkdown \u9879\u76ee\u9996\u6b21\u5f15\u5165\u7684\u683c\u5f0f\u3002 \u6570\u636e\u7531 Markdown \u6587\u6863\u5f00\u5934\u5b9a\u4e49\u7684\u4e00\u7cfb\u5217\u5173\u952e\u5b57\u548c\u503c\u7ec4\u6210\uff0c\u5982\u4e0b\u6240\u793a: Title: My Document Summary: A brief description of my document. Authors: Waylan Limberg Tom Christie Date: January 23, 2018 blank-value: some_url: https://example.com This is the first paragraph of the document. \u5173\u952e\u5b57\u4e0d\u533a\u5206\u5927\u5c0f\u5199\uff0c\u53ef\u4ee5\u7531\u5b57\u6bcd\u3001\u6570\u5b57\u3001 _ \u548c - \u7ec4\u6210\uff0c\u4e14\u5fc5\u987b\u4ee5\u5192\u53f7\u7ed3\u5c3e\u3002 \u8fd9\u4e9b\u503c\u7531\u884c\u4e2d\u5192\u53f7\u540e\u9762\u7684\u4efb\u4f55\u5185\u5bb9\u7ec4\u6210\uff0c\u751a\u81f3\u53ef\u4ee5\u4e3a\u7a7a\u3002 \u5982\u679c\u4e00\u884c\u7f29\u8fdb\u4e86 4 \u4e2a\u6216\u66f4\u591a\u7a7a\u683c\uff0c\u5219\u5047\u5b9a\u8be5\u884c\u662f\u524d\u4e00\u4e2a\u5173\u952e\u5b57\u503c\u7684\u9644\u52a0\u884c\u3002 \u5173\u952e\u5b57\u53ef\u4ee5\u6709\u4efb\u610f\u591a\u7684\u884c\u3002\u6240\u6709\u7684\u884c\u90fd\u8fde\u63a5\u6210\u4e00\u4e2a\u5b57\u7b26\u4e32\u3002 \u7b2c\u4e00\u4e2a\u7a7a\u884c\u7ed3\u675f\u6587\u6863\u7684\u6240\u6709\u5143\u6570\u636e\u3002 \u56e0\u6b64\uff0c\u6587\u6863\u7684\u7b2c\u4e00\u884c\u4e0d\u80fd\u4e3a\u7a7a\u3002 Note \u5bf9\u4e8e MultiMarkdown \u98ce\u683c\u7684\u5143\u6570\u636e\uff0cMkDocs \u4e0d\u652f\u6301 YAML \u98ce\u683c\u7684\u5206\u9694\u7b26( --- \u6216 ... )\u3002 \u4e8b\u5b9e\u4e0a\uff0cMkDocs \u4f9d\u8d56\u4e8e\u5206\u9694\u7b26\u7684\u5b58\u5728\u6216\u4e0d\u5b58\u5728\u6765\u786e\u5b9a\u662f\u5426\u4f7f\u7528 YAML \u98ce\u683c\u7684\u5143\u6570\u636e\u6216 MultiMarkdown \u98ce\u683c\u7684\u5143\u6570\u636e\u3002 \u5982\u679c\u68c0\u6d4b\u5230\u5206\u9694\u7b26\uff0c\u4f46\u5206\u9694\u7b26\u4e4b\u95f4\u7684\u5185\u5bb9\u4e0d\u662f\u6709\u6548\u7684 YAML \u5143\u6570\u636e\uff0cMkDocs \u4e0d\u4f1a\u5c1d\u8bd5\u5c06\u5185\u5bb9\u89e3\u6790\u4e3a MultiMarkdown \u98ce\u683c\u7684\u5143\u6570\u636e\u3002","title":"MultiMarkdown Style Meta-Data"},{"location":"user-guide/writing-your-docs/#tables","text":"The tables extension adds a basic table syntax to Markdown which is popular across multiple implementations. The syntax is rather simple and is generally only useful for simple tabular data. A simple table looks like this: | First Header | Second Header | Third Header | | ------------ | ------------- | ------------ | | Content Cell | Content Cell | Content Cell | | Content Cell | Content Cell | Content Cell | If you wish, you can add a leading and tailing pipe to each line of the table: | First Header | Second Header | Third Header | | ------------ | ------------- | ------------ | | Content Cell | Content Cell | Content Cell | | Content Cell | Content Cell | Content Cell | Specify alignment for each column by adding colons to separator lines: | First Header | Second Header | Third Header | | :----------- | :-----------: | -----------: | | Left | Center | Right | | Left | Center | Right | Note that table cells cannot contain any block level elements and cannot contain multiple lines of text. They can, however, include inline Markdown as defined in Markdown's [syntax] rules. Additionally, a table must be surrounded by blank lines. There must be a blank line before and after the table.","title":"Tables"},{"location":"user-guide/writing-your-docs/#fenced-code-blocks","text":"The fenced code blocks extension adds an alternate method of defining code blocks without indentation. The first line should contain 3 or more backtick ( ` ) characters, and the last line should contain the same number of backtick characters ( ` ): ``` Fenced code blocks are like Standard Markdown\u2019s regular code blocks, except that they\u2019re not indented and instead rely on start and end fence lines to delimit the code block. ``` With this approach, the language can optionally be specified on the first line after the backticks which informs any syntax highlighters of the language used: ```python def fn(): pass ``` Note that fenced code blocks can not be indented. Therefore, they cannot be nested inside list items, blockquotes, etc.","title":"Fenced code blocks"}]}